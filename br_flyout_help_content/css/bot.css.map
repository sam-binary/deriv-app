{"version":3,"sources":["webpack://deriv-bot/./src/assets/sass/scratch/flyout.scss","webpack://deriv-bot/flyout.scss","webpack://deriv-bot/./src/assets/sass/scratch/workspace.scss","webpack://deriv-bot/workspace.scss","webpack://deriv-bot/./src/assets/sass/scratch/toolbox.scss","webpack://deriv-bot/toolbox.scss","webpack://deriv-bot/./src/assets/sass/base/mixins.scss","webpack://deriv-bot/./src/assets/sass/bot.scss","webpack://deriv-bot/bot.scss","webpack://deriv-bot/./src/assets/sass/base/typography.scss"],"names":[],"mappings":";AAAA;;uCCEuC;ADEvC;AAyCA;AAcA;;uCCpDuC;ADwDvC;;ECrDE;ADuFF;;;;;;;;EC9EE;ADqGF;;;;;;;EC7FE;ADyGF;;;;ECpGE;AD2HF;;;;ECtHE;ADyJF;;;;;;;ECjJE;ADmKF;;EChKE;ADoLF;;ECjLE;ADiMF;;;;;;;ECzLE;AD2MF;;;;;;ECpME;ADyNF;;;;;ECnNE;AD6NF;;;;;ECvNE;ADkPF;;;;;EC5OE;ADyQF;;CCtQC;AD4QD;;CCzQC;ADoTD;;;;EC/SE;ADufF;EAKI,kBAAkB;EAClB,WAAW;EACX,yBA/kBuB;EAglBvB,6BAA6B;EAC7B,UAAU;EACV,mBAAmB;EACnB,aAAa;EACb,cAAc;EACd,iBAXqB;EAYrB,gBAAgB;EAChB,0CAplB4C;EAqlB5C,gBAAgB;EAEhB;IACI,cAAc;EAElB;IACI,mBApBiB;IAmBpB;MAIO,oCAAoC;IAJ3C;MAOO,uBAAuB;EAG/B;IACI,iBA7BqB;IA8BrB,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,eAAe;IACf,iBAAiB;IAEjB;MACI,WAAW;MACX,eAAe;MACf,0CA/mBoC;MAgnBpC,mBAzCa;IA2CjB;MACI,yBA3nBe;MA4nBf,cAvnBe;IAynBnB;MACI,kBAAkB;MAClB,6BAA6B;MAC7B,cAroBe;MAkoBlB;QAMO,aAAa;IAGrB;MAEI,gBAAgB;MAChB,yBAnoBoC;MAooBpC,yBA9nByB;EAioBhC;IAEO,mBAAmB;EAEvB;IACI,aAAa;IACb,gBArEa;IAsEb,mBAAmB;EAEvB;IACI,iBAAiB;EAErB;IACI,iBAAiB;IACjB,aAAa;IACb,yBAAyB;EAE7B;IACI,eAAe;IACf,cA9pBe;IA+pBf,kBAAkB;EAEtB;IACI,gBAAgB;IAChB,kBAAkB;EAG1B;IACI,WAAW;IACX,YAAY;IACZ,oBAAoB;EAExB;IACI,WAAW;IACX,YAAY;IACZ,oBAAoB;EAExB;IACI,UAAU;IAEV;MACI,gBAAgB;MAChB,aAAa;MACb,yBA5qByB;IA8qB7B;MACI,cAAc;MACd,gBAAgB;MAChB,2BAA2B;MAH9B;QAMO,kBAAkB;IAG1B;MACI,kBAAkB;MAClB,eAAe;MACf,iBAAiB;IAErB;MACI,iBAAiB;MACjB,oBAAoB;MACpB,+BA/rByB;;AEtBrC;;uCCEuC;ADEvC;AAyCA;AAcA;;uCCpDuC;ADwDvC;;ECrDE;ADuFF;;;;;;;;EC9EE;ADqGF;;;;;;;EC7FE;ADyGF;;;;ECpGE;AD2HF;;;;ECtHE;ADyJF;;;;;;;ECjJE;ADmKF;;EChKE;ADoLF;;ECjLE;ADiMF;;;;;;;ECzLE;AD2MF;;;;;;ECpME;ADyNF;;;;;ECnNE;AD6NF;;;;;ECvNE;ADkPF;;;;;EC5OE;ADyQF;;CCtQC;AD4QD;;CCzQC;ADoTD;;;;EC/SE;ADifF;EACI,kBAAkB;EAClB,YAAY;EACZ,WAAW;;AAGf;EACI,kBAAkB;EAClB,mBAAmB;;AAGvB;EACI,qBAAqB;;AAGzB;EACI,aAAa;;AEhmBjB;;uCCEuC;ADEvC;AAyCA;AAcA;;uCCpDuC;ADwDvC;;ECrDE;ADuFF;;;;;;;;EC9EE;ADqGF;;;;;;;EC7FE;ADyGF;;;;ECpGE;AD2HF;;;;ECtHE;ADyJF;;;;;;;ECjJE;ADmKF;;EChKE;ADoLF;;ECjLE;ADiMF;;;;;;;ECzLE;AD2MF;;;;;;ECpME;ADyNF;;;;;ECnNE;AD6NF;;;;;ECvNE;ADkPF;;;;;EC5OE;ADyQF;;CCtQC;AD4QD;;CCzQC;ADoTD;;;;EC/SE;ADogBF;EAOI,sBALuB;EAMvB,yBAL0B;EAM1B,6BAA6B;EAC7B,gCAAgC;EAChC,aAAa;EACb,sBAAsB;EACtB,gBAAgB;EAChB,6BAA6B;EAC7B,gBAAgB;EAChB,kBAAkB;EAClB,iBAAiB;EACjB,UAAU;EACV,YAAY;EAEZ;IACI,cAAc;IACd,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;IAChB,yBAtBsB;IAuBtB,kBAAkB;EAEtB;IACI,aAAa;IACb,mBAAmB;EAEvB;IACI,aAAa;IACb,YAAY;IAEZ;MACI,iBAjCoB;MAkCpB,UArCe;MElmBnB,6BAA4B;MAA5B,gCAA4B;MAA5B,4BAA4B;MAA5B,2BAA4B;MAEhC,wBAAc;IFwoBV;MACI,kBAtCoB;MErmBxB,8BAA4B;MAA5B,iCAA4B;MAA5B,6BAA4B;MAA5B,4BAA4B;MAEhC,yBAAc;EF6oBd;IACI,UAAU;IACV,cAAc;EAIT;IAEO,yBAvES;EA2EpB;IAGW,yBA9ES;EAqEhB;IAEO,yBAtEY;EA0EvB;IAGW,yBA7EY;EAoEnB;IAEO,yBArEY;EAyEvB;IAGW,yBA5EY;EAmEnB;IAEO,yBApEY;EAwEvB;IAGW,yBA3EY;EAkEnB;IAEO,yBAnEY;EAuEvB;IAGW,yBA1EY;EAiEnB;IAEO,yBAlEY;EAsEvB;IAGW,yBAzEY;EAgEnB;IAEO,yBAjEY;EAqEvB;IAGW,yBAxEY;EA+DnB;IAEO,yBAhEY;EAoEvB;IAGW,yBAvEY;EA8DnB;IAEO,yBA/DY;EAmEvB;IAGW,yBAtEY;EA6DnB;IAEO,yBA9DY;EAkEvB;IAGW,yBArEY;EA4DnB;IAEO,yBA7DY;EAiEvB;IAGW,yBApEY;EA2DnB;IAEO,yBA5DY;EAgEvB;IAGW,yBAnEY;EA0DnB;IAEO,yBA3DY;EA+DvB;IAGW,yBAlEY;EAyDnB;IAEO,yBA1DY;EA8DvB;IAGW,yBAjEY;EAuE5B;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,kBAAkB;EAEtB;IACI,eAAe;IACf,WA5EmB;IA6EnB,kBAAkB;IAHrB;MAMO,kBAAyC;EAGjD;IACI,kBAAkB;IAClB,YAlFwB;IAmFxB,WAAW;EAEf;IACI,gBAAgB;EAEpB;IACI,aAAa;IACb,kBAAkB;IAClB,kBA3FwB;IAwF3B;MAMO,YAAY;MACZ,WAAW;EAGnB;IACI,iBAAiB;IACjB,gBAAgB;EAEpB;IACI,eAAe;IACf,6BA1GsB;IAwGzB;MAKO,gCA7GkB;IAwGzB;MAYmB,oFAA0F;IAZ7G;MAgBe,0CAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;IFysBb;MAYmB,kFAA0F;IAZ7G;MAgBe,wCAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;IFysBb;MAYmB,kFAA0F;IAZ7G;MAgBe,wCAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;IFysBb;MAYmB,oFAA0F;IAZ7G;MAgBe,0CAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;IFysBb;MAYmB,kFAA0F;IAZ7G;MAgBe,wCAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;IFysBb;MAYmB,mFAA0F;IAZ7G;MAgBe,yCAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;IFysBb;MAYmB,mFAA0F;IAZ7G;MAgBe,yCAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;IFysBb;MAYmB,kFAA0F;IAZ7G;MAgBe,wCAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;IFysBb;MAYmB,iFAA0F;IAZ7G;MAgBe,uCAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;IFysBb;MAYmB,mFAA0F;IAZ7G;MAgBe,yCAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;IFysBb;MAYmB,kFAA0F;IAZ7G;MAgBe,wCAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;IFysBb;MAYmB,kFAA0F;IAZ7G;MAgBe,wCAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;IFysBb;MAYmB,iFAA0F;IAZ7G;MAgBe,uCAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;IFysBb;MAYmB,mFAA0F;IAZ7G;MAgBe,yCAA8C;ME3tB1D,4CAA4B;MAA5B,+CAA4B;MAA5B,2CAA4B;MAA5B,0CAA4B;MAEhC,uCAAc;EF+tBd;IACI,eAAe;IACf,6BAhIsB;EAH9B;IAsIQ,aAAa;IACb,kBAAkB;IAClB,yBAAuB;IACvB,WAAW;IACX,eAAe;IACf,gBAAgB;;AG9uBxB;;uCCEuC;ADEvC;AAyCA;AAcA;;uCCpDuC;ADwDvC;;ECrDE;ADuFF;;;;;;;;EC9EE;ADqGF;;;;;;;EC7FE;ADyGF;;;;ECpGE;AD2HF;;;;ECtHE;ADyJF;;;;;;;ECjJE;ADmKF;;EChKE;ADoLF;;ECjLE;ADiMF;;;;;;;ECzLE;AD2MF;;;;;;ECpME;ADyNF;;;;;ECnNE;AD6NF;;;;;ECvNE;ADkPF;;;;;EC5OE;ADyQF;;CCtQC;AD4QD;;CCzQC;ADoTD;;;;EC/SE;ACzFF;EACI,+BAH2B;EAI3B,6CAA6C;EAC7C,kCAAkC;EAClC,mCAAmC;EACnC,kCAAkC;EAClC,8BAA8B;EAC9B,0BAA0B;EAC1B,sBAAsB;;AAG1B;EACI,gBAAgB;;AFgkBpB;EACI,kCAAkC","file":"bot.css","sourcesContent":["/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_WHITE, 0.04),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.28),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_3, 0.04),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.44),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n    ),\n);\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n@mixin vertical-center {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.flyout {\n    $flyout        : &;\n    $default-margin: 15px;\n    $button-padding: 5px 20px;\n\n    position: absolute;\n    left: 250px;\n    background-color: $COLOR_WHITE;\n    max-height: calc(100% - 40px);\n    z-index: 1;\n    border-radius: 10px;\n    padding: 25px;\n    font-size: 2em;\n    margin-left: $default-margin;\n    margin-top: 20px;\n    box-shadow: 0 2px 8px 0 $COLOR_LIGHT_BLACK_2;\n    min-width: 400px;\n\n    &__content {\n        overflow: auto;\n    }\n    &__block-workspace {\n        margin-bottom: $default-margin;\n\n        * .blocklySvg {\n            background-color: inherit !important;\n        }\n        * .blocklyMainBackground {\n            stroke: none !important;\n        }\n    }\n    &__button {\n        padding: $button-padding;\n        border: none;\n        border-radius: 5px;\n        cursor: pointer;\n        font-size: 16px;\n        font-weight: bold;\n\n        &-new {\n            width: 100%;\n            font-size: 100%;\n            box-shadow: 0 2px 8px 0 $COLOR_LIGHT_BLACK_2;\n            margin-bottom: $default-margin;\n        }\n        &-add {\n            background-color: $COLOR_ORANGE;\n            color: $COLOR_WHITE;\n        }\n        &-back {\n            align-self: center;\n            background-color: transparent;\n            color: $COLOR_BLACK;\n\n            &:focus {\n                outline: none;\n            }\n        }\n        &-next,\n        &-previous {\n            margin-left: 1em;\n            color: $COLOR_LIGHT_BLACK_1;\n            background-color: $COLOR_LIGHT_BLACK_4_SOLID;\n        }\n    }\n    &__item {\n        &:not(:last-of-type) {\n            margin-bottom: 30px;\n        }\n        &-header {\n            display: flex;\n            margin-top: $default-margin;\n            margin-bottom: 10px;\n        }\n        &-label {\n            font-weight: bold;\n        }\n        &-buttons {\n            margin-left: auto;\n            display: flex;\n            justify-content: flex-end;\n        }\n        &-info {\n            cursor: pointer;\n            color: $COLOR_RED;\n            margin-left: 0.2em;\n        }\n        &-description {\n            font-size: 0.8em;\n            margin-bottom: 1em;\n        }\n    }\n    &__image {\n        width: 100%;\n        height: auto;\n        border-radius: 0.5em;\n    }\n    &__video {\n        width: 100%;\n        height: 20vh;\n        border-radius: 0.5em;\n    }\n    &__help {\n        padding: 0;\n\n        &-header {\n            padding: 1.2em 0;\n            display: flex;\n            background-color: $COLOR_LIGHT_BLACK_4_SOLID;\n        }\n        &-content {\n            padding: 1.5em;\n            overflow-y: auto;\n            height: calc(100vh - 300px);\n\n            #{$flyout}__item {\n                margin-bottom: 2em;\n            }\n        }\n        &-title {\n            align-self: center;\n            font-size: 25px;\n            font-weight: bold;\n        }\n        &-footer {\n            text-align: right;\n            padding: 1.2em 0.8em;\n            border-top: solid 0.1em $COLOR_LIGHT_BLACK_4_SOLID;\n        }\n    }\n}\n","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n/* stylelint-disable color-no-hex */\n/* stylelint-enable color-no-hex */\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n/*\n * SASS interpolation\n */\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n/*\n * Range Slider Thumb styling is set here\n */\n/*\n * SVG icons colors\n */\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n/*\n    Constants\n*/\n/*\n    Variables\n*/\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n.flyout {\n  position: absolute;\n  left: 250px;\n  background-color: #ffffff;\n  max-height: calc(100% - 40px);\n  z-index: 1;\n  border-radius: 10px;\n  padding: 25px;\n  font-size: 2em;\n  margin-left: 15px;\n  margin-top: 20px;\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.4);\n  min-width: 400px; }\n  .flyout__content {\n    overflow: auto; }\n  .flyout__block-workspace {\n    margin-bottom: 15px; }\n    .flyout__block-workspace * .blocklySvg {\n      background-color: inherit !important; }\n    .flyout__block-workspace * .blocklyMainBackground {\n      stroke: none !important; }\n  .flyout__button {\n    padding: 5px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: bold; }\n    .flyout__button-new {\n      width: 100%;\n      font-size: 100%;\n      box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.4);\n      margin-bottom: 15px; }\n    .flyout__button-add {\n      background-color: #ff9933;\n      color: #ffffff; }\n    .flyout__button-back {\n      align-self: center;\n      background-color: transparent;\n      color: #000000; }\n      .flyout__button-back:focus {\n        outline: none; }\n    .flyout__button-next, .flyout__button-previous {\n      margin-left: 1em;\n      color: rgba(0, 0, 0, 0.8);\n      background-color: #f4f4f6; }\n  .flyout__item:not(:last-of-type) {\n    margin-bottom: 30px; }\n  .flyout__item-header {\n    display: flex;\n    margin-top: 15px;\n    margin-bottom: 10px; }\n  .flyout__item-label {\n    font-weight: bold; }\n  .flyout__item-buttons {\n    margin-left: auto;\n    display: flex;\n    justify-content: flex-end; }\n  .flyout__item-info {\n    cursor: pointer;\n    color: #e31c4b;\n    margin-left: 0.2em; }\n  .flyout__item-description {\n    font-size: 0.8em;\n    margin-bottom: 1em; }\n  .flyout__image {\n    width: 100%;\n    height: auto;\n    border-radius: 0.5em; }\n  .flyout__video {\n    width: 100%;\n    height: 20vh;\n    border-radius: 0.5em; }\n  .flyout__help {\n    padding: 0; }\n    .flyout__help-header {\n      padding: 1.2em 0;\n      display: flex;\n      background-color: #f4f4f6; }\n    .flyout__help-content {\n      padding: 1.5em;\n      overflow-y: auto;\n      height: calc(100vh - 300px); }\n      .flyout__help-content .flyout__item {\n        margin-bottom: 2em; }\n    .flyout__help-title {\n      align-self: center;\n      font-size: 25px;\n      font-weight: bold; }\n    .flyout__help-footer {\n      text-align: right;\n      padding: 1.2em 0.8em;\n      border-top: solid 0.1em #f4f4f6; }\n","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_WHITE, 0.04),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.28),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_3, 0.04),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.44),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n    ),\n);\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n#scratch_area {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n}\n\n#scratch_div {\n    position: absolute;\n    top: 0px !important;\n}\n\n.blocklyText {\n    fill: #000 !important;\n}\n\n.blocklyMainWorkspaceScrollbar {\n    display: none;\n}","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n/* stylelint-disable color-no-hex */\n/* stylelint-enable color-no-hex */\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n/*\n * SASS interpolation\n */\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n/*\n * Range Slider Thumb styling is set here\n */\n/*\n * SVG icons colors\n */\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n/*\n    Constants\n*/\n/*\n    Variables\n*/\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n#scratch_area {\n  position: absolute;\n  height: 100%;\n  width: 100%; }\n\n#scratch_div {\n  position: absolute;\n  top: 0px !important; }\n\n.blocklyText {\n  fill: #000 !important; }\n\n.blocklyMainWorkspaceScrollbar {\n  display: none; }\n","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_WHITE, 0.04),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.28),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_3, 0.04),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.44),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n    ),\n);\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n@import '../base/mixins';\n\n$category-colours: (\n    search          : #afffda,\n    trade_parameters   : #30409f,\n    purchase_conditions: #00897b,\n    sell_conditions    : #78909c,\n    trade_results      : #d81a60,\n    technical_analysis : #689e38,\n    utility            : #8e25aa,\n    math               : #fc8b01,\n    text               : #5d4037,\n    logic              : #1876d2,\n    lists              : #e53836,\n    custom_functions   : #00acc1,\n    variables          : #616161,\n    loops              : #afb42b,\n);\n\n.toolbox {\n    $toolbox         : &;\n    $white           : #fff;\n    $lightgrey       : #ebebeb;\n    $grey            : #f4f4f6;\n    $category-text-spacing: 15px;\n\n    background-color: $white;\n    border: 1px solid $lightgrey;\n    border-top-right-radius: 10px;\n    border-bottom-right-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    margin-top: 20px;\n    max-height: calc(100% - 40px);\n    overflow: hidden;\n    position: absolute;\n    user-select: none;\n    z-index: 1;\n    width: 250px;\n\n    &__header {\n        padding: 0.5em;\n        position: relative;\n        font-weight: bold;\n        font-size: 1.6em;\n        background-color: $grey;\n        text-align: center;\n    }\n    &__item {\n        display: flex;\n        flex-direction: row;\n    }\n    &__category-arrow {\n        display: flex;\n        margin: auto;\n\n        &--back {\n            margin-left: $category-text-spacing;\n            fill: $white;\n            @include vendor(transform, rotate(90deg));\n        }\n        &--open {\n            margin-right: $category-text-spacing;\n            @include vendor(transform, rotate(270deg));\n        }\n    }\n    &__category-colour {\n        width: 5px;\n        flex-shrink: 0;\n    }\n    @each $category, $colour in $category-colours {\n        &__category {\n            &--#{$category} {\n                #{$toolbox}__category-colour {\n                    background-color: $colour;\n                }\n            }\n        }\n        &__category-return {\n            #{$toolbox}__category {\n                &--#{$category} {\n                    background-color: $colour;\n                }\n            }\n        }\n    }\n\n    &__category-menu {\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n        min-height: 0;\n        overflow-y: auto;\n        overflow-x: hidden;\n    }\n    &__category-return {\n        cursor: pointer;\n        color: $white;\n        text-align: center;\n\n        #{$toolbox}__label {\n            margin-left: -($category-text-spacing * 2);\n        }\n    }\n    &__category-text {\n        align-self: center;\n        margin: $category-text-spacing;\n        width: 100%;\n    }\n    &__description {\n        font-size: 1.3em;\n    }\n    &__icon {\n        display: flex;\n        align-self: center;\n        margin-right: $category-text-spacing;\n\n        > svg {\n            height: 25px;\n            width: 25px;\n        }\n    }\n    &__label {\n        font-weight: bold;\n        font-size: 1.6em;\n    }\n    &__row {\n        cursor: pointer;\n        border-top: 1px solid $lightgrey;\n\n        &:last-of-type {\n            border-bottom: 1px solid $lightgrey;\n        }\n\n        @each $category, $colour in $category-colours {\n            #{$toolbox}__category {\n                &--#{$category} {\n                    &:hover:not(#{$toolbox}__category--selected) {\n                        background-image: linear-gradient(to right, $white 25%, transparentize($colour, 0.8) 100%);\n                    }\n                }\n                &--#{$category}#{$toolbox}__category--selected {\n                    background-color: transparentize($colour, 0.9);\n                    @include vendor(transition, background-color 0.25s ease);\n                }\n            }\n        }\n    }\n    &__separator {\n        padding: 20px 0;\n        border-top: 1px solid $lightgrey;\n    }\n    #search_input {\n        padding: 10px;\n        border-radius: 5px;\n        border: solid $grey 1px;\n        margin: 3px;\n        font-size: 14px;\n        font-weight: 700;\n    }\n}","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n/* stylelint-disable color-no-hex */\n/* stylelint-enable color-no-hex */\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n/*\n * SASS interpolation\n */\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n/*\n * Range Slider Thumb styling is set here\n */\n/*\n * SVG icons colors\n */\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n/*\n    Constants\n*/\n/*\n    Variables\n*/\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n.toolbox {\n  background-color: #fff;\n  border: 1px solid #ebebeb;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  max-height: calc(100% - 40px);\n  overflow: hidden;\n  position: absolute;\n  user-select: none;\n  z-index: 1;\n  width: 250px; }\n  .toolbox__header {\n    padding: 0.5em;\n    position: relative;\n    font-weight: bold;\n    font-size: 1.6em;\n    background-color: #f4f4f6;\n    text-align: center; }\n  .toolbox__item {\n    display: flex;\n    flex-direction: row; }\n  .toolbox__category-arrow {\n    display: flex;\n    margin: auto; }\n    .toolbox__category-arrow--back {\n      margin-left: 15px;\n      fill: #fff;\n      -moz-transform: rotate(90deg);\n      -webkit-transform: rotate(90deg);\n      -ms-transform: rotate(90deg);\n      -o-transform: rotate(90deg);\n      transform: rotate(90deg); }\n    .toolbox__category-arrow--open {\n      margin-right: 15px;\n      -moz-transform: rotate(270deg);\n      -webkit-transform: rotate(270deg);\n      -ms-transform: rotate(270deg);\n      -o-transform: rotate(270deg);\n      transform: rotate(270deg); }\n  .toolbox__category-colour {\n    width: 5px;\n    flex-shrink: 0; }\n  .toolbox__category--search .toolbox__category-colour {\n    background-color: #afffda; }\n  .toolbox__category-return .toolbox__category--search {\n    background-color: #afffda; }\n  .toolbox__category--trade_parameters .toolbox__category-colour {\n    background-color: #30409f; }\n  .toolbox__category-return .toolbox__category--trade_parameters {\n    background-color: #30409f; }\n  .toolbox__category--purchase_conditions .toolbox__category-colour {\n    background-color: #00897b; }\n  .toolbox__category-return .toolbox__category--purchase_conditions {\n    background-color: #00897b; }\n  .toolbox__category--sell_conditions .toolbox__category-colour {\n    background-color: #78909c; }\n  .toolbox__category-return .toolbox__category--sell_conditions {\n    background-color: #78909c; }\n  .toolbox__category--trade_results .toolbox__category-colour {\n    background-color: #d81a60; }\n  .toolbox__category-return .toolbox__category--trade_results {\n    background-color: #d81a60; }\n  .toolbox__category--technical_analysis .toolbox__category-colour {\n    background-color: #689e38; }\n  .toolbox__category-return .toolbox__category--technical_analysis {\n    background-color: #689e38; }\n  .toolbox__category--utility .toolbox__category-colour {\n    background-color: #8e25aa; }\n  .toolbox__category-return .toolbox__category--utility {\n    background-color: #8e25aa; }\n  .toolbox__category--math .toolbox__category-colour {\n    background-color: #fc8b01; }\n  .toolbox__category-return .toolbox__category--math {\n    background-color: #fc8b01; }\n  .toolbox__category--text .toolbox__category-colour {\n    background-color: #5d4037; }\n  .toolbox__category-return .toolbox__category--text {\n    background-color: #5d4037; }\n  .toolbox__category--logic .toolbox__category-colour {\n    background-color: #1876d2; }\n  .toolbox__category-return .toolbox__category--logic {\n    background-color: #1876d2; }\n  .toolbox__category--lists .toolbox__category-colour {\n    background-color: #e53836; }\n  .toolbox__category-return .toolbox__category--lists {\n    background-color: #e53836; }\n  .toolbox__category--custom_functions .toolbox__category-colour {\n    background-color: #00acc1; }\n  .toolbox__category-return .toolbox__category--custom_functions {\n    background-color: #00acc1; }\n  .toolbox__category--variables .toolbox__category-colour {\n    background-color: #616161; }\n  .toolbox__category-return .toolbox__category--variables {\n    background-color: #616161; }\n  .toolbox__category--loops .toolbox__category-colour {\n    background-color: #afb42b; }\n  .toolbox__category-return .toolbox__category--loops {\n    background-color: #afb42b; }\n  .toolbox__category-menu {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    min-height: 0;\n    overflow-y: auto;\n    overflow-x: hidden; }\n  .toolbox__category-return {\n    cursor: pointer;\n    color: #fff;\n    text-align: center; }\n    .toolbox__category-return .toolbox__label {\n      margin-left: -30px; }\n  .toolbox__category-text {\n    align-self: center;\n    margin: 15px;\n    width: 100%; }\n  .toolbox__description {\n    font-size: 1.3em; }\n  .toolbox__icon {\n    display: flex;\n    align-self: center;\n    margin-right: 15px; }\n    .toolbox__icon > svg {\n      height: 25px;\n      width: 25px; }\n  .toolbox__label {\n    font-weight: bold;\n    font-size: 1.6em; }\n  .toolbox__row {\n    cursor: pointer;\n    border-top: 1px solid #ebebeb; }\n    .toolbox__row:last-of-type {\n      border-bottom: 1px solid #ebebeb; }\n    .toolbox__row .toolbox__category--search:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(175, 255, 218, 0.2) 100%); }\n    .toolbox__row .toolbox__category--search.toolbox__category--selected {\n      background-color: rgba(175, 255, 218, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n    .toolbox__row .toolbox__category--trade_parameters:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(48, 64, 159, 0.2) 100%); }\n    .toolbox__row .toolbox__category--trade_parameters.toolbox__category--selected {\n      background-color: rgba(48, 64, 159, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n    .toolbox__row .toolbox__category--purchase_conditions:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(0, 137, 123, 0.2) 100%); }\n    .toolbox__row .toolbox__category--purchase_conditions.toolbox__category--selected {\n      background-color: rgba(0, 137, 123, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n    .toolbox__row .toolbox__category--sell_conditions:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(120, 144, 156, 0.2) 100%); }\n    .toolbox__row .toolbox__category--sell_conditions.toolbox__category--selected {\n      background-color: rgba(120, 144, 156, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n    .toolbox__row .toolbox__category--trade_results:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(216, 26, 96, 0.2) 100%); }\n    .toolbox__row .toolbox__category--trade_results.toolbox__category--selected {\n      background-color: rgba(216, 26, 96, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n    .toolbox__row .toolbox__category--technical_analysis:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(104, 158, 56, 0.2) 100%); }\n    .toolbox__row .toolbox__category--technical_analysis.toolbox__category--selected {\n      background-color: rgba(104, 158, 56, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n    .toolbox__row .toolbox__category--utility:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(142, 37, 170, 0.2) 100%); }\n    .toolbox__row .toolbox__category--utility.toolbox__category--selected {\n      background-color: rgba(142, 37, 170, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n    .toolbox__row .toolbox__category--math:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(252, 139, 1, 0.2) 100%); }\n    .toolbox__row .toolbox__category--math.toolbox__category--selected {\n      background-color: rgba(252, 139, 1, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n    .toolbox__row .toolbox__category--text:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(93, 64, 55, 0.2) 100%); }\n    .toolbox__row .toolbox__category--text.toolbox__category--selected {\n      background-color: rgba(93, 64, 55, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n    .toolbox__row .toolbox__category--logic:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(24, 118, 210, 0.2) 100%); }\n    .toolbox__row .toolbox__category--logic.toolbox__category--selected {\n      background-color: rgba(24, 118, 210, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n    .toolbox__row .toolbox__category--lists:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(229, 56, 54, 0.2) 100%); }\n    .toolbox__row .toolbox__category--lists.toolbox__category--selected {\n      background-color: rgba(229, 56, 54, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n    .toolbox__row .toolbox__category--custom_functions:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(0, 172, 193, 0.2) 100%); }\n    .toolbox__row .toolbox__category--custom_functions.toolbox__category--selected {\n      background-color: rgba(0, 172, 193, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n    .toolbox__row .toolbox__category--variables:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(97, 97, 97, 0.2) 100%); }\n    .toolbox__row .toolbox__category--variables.toolbox__category--selected {\n      background-color: rgba(97, 97, 97, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n    .toolbox__row .toolbox__category--loops:hover:not(.toolbox__category--selected) {\n      background-image: linear-gradient(to right, #fff 25%, rgba(175, 180, 43, 0.2) 100%); }\n    .toolbox__row .toolbox__category--loops.toolbox__category--selected {\n      background-color: rgba(175, 180, 43, 0.1);\n      -moz-transition: background-color 0.25s ease;\n      -webkit-transition: background-color 0.25s ease;\n      -ms-transition: background-color 0.25s ease;\n      -o-transition: background-color 0.25s ease;\n      transition: background-color 0.25s ease; }\n  .toolbox__separator {\n    padding: 20px 0;\n    border-top: 1px solid #ebebeb; }\n  .toolbox #search_input {\n    padding: 10px;\n    border-radius: 5px;\n    border: solid #f4f4f6 1px;\n    margin: 3px;\n    font-size: 14px;\n    font-weight: 700; }\n","@mixin vendor($property, $value) {\n    $prefixes: ('moz', 'webkit', 'ms', 'o');\n    @each $prefix in $prefixes {\n        -#{$prefix}-#{$property}: #{$value};\n    }\n    #{$property}: #{$value};\n}","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_WHITE, 0.04),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.28),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_3, 0.04),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.44),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n    ),\n);\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n@import './base/typography';\n\n.main {\n    background: rgba(206, 17, 17, 0.5);\n}","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n/* stylelint-disable color-no-hex */\n/* stylelint-enable color-no-hex */\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n/*\n * SASS interpolation\n */\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n/*\n * Range Slider Thumb styling is set here\n */\n/*\n * SVG icons colors\n */\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n/*\n    Constants\n*/\n/*\n    Variables\n*/\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n@import url(\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&subset=latin,vietnamese,cyrillic-ext,latin-ext,cyrillic\");\n*, html, .body {\n  font-family: roboto, sans-serif;\n  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004);\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n  box-sizing: border-box; }\n\nhtml {\n  font-size: 62.5%; }\n\n.main {\n  background: rgba(206, 17, 17, 0.5); }\n","@at-root {\n    @import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&subset=latin,vietnamese,cyrillic-ext,latin-ext,cyrillic');\n}\n\n$FONT_STACK: roboto, sans-serif;\n\n*, html, .body {\n    font-family: $FONT_STACK;\n    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004);\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n    box-sizing: border-box;\n}\n\nhtml {\n    font-size: 62.5%;\n}"],"sourceRoot":""}