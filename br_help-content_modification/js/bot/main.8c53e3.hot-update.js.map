{"version":3,"sources":["webpack://deriv-bot/./node_modules/blockly/generators/javascript.js","webpack://deriv-bot/./node_modules/scratch-blocks/shim/blockly_compressed_vertical.Blockly.js?5e08","webpack://deriv-bot/./node_modules/scratch-blocks/shim/blockly_compressed_vertical.goog.js?d2bd","webpack://deriv-bot/./src/assets/sass/bot.scss?c14e","webpack://deriv-bot/./src/assets/sass/scratch/flyout.scss?cf05","webpack://deriv-bot/./src/assets/sass/scratch/toolbox.scss?9787","webpack://deriv-bot/./src/assets/sass/scratch/workspace.scss?4372","webpack://deriv-bot/./src/components/flyout-block.jsx","webpack://deriv-bot/./src/components/flyout.jsx","webpack://deriv-bot/./src/scratch/blocks/Advanced/Functions/procedures_callnoreturn.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/Functions/procedures_callreturn.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/Functions/procedures_defnoreturn.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/Functions/procedures_defreturn.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/Functions/procedures_ifreturn.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/List/lists_create_with.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/List/lists_getIndex.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/List/lists_getSublist.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/List/lists_indexOf.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/List/lists_isEmpty.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/List/lists_length.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/List/lists_repeat.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/List/lists_setIndex.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/List/lists_sort.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/List/lists_split.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/List/lists_statement.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/Loops/controls_flow_statements.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/Loops/controls_for.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/Loops/controls_forEach.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/Loops/controls_repeat.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/Loops/controls_repeat_ext.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/Loops/controls_whileUntil.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/Variable/variables_get.js","webpack://deriv-bot/./src/scratch/blocks/Advanced/Variable/variables_set.js","webpack://deriv-bot/./src/scratch/blocks/Binary/After Purchase/after_purchase.js","webpack://deriv-bot/./src/scratch/blocks/Binary/After Purchase/check_result.js","webpack://deriv-bot/./src/scratch/blocks/Binary/After Purchase/read_details.js","webpack://deriv-bot/./src/scratch/blocks/Binary/After Purchase/trade_again.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Before Purchase/ask_price.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Before Purchase/before_purchase.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Before Purchase/payout.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Before Purchase/purchase.js","webpack://deriv-bot/./src/scratch/blocks/Binary/During Purchase/check_sell.js","webpack://deriv-bot/./src/scratch/blocks/Binary/During Purchase/during_purchase.js","webpack://deriv-bot/./src/scratch/blocks/Binary/During Purchase/sell_at_market.js","webpack://deriv-bot/./src/scratch/blocks/Binary/During Purchase/sell_price.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/Parts/fast_ema_period.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/Parts/input_list.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/Parts/period.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/Parts/signal_ema_period.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/Parts/slow_ema_period.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/Parts/std_dev_multiplier_down.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/Parts/std_dev_multiplier_up.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/bb_statement.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/bba_statement.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/ema_statement.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/emaa_statement.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/macda_statement.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/rsi_statement.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/rsia_statement.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/sma_statement.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Indicators/smaa_statement.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tick Analysis/check_direction.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tick Analysis/get_ohlc.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tick Analysis/lastDigitList.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tick Analysis/last_digit.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tick Analysis/ohlc.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tick Analysis/ohlc_values.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tick Analysis/readOhlc.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tick Analysis/tick.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tick Analysis/tick_analysis.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tick Analysis/ticks.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tools/Candle/is_candle_black.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tools/Candle/ohlc_values_in_list.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tools/Candle/read_ohlc_obj.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tools/Misc./balance.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tools/Misc./block_holder.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tools/Misc./loader.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tools/Misc./notify.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tools/Misc./total_profit.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tools/Misc./total_runs.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tools/Time/epoch.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Tools/Time/timeout.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Trade Definition/trade_definition.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Trade Definition/trade_definition_candleinterval.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Trade Definition/trade_definition_contracttype.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Trade Definition/trade_definition_market.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Trade Definition/trade_definition_restartbuysell.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Trade Definition/trade_definition_restartonerror.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Trade Definition/trade_definition_tradeoptions.js","webpack://deriv-bot/./src/scratch/blocks/Binary/Trade Definition/trade_definition_tradetype.js","webpack://deriv-bot/./src/scratch/blocks/Logic/controls_if.js","webpack://deriv-bot/./src/scratch/blocks/Logic/logic_boolean.js","webpack://deriv-bot/./src/scratch/blocks/Logic/logic_compare.js","webpack://deriv-bot/./src/scratch/blocks/Logic/logic_negate.js","webpack://deriv-bot/./src/scratch/blocks/Logic/logic_null.js","webpack://deriv-bot/./src/scratch/blocks/Logic/logic_operation.js","webpack://deriv-bot/./src/scratch/blocks/Logic/logic_ternary.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_arithmetic.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_change.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_constant.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_constrain.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_modulo.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_number.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_number_positive.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_number_property.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_on_list.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_random_float.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_random_int.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_round.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_single.js","webpack://deriv-bot/./src/scratch/blocks/Math/math_trig.js","webpack://deriv-bot/./src/scratch/blocks/Text/text.js","webpack://deriv-bot/./src/scratch/blocks/Text/text_append.js","webpack://deriv-bot/./src/scratch/blocks/Text/text_changeCase.js","webpack://deriv-bot/./src/scratch/blocks/Text/text_charAt.js","webpack://deriv-bot/./src/scratch/blocks/Text/text_getSubstring.js","webpack://deriv-bot/./src/scratch/blocks/Text/text_indexOf.js","webpack://deriv-bot/./src/scratch/blocks/Text/text_isEmpty.js","webpack://deriv-bot/./src/scratch/blocks/Text/text_join.js","webpack://deriv-bot/./src/scratch/blocks/Text/text_length.js","webpack://deriv-bot/./src/scratch/blocks/Text/text_print.js","webpack://deriv-bot/./src/scratch/blocks/Text/text_prompt_ext.js","webpack://deriv-bot/./src/scratch/blocks/Text/text_statement.js","webpack://deriv-bot/./src/scratch/blocks/Text/text_trim.js","webpack://deriv-bot/./src/scratch/hooks/block.js","webpack://deriv-bot/./src/scratch/hooks/block_svg.js","webpack://deriv-bot/./src/scratch/hooks/colours.js","webpack://deriv-bot/./src/scratch/hooks/constant.js","webpack://deriv-bot/./src/scratch/hooks/data_category.js","webpack://deriv-bot/./src/scratch/hooks/field_dropdown.js","webpack://deriv-bot/./src/scratch/hooks/field_image.js","webpack://deriv-bot/./src/scratch/hooks/flyout_base.js","webpack://deriv-bot/./src/scratch/hooks/gesture.js","webpack://deriv-bot/./src/scratch/hooks/icon.js","webpack://deriv-bot/./src/scratch/hooks/procedures.js","webpack://deriv-bot/./src/scratch/hooks/toolbox.js","webpack://deriv-bot/./src/scratch/hooks/variables.js","webpack://deriv-bot/./src/scratch/hooks/workspace_audio.js","webpack://deriv-bot/./src/scratch/hooks/workspace_svg.js","webpack://deriv-bot/./src/scratch/hooks/xml.js","webpack://deriv-bot/./src/scratch/index.js","webpack://deriv-bot/./src/scratch/shared.js","webpack://deriv-bot/./src/scratch/utils.js","webpack://deriv-bot/./src/stores/flyout-store.js"],"names":["FlyoutBlock","render","props","onInfoClick","block_node","getAttribute","Blockly","derivWorkspace","addBlockNode","translate","el","el_block_workspace","componentDidMount","initBlockWorkspace","React","PureComponent","propTypes","PropTypes","any","func","connect","flyout","Flyout","flyout_content","flyout_width","is_visible","width","map","node","index","tag_name","tagName","toUpperCase","Xml","NODE_BLOCK","NODE_LABEL","NODE_BUTTON","callback_key","callback","getButtonCallback","button","flyout_button","targetWorkspace_","getTargetWorkspace","array","number","bool","Blocks","procedures_callnoreturn","init","arguments","argumentVarModels","previousDisabledState","jsonInit","definition","message0","args0","type","name","text","id","colour","Colours","BinaryProcedures","colourSecondary","colourTertiary","previousStatement","nextStatement","tooltip","category","Categories","Functions","meta","onchange","event","setBlockTextColor","workspace","isFlyout","recordUndo","Events","BLOCK_CREATE","ids","indexOf","getProcedureCall","def","getProcedureDefinition","unplug","dispose","data","defType","JSON","stringify","setGroup","group","xml","document","createElement","block","setAttribute","xy","getRelativeToSurfaceXY","x","SNAP_RADIUS","RTL","y","mutation","mutationToDom","appendChild","field","createTextNode","domToWorkspace","BLOCK_DELETE","Procedures","getDefinition","BLOCK_CHANGE","element","blockId","oldGroup","getGroup","console","log","newValue","disabled","setDisabled","getTopBlocks","find","tuple","Names","equals","getFieldValue","renameProcedure","oldName","newName","setFieldValue","setProcedureParameters","paramNames","concat","argumentName","Variables","getOrCreateVariablePackage","updateShape","forEach","i","getField","disable","setValue","enable","FieldLabel","input","appendValueInput","appendField","length","getInput","removeInput","topRow","removeField","container","parameter","domToMutation","xmlElement","args","paramIds","childNodes","childNode","nodeName","toLowerCase","push","getVarModels","customContextMenu","options","isMovable","option","enabled","centerOnBlock","select","functionName","variableDB_","getName","NAME_TYPE","arg","valueToCode","ORDER_COMMA","code","join","procedures_callreturn","output","ORDER_FUNCTION_CALL","procedures_defnoreturn","nameField","setValidator","rename","fieldImage","FieldImage","plusIconLight","onAddClick","appendDummyInput","setStatements","allowedEvents","includes","getProcedureCallers","isInFlyout","setTimeout","promptMessage","prompt","paramName","variable","paramField","setText","initSvg","hasStatements","appendStatementInput","moveInputBefore","updateParams","paramString","optParamIds","getId","varName","varId","getProcedureDef","getAllBlocks","filter","callType","getVars","Msg","PROCEDURES_CREATE_DO","replace","xmlMutation","xmlArg","xmlBlock","ContextMenu","callbackFactory","isCollapsed","argumentVarModel","getOption","VARIABLES_SET_CREATE_GET","xmlField","generateVariableFieldDom","xmlOptionBlock","branch","statementToCode","STATEMENT_PREFIX","prefixLines","INDENT","INFINITE_LOOP_TRAP","returnValue","ORDER_NONE","scrub_","definitions_","procedures_defreturn","plusIconDark","message1","args1","check","align","ALIGN_RIGHT","renameVarById","updateVarName","displayRenamedVar","registerWorkspaceListener","procedures_ifreturn","hasReturnValue","Number","value","isDragging","legal","FUNCTION_TYPES","getSurroundParent","rerender","getInheritedDisabled","condition","lists_create_with","onIconClick","Binary","List","statementBlock","newBlock","requiredParentId","setMovable","connection","getLastConnectionInStatement","previousConnection","END_DRAG","currentBlock","getInputTargetBlock","getNextBlock","elements","Array","isArray","lists_getIndex","MODE_OPTIONS","WHERE_OPTIONS","modeMenu","FieldDropdown","isStatement","updateStatement","setCheck","setColourFromRawValues_","setOutput","updateAt","outputConnection","isAt","INPUT_VALUE","newStatement","oldStatement","setPreviousStatement","setNextStatement","menu","newAt","undefined","mode","where","listOrder","ORDER_MEMBER","list","order","at","getAdjusted","provideFunction_","FUNCTION_NAME_PLACEHOLDER_","lists_getSublist","WHERE_OPTIONS_1","WHERE_OPTIONS_2","setOutputShape","OUTPUT_SHAPE_ROUND","isAt1","isAt2","n","where1","where2","at1","at2","match","ORDER_SUBTRACTION","wherePascalCase","FROM_START","FROM_END","getIndex","listName","lists_indexOf","outputShape","operator","item","oneBasedIndex","ORDER_ADDITION","lists_isEmpty","OUTPUT_SHAPE_HEXAGONAL","isVariable","getAllVariables","findIndex","ORDER_LOGICAL_NOT","lists_length","lists_repeat","repeatCount","lists_setIndex","ORDER_ASSIGNMENT","cacheList","listVar","getDistinctName","xVar","lists_sort","direction","getCompareFunctionName","lists_split","dropdown","newMode","updateType","delimInput","spaceField","insertFieldAt","delimiter","lists_statement","minusIconDark","BinaryLessGray","surroundParent","parentBlock","parentConnection","ORDER_ATOMIC","controls_flow_statements","Loop","keyword","controls_for","variable0","argument0","argument1","increment","addLoopTrap","isNumber","up","parseFloat","step","Math","abs","assignment","statement","startVar","endVar","incVar","incVal","controls_forEach","indexVar","controls_repeat","min","precision","controls_repeat_ext","repeats","String","loopVar","controls_whileUntil","until","maxLoopVar","currentLoopVar","variables_get","variables_set","after_purchase","src","finishSign","height","alt","After_Purchase","stack","contract_check_result","config","lists","CHECK_RESULT","isDescendantOf","checkWith","read_details","DETAILS","detailIndex","trade_again","ask_price","getPurchaseChoices","Before_Purchase","purchaseList","before_purchase","purchase","payout","trade_definition_block","trade_type_block","getChildByType","contract_type_block","trade_type","opposite_name","contract_type","updatePurchaseChoices","check_sell","During_Purchase","during_purchase","sellContract","sell_at_market","sell_price","fast_ema_period","setDeletable","input_list","allowedParents","period","signal_ema_period","slow_ema_period","std_dev_multiplier_down","std_dev_multiplier_up","bb_statement","bbResult","Indicators","blocksInStatement","getBlocksInStatement","requiredParamBlocks","expectValue","childValueToCode","stdDevUp","stdDevDown","bba_statement","ema_statement","emaa_statement","macda_statement","macdFields","macdField","fastEmaPeriod","slowEmaPeriod","signalEmaPeriod","rsi_statement","rsia_statement","sma_statement","getChildFieldValue","smaa_statement","check_direction","CHECK_DIRECTION","Tick_Analysis","get_ohlc","candleIntervals","selectedGranularity","granularity","lastDigitList","last_digit","ohlc","ohlc_values","ohlcFields","ohlcField","read_ohlc","tick","tick_analysis","ticks","is_candle_black","Candle","ohlcObj","ohlc_values_in_list","ohlcList","read_ohlc_obj","balance","balanceTypeField","OUTPUT_SHAPE_SQUARE","BALANCE_TYPE","Miscellaneous","balanceType","block_holder","loader","loadedByMe","loadedVariables","currentUrl","urlField","onFinishEditing_","onFinishEditingUrl","hasKnownUrl","some","loadRemote","then","globalObserver","emit","catch","errorMsg","v","safeName_","toString","notify","NOTIFICATION_TYPE","NOTIFICATION_SOUND","cateogry","notificationType","sound","message","total_profit","total_runs","epoch","Time","timeout","allowedScopes","scope","seconds","trade_definition","message2","message3","message4","message5","defineContract","args2","args3","args4","args5","Trade_Definition","top_blocks","top_block","market_block","selected_market","change_event","BlockChange","fire","blocks_in_trade_options","test","client_store","ApiHelpers","instance","root_store","client","is_logged_in","Error","loginid","account","getToken","candle_interval_block","restart_on_error_block","restart_on_buy_sell_block","symbol","candle_interval","should_restart_on_error","should_restart_on_buysell","opposites","contract_type_list","opposite","Object","keys","initialization","trade_options_statement","trim","trade_definition_candleinterval","slice","BinaryLessPurple","enforceLimitations","trade_definition_market","trade_definition_contracttype","updateContractTypes","top_parent_block","getTopParent","contract_type_field","contract_types","entries","reverse","NOT_AVAILABLE_DROPDOWN_OPTIONS","updateOptions","active_symbols","market_field","submarket_field","CREATE","retrieveActiveSymbols","markets","getMarketDropdownOptions","CHANGE","submarkets","getSubmarketDropdownOptions","getValue","symbol_field","symbols","getSymbolDropdownOptions","trade_definition_restartbuysell","trade_definition_restartonerror","trade_definition_tradeoptions","CURRENCY","selected_symbol","selected_trade_type_category","selected_trade_type","selected_duration","selected_barrier_types","BARRIER_TYPES","updateBarrierInputs","enforceSingleBarrierType","updateDurationInput","updatePredictionInput","createPredictionInput","prediction_range","prediction_input","shadow_block","setShadow","createBarrierInputs","barriers","input_names","values","label","BARRIER_LABELS","fieldRow","should_use_default_unit","contracts_for","getDurations","durations","duration_field_dropdown","duration_input","duration_options","duration","display","unit","target_block","targetBlock","isShadow","min_duration","d","getBarriers","barrier_field_dropdown","ABSOLUTE_BARRIER_DROPDOWN_OPTION","allow_both_types","allow_absolute_type","getPredictionRange","initial_prediction","max","barrier_input_name","should_force_distinct","new_value","other_barrier_input_name","other_barrier_field","has_other_barrier","other_barrier_type","other_barrier_value","has_first_barrier","has_second_barrier","has_prediction","amount","currency","duration_type","duration_value","getBarrierValue","barrier_offset_type","prediction_value","barrier_offset_value","second_barrier_offset_value","trade_definition_tradetype","market","submarket","trade_type_cat","getTradeTypeCategories","categories","trade_type_cat_block","trade_types","getTradeTypes","controls_if","elseIfCount","elseCount","addInputIcon","getAddInputIcon","Logic","parseInt","j","getRemoveInputIcon","newInputNum","isElseStack","onRemoveClick","inputNames","inputName","largerInput","newIndex","k","splice","logic_boolean","logic_compare","operatorMapping","EQ","NEQ","LT","LTE","GT","GTE","ORDER_EQUALITY","ORDER_RELATIONAL","logic_negate","logic_null","logic_operation","selectedOperator","ORDER_LOGICAL_AND","ORDER_LOGICAL_OR","logic_ternary","valueIf","ORDER_CONDITIONAL","valueThen","valueElse","math_arithmetic","Mathematical","operators","ADD","MINUS","MULTIPLY","ORDER_MULTIPLICATION","DIVIDE","ORDER_DIVISION","POWER","math_change","math_constant","constant","math_constrain","argument2","math_modulo","ORDER_MODULUS","math_number","fieldInput","numberValidator","math_number_positive","math_number_property","setOnChange","hasDivisorInput","toolip","divisorInput","inputExists","property","divisor","math_on_list","operation","FUNCTION_CALL","math_random_float","math_random_int","math_round","math_single","ORDER_UNARY_NEGATION","math_trig","Text","quote_","text_append","forceString","strRegExp","text_changeCase","UPPERCASE","LOWERCASE","TITLECASE","textOrder","text_charAt","text_getSubstring","stringName","optAt","FIRST","LAST","text_indexOf","substring","text_isEmpty","text_join","bind","textBlock","shadowBlock","textInput","enforceTextStatementType","text_length","text_print","msg","text_prompt_ext","typeField","text_statement","text_trim","LEFT","RIGHT","BOTH","Block","prototype","getDisplayName","block_meta","display_name","getSiblings","siblings","parent","getParent","getDescendants","child","childType","childField","childBlock","statementInputName","firstBlock","firstBlockInStack","lastConnectionInStack","statementInput","nextParent","getDimensions","Options","media","__webpack_public_path__","fragment","createDocumentFragment","el_injection_div","svg","createDom_","createMainWorkspace_","domToBlock","block_hw","getHeightWidth","isMainBlock","mainBlocks","block_type","isIndependentBlock","INDEPEDENT_BLOCKS","BlockSvg","TAB_WIDTH","superClass_","call","rendered","updateDisabled","added","utils","addClass","svgGroup_","svgPath_","disabledPatternId","removed","removeClass","updateColour","children","getChildren","showContextMenu_","e","readOnly","contextMenu","menuOptions","isDeletable","blockDuplicateOption","isEditable","comments","blockCommentOption","blockDeleteOption","parentBlock_","isShadow_","collapse","collapsed_","expandOption","setCollapsed","collapseOption","disableOption","show","BinaryPurple","DRAG_RADIUS","FLYOUT_DRAG_RADIUS","DataCategory","variableModelList","getVariablesOfType","xmlList","addCreateButton","block_types","search","generateVariableFieldXmlString","variableModel","escapedText","goog","string","htmlEscape","firstVariable","gap","setBlockText","setBlock","textToDom","firstChild","changeBlockText","changeBlock","sort","VariableModel","compareByName","getBlockText","getBlock","buttonXml","dom","createDom","callbackKey","buttonWorkspace","createVariable","toolbox_","showCategory_","registerButtonCallback","opt_default","should_trigger_event","previous_value","has_default_value","menuGenerator_","sourceBlock_","optAlt","optOnClick","optFlipRtl","height_","width_","size_","math","Size","flipRtl_","tooltip_","clickHandler_","inherits","Field","fromJson","replaceMessageReferences","flipRtl","EDITABLE","fieldGroup_","createSvgElement","visible_","style","imageElement_","src_","text_","getSvgRoot","setTooltip","Tooltip","bindMouseEvents","maybeAddClickHandler_","removeNode","mouseDownWrapper_","bindEventWithChecks_","cursor","newTip","setAttributeNS","getFlipRtl","render_","forceRerender","updateWidth","showEditor_","register","createBlock","originalBlock","variablesBeforeCreation","setResizesEnabled","placeNewBlock_","hideChaff","newVariables","getAddedVariables","isEnabled","Create","thisVariable","VarCreate","autoClose","hide","clearSelection","oldBlock","targetWorkspace","svgRootOld","blockToDom","svgRootNew","mainOffsetPixels","getOriginOffsetInPixels","flyoutOffsetPixels","workspace_","oldBlockPosPixels","Coordinate","clientX","clientY","oldBlockOffsetPixels","sum","finalOffsetPixels","difference","finalOffsetMainWs","scale","moveBy","Gesture","updateIsDraggingFromFlyout_","targetBlock_","flyout_","isScrollable","isDragTowardWorkspace","currentDragDeltaXY_","startWorkspace_","updateScreenCalculationsIfScrolled","startBlock_","mostRecentEvent_","Icon","renderIcon","cursorX","collapseHidden","block_","iconGroup_","newCursorX","TOP_MARGIN","SIZE","computeIconLocation","SEP_SPACE_X","flyoutCategory","allProcedures","populateDynamicProcedures","populateProcedures","procedureList","templateName","blocks","isNameUsed","optExclude","procName","WorkspaceDragger","drag","currentDragDeltaXY","metrics","startDragMetrics_","newXY","startScrollXY_","contentLeft","contentTop","viewWidth","contentWidth","viewHeight","contentHeight","updateScroll_","Toolbox","getParentSvg","HtmlDiv","TagName","DIV","el_toolbox_header","el_toolbox_title","textContent","el_toolbox_search","INPUT","addEventListener","toolbox","setVisibility","setSelectedItem","parentNode","insertBefore","cancelCurrentGesture","isRightButton","target","Touch","clearTouchIdentifier","createFlyout_","categoryMenu_","CategoryMenu","populate_","languageTree","position","newTree","populate","category_id","search_term","getElementById","all_variables","all_procedures","split","blockKey","keywords","Function","block_definition","key","block_category","categories_","menuCategory","id_","contents","getContents","fnToApply","getToolboxCategoryCallback","term","blockContents","content","attributes","nodeValue","searched_variables","variables_blocks","uniqueVarBlocks","variableBlock","searched_procedures","procedures_blocks","uniqueProceBlocks","procedureBlock","selected_category","setContents","Category","getMenuItemClassName_","selected","classNames","category_item","selectedItem_","setSelected","is_category_return_","has_child_category_","getCategoryTree","parent_name","parent_id","xml_document","implementation","createDocument","el_xml","parent_category","el_separator","category_nodes","from","findCategory","category_collection","el_category","is_correct_child","initial_toolbox_xml","toolboxDom","el_parent","parentElement","updateToolbox","name_","colour_","contents_","refreshSelection","parent_","el_item","item_","el_return_arrow","ReactDOM","el_colour","el_label","el_toolbox_text","label_","description_","el_description","el_category_arrow","iconURI_","el_icon","class","innerHTML","parentHtml_","bindEvent_","setSelectedItemFactory","custom_","dynamic_","parseContents_","domTree","tag","setColour","isString","hueToRgb","hasColours_","className","horizontalLayout_","table","isSubCategory","is_category","is_separator","row_class","el_row","web_classes","classList","add","toolbox_category","subCategory","offsetHeight","allUsedVarModels","ws","variableHash","create","blockVariables","blockVariable","variableList","WorkspaceAudio","preload","WorkspaceSvg","scrollbar","warn","getBlockById","heightWidth","blockCenterY","multiplier","blockCenterX","pixelX","pixelY","getMetrics","scrollToBlockX","scrollToBlockY","halfViewWidth","halfViewHeight","scrollToCenterX","scrollToCenterY","set","last_block","last_block_xy","extra_spacing","startHat_","START_HAT_HEIGHT","NODE_SHADOW","scratchWorkspaceInit","el_scratch_area","el_scratch_div","el_app_contents","fetch","response","toolbox_xml","main_xml","inject","grid","spacing","trashcan","zoom","wheel","el_blockly_svg","querySelector","contains","onWorkspaceResize","offsetLeft","offsetTop","offsetParent","left","top","offsetWidth","svgResize","window","disableStrayBlocks","loadWorkspace","mainWorkspace","clear","addLoadersFirst","loadBlocks","dropEvent","variables","getElementsByTagName","domToVariables","loaders","addedBlocks","addDomAsBlock","b","cleanUpOnLoad","_Blockly","zoomOnPlusMinus","zoomIn","resetWorkspace","blocksXmlStr","cleanUp","topBlocks","cursorY","snapToGrid","MIN_BLOCK_Y","resizeContents","load","blockStr","createError","hasAttribute","save","filename","collection","workspaceToDom","cleanBeforeExport","run","limitations","workspaceToCode","generatedJs","stop","interpreter","Interpreter","stopBeforeStart","$runButtons","$","$stopButtons","is","undo","redo","hasStarted","purchase_choices","saveAs","blob","Blob","filesaver","getPurchaseDropdownOptions","temp_purchase_choices","oppositesToDropdownOptions","purchase_blocks","purchase_block","purchase_list_field","selected_value","blockType","blocksToClean","blocklyMetrics","scaleCancellation","blocklyLeft","absoluteLeft","viewLeft","blocklyTop","body","viewTop","inputList","inp","svgElement","setProperty","getBlockByType","getTopBlocksByType","xmlDom","domToPrettyText","isProcedure","DeleteStray","sourceBlock","Abstract","deleteBlocksLoadedBy","eventGroup","loaderId","blockXml","addDomAsBlockFromHeader","processLoaders","header","promises","remove","Promise","resolve","reject","all","loadBlocksFromHeader","blockObj","url","isNew","ajax","fail","status","statusText","done","blockDom","FlyoutStore","action","bound","block_listeners","block_workspaces","flyout_min_width","xml_list","processed_xml","listener","unbindEvent_","no_result","observable","setFlyoutWidth","css","move","scrollbars","sounds","block_workspace_height","dx","dy","blockly_flyout","blockMouseDown_","longest_block_width"],"mappings":"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","file":"main.8c53e3.hot-update.js","sourcesContent":["/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Helper functions for generating JavaScript for blocks.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.JavaScript');\n\ngoog.require('Blockly.Generator');\n\n\n/**\n * JavaScript code generator.\n * @type {!Blockly.Generator}\n */\nBlockly.JavaScript = new Blockly.Generator('JavaScript');\n\n/**\n * List of illegal variable names.\n * This is not intended to be a security feature.  Blockly is 100% client-side,\n * so bypassing this list is trivial.  This is intended to prevent users from\n * accidentally clobbering a built-in object or function.\n * @private\n */\nBlockly.JavaScript.addReservedWords(\n    'Blockly,' +  // In case JS is evaled in the current window.\n    // https://developer.mozilla.org/en/JavaScript/Reference/Reserved_Words\n    'break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,' +\n    'class,enum,export,extends,import,super,implements,interface,let,package,private,protected,public,static,yield,' +\n    'const,null,true,false,' +\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects\n    'Array,ArrayBuffer,Boolean,Date,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Error,eval,EvalError,Float32Array,Float64Array,Function,Infinity,Int16Array,Int32Array,Int8Array,isFinite,isNaN,Iterator,JSON,Math,NaN,Number,Object,parseFloat,parseInt,RangeError,ReferenceError,RegExp,StopIteration,String,SyntaxError,TypeError,Uint16Array,Uint32Array,Uint8Array,Uint8ClampedArray,undefined,uneval,URIError,' +\n    // https://developer.mozilla.org/en/DOM/window\n    'applicationCache,closed,Components,content,_content,controllers,crypto,defaultStatus,dialogArguments,directories,document,frameElement,frames,fullScreen,globalStorage,history,innerHeight,innerWidth,length,location,locationbar,localStorage,menubar,messageManager,mozAnimationStartTime,mozInnerScreenX,mozInnerScreenY,mozPaintCount,name,navigator,opener,outerHeight,outerWidth,pageXOffset,pageYOffset,parent,performance,personalbar,pkcs11,returnValue,screen,screenX,screenY,scrollbars,scrollMaxX,scrollMaxY,scrollX,scrollY,self,sessionStorage,sidebar,status,statusbar,toolbar,top,URL,window,' +\n    'addEventListener,alert,atob,back,blur,btoa,captureEvents,clearImmediate,clearInterval,clearTimeout,close,confirm,disableExternalCapture,dispatchEvent,dump,enableExternalCapture,escape,find,focus,forward,GeckoActiveXObject,getAttention,getAttentionWithCycleCount,getComputedStyle,getSelection,home,matchMedia,maximize,minimize,moveBy,moveTo,mozRequestAnimationFrame,open,openDialog,postMessage,print,prompt,QueryInterface,releaseEvents,removeEventListener,resizeBy,resizeTo,restore,routeEvent,scroll,scrollBy,scrollByLines,scrollByPages,scrollTo,setCursor,setImmediate,setInterval,setResizable,setTimeout,showModalDialog,sizeToContent,stop,unescape,updateCommands,XPCNativeWrapper,XPCSafeJSObjectWrapper,' +\n    'onabort,onbeforeunload,onblur,onchange,onclick,onclose,oncontextmenu,ondevicemotion,ondeviceorientation,ondragdrop,onerror,onfocus,onhashchange,onkeydown,onkeypress,onkeyup,onload,onmousedown,onmousemove,onmouseout,onmouseover,onmouseup,onmozbeforepaint,onpaint,onpopstate,onreset,onresize,onscroll,onselect,onsubmit,onunload,onpageshow,onpagehide,' +\n    'Image,Option,Worker,' +\n    // https://developer.mozilla.org/en/Gecko_DOM_Reference\n    'Event,Range,File,FileReader,Blob,BlobBuilder,' +\n    'Attr,CDATASection,CharacterData,Comment,console,DocumentFragment,DocumentType,DomConfiguration,DOMError,DOMErrorHandler,DOMException,DOMImplementation,DOMImplementationList,DOMImplementationRegistry,DOMImplementationSource,DOMLocator,DOMObject,DOMString,DOMStringList,DOMTimeStamp,DOMUserData,Entity,EntityReference,MediaQueryList,MediaQueryListListener,NameList,NamedNodeMap,Node,NodeFilter,NodeIterator,NodeList,Notation,Plugin,PluginArray,ProcessingInstruction,SharedWorker,Text,TimeRanges,Treewalker,TypeInfo,UserDataHandler,Worker,WorkerGlobalScope,' +\n    'HTMLDocument,HTMLElement,HTMLAnchorElement,HTMLAppletElement,HTMLAudioElement,HTMLAreaElement,HTMLBaseElement,HTMLBaseFontElement,HTMLBodyElement,HTMLBRElement,HTMLButtonElement,HTMLCanvasElement,HTMLDirectoryElement,HTMLDivElement,HTMLDListElement,HTMLEmbedElement,HTMLFieldSetElement,HTMLFontElement,HTMLFormElement,HTMLFrameElement,HTMLFrameSetElement,HTMLHeadElement,HTMLHeadingElement,HTMLHtmlElement,HTMLHRElement,HTMLIFrameElement,HTMLImageElement,HTMLInputElement,HTMLKeygenElement,HTMLLabelElement,HTMLLIElement,HTMLLinkElement,HTMLMapElement,HTMLMenuElement,HTMLMetaElement,HTMLModElement,HTMLObjectElement,HTMLOListElement,HTMLOptGroupElement,HTMLOptionElement,HTMLOutputElement,HTMLParagraphElement,HTMLParamElement,HTMLPreElement,HTMLQuoteElement,HTMLScriptElement,HTMLSelectElement,HTMLSourceElement,HTMLSpanElement,HTMLStyleElement,HTMLTableElement,HTMLTableCaptionElement,HTMLTableCellElement,HTMLTableDataCellElement,HTMLTableHeaderCellElement,HTMLTableColElement,HTMLTableRowElement,HTMLTableSectionElement,HTMLTextAreaElement,HTMLTimeElement,HTMLTitleElement,HTMLTrackElement,HTMLUListElement,HTMLUnknownElement,HTMLVideoElement,' +\n    'HTMLCanvasElement,CanvasRenderingContext2D,CanvasGradient,CanvasPattern,TextMetrics,ImageData,CanvasPixelArray,HTMLAudioElement,HTMLVideoElement,NotifyAudioAvailableEvent,HTMLCollection,HTMLAllCollection,HTMLFormControlsCollection,HTMLOptionsCollection,HTMLPropertiesCollection,DOMTokenList,DOMSettableTokenList,DOMStringMap,RadioNodeList,' +\n    'SVGDocument,SVGElement,SVGAElement,SVGAltGlyphElement,SVGAltGlyphDefElement,SVGAltGlyphItemElement,SVGAnimationElement,SVGAnimateElement,SVGAnimateColorElement,SVGAnimateMotionElement,SVGAnimateTransformElement,SVGSetElement,SVGCircleElement,SVGClipPathElement,SVGColorProfileElement,SVGCursorElement,SVGDefsElement,SVGDescElement,SVGEllipseElement,SVGFilterElement,SVGFilterPrimitiveStandardAttributes,SVGFEBlendElement,SVGFEColorMatrixElement,SVGFEComponentTransferElement,SVGFECompositeElement,SVGFEConvolveMatrixElement,SVGFEDiffuseLightingElement,SVGFEDisplacementMapElement,SVGFEDistantLightElement,SVGFEFloodElement,SVGFEGaussianBlurElement,SVGFEImageElement,SVGFEMergeElement,SVGFEMergeNodeElement,SVGFEMorphologyElement,SVGFEOffsetElement,SVGFEPointLightElement,SVGFESpecularLightingElement,SVGFESpotLightElement,SVGFETileElement,SVGFETurbulenceElement,SVGComponentTransferFunctionElement,SVGFEFuncRElement,SVGFEFuncGElement,SVGFEFuncBElement,SVGFEFuncAElement,SVGFontElement,SVGFontFaceElement,SVGFontFaceFormatElement,SVGFontFaceNameElement,SVGFontFaceSrcElement,SVGFontFaceUriElement,SVGForeignObjectElement,SVGGElement,SVGGlyphElement,SVGGlyphRefElement,SVGGradientElement,SVGLinearGradientElement,SVGRadialGradientElement,SVGHKernElement,SVGImageElement,SVGLineElement,SVGMarkerElement,SVGMaskElement,SVGMetadataElement,SVGMissingGlyphElement,SVGMPathElement,SVGPathElement,SVGPatternElement,SVGPolylineElement,SVGPolygonElement,SVGRectElement,SVGScriptElement,SVGStopElement,SVGStyleElement,SVGSVGElement,SVGSwitchElement,SVGSymbolElement,SVGTextElement,SVGTextPathElement,SVGTitleElement,SVGTRefElement,SVGTSpanElement,SVGUseElement,SVGViewElement,SVGVKernElement,' +\n    'SVGAngle,SVGColor,SVGICCColor,SVGElementInstance,SVGElementInstanceList,SVGLength,SVGLengthList,SVGMatrix,SVGNumber,SVGNumberList,SVGPaint,SVGPoint,SVGPointList,SVGPreserveAspectRatio,SVGRect,SVGStringList,SVGTransform,SVGTransformList,' +\n    'SVGAnimatedAngle,SVGAnimatedBoolean,SVGAnimatedEnumeration,SVGAnimatedInteger,SVGAnimatedLength,SVGAnimatedLengthList,SVGAnimatedNumber,SVGAnimatedNumberList,SVGAnimatedPreserveAspectRatio,SVGAnimatedRect,SVGAnimatedString,SVGAnimatedTransformList,' +\n    'SVGPathSegList,SVGPathSeg,SVGPathSegArcAbs,SVGPathSegArcRel,SVGPathSegClosePath,SVGPathSegCurvetoCubicAbs,SVGPathSegCurvetoCubicRel,SVGPathSegCurvetoCubicSmoothAbs,SVGPathSegCurvetoCubicSmoothRel,SVGPathSegCurvetoQuadraticAbs,SVGPathSegCurvetoQuadraticRel,SVGPathSegCurvetoQuadraticSmoothAbs,SVGPathSegCurvetoQuadraticSmoothRel,SVGPathSegLinetoAbs,SVGPathSegLinetoHorizontalAbs,SVGPathSegLinetoHorizontalRel,SVGPathSegLinetoRel,SVGPathSegLinetoVerticalAbs,SVGPathSegLinetoVerticalRel,SVGPathSegMovetoAbs,SVGPathSegMovetoRel,ElementTimeControl,TimeEvent,SVGAnimatedPathData,' +\n    'SVGAnimatedPoints,SVGColorProfileRule,SVGCSSRule,SVGExternalResourcesRequired,SVGFitToViewBox,SVGLangSpace,SVGLocatable,SVGRenderingIntent,SVGStylable,SVGTests,SVGTextContentElement,SVGTextPositioningElement,SVGTransformable,SVGUnitTypes,SVGURIReference,SVGViewSpec,SVGZoomAndPan');\n\n/**\n * Order of operation ENUMs.\n * https://developer.mozilla.org/en/JavaScript/Reference/Operators/Operator_Precedence\n */\nBlockly.JavaScript.ORDER_ATOMIC = 0;           // 0 \"\" ...\nBlockly.JavaScript.ORDER_NEW = 1.1;            // new\nBlockly.JavaScript.ORDER_MEMBER = 1.2;         // . []\nBlockly.JavaScript.ORDER_FUNCTION_CALL = 2;    // ()\nBlockly.JavaScript.ORDER_INCREMENT = 3;        // ++\nBlockly.JavaScript.ORDER_DECREMENT = 3;        // --\nBlockly.JavaScript.ORDER_BITWISE_NOT = 4.1;    // ~\nBlockly.JavaScript.ORDER_UNARY_PLUS = 4.2;     // +\nBlockly.JavaScript.ORDER_UNARY_NEGATION = 4.3; // -\nBlockly.JavaScript.ORDER_LOGICAL_NOT = 4.4;    // !\nBlockly.JavaScript.ORDER_TYPEOF = 4.5;         // typeof\nBlockly.JavaScript.ORDER_VOID = 4.6;           // void\nBlockly.JavaScript.ORDER_DELETE = 4.7;         // delete\nBlockly.JavaScript.ORDER_AWAIT = 4.8;          // await\nBlockly.JavaScript.ORDER_EXPONENTIATION = 5.0; // **\nBlockly.JavaScript.ORDER_MULTIPLICATION = 5.1; // *\nBlockly.JavaScript.ORDER_DIVISION = 5.2;       // /\nBlockly.JavaScript.ORDER_MODULUS = 5.3;        // %\nBlockly.JavaScript.ORDER_SUBTRACTION = 6.1;    // -\nBlockly.JavaScript.ORDER_ADDITION = 6.2;       // +\nBlockly.JavaScript.ORDER_BITWISE_SHIFT = 7;    // << >> >>>\nBlockly.JavaScript.ORDER_RELATIONAL = 8;       // < <= > >=\nBlockly.JavaScript.ORDER_IN = 8;               // in\nBlockly.JavaScript.ORDER_INSTANCEOF = 8;       // instanceof\nBlockly.JavaScript.ORDER_EQUALITY = 9;         // == != === !==\nBlockly.JavaScript.ORDER_BITWISE_AND = 10;     // &\nBlockly.JavaScript.ORDER_BITWISE_XOR = 11;     // ^\nBlockly.JavaScript.ORDER_BITWISE_OR = 12;      // |\nBlockly.JavaScript.ORDER_LOGICAL_AND = 13;     // &&\nBlockly.JavaScript.ORDER_LOGICAL_OR = 14;      // ||\nBlockly.JavaScript.ORDER_CONDITIONAL = 15;     // ?:\nBlockly.JavaScript.ORDER_ASSIGNMENT = 16;      // = += -= **= *= /= %= <<= >>= ...\nBlockly.JavaScript.ORDER_YIELD = 17;         // yield\nBlockly.JavaScript.ORDER_COMMA = 18;           // ,\nBlockly.JavaScript.ORDER_NONE = 99;            // (...)\n\n/**\n * List of outer-inner pairings that do NOT require parentheses.\n * @type {!Array.<!Array.<number>>}\n */\nBlockly.JavaScript.ORDER_OVERRIDES = [\n  // (foo()).bar -> foo().bar\n  // (foo())[0] -> foo()[0]\n  [Blockly.JavaScript.ORDER_FUNCTION_CALL, Blockly.JavaScript.ORDER_MEMBER],\n  // (foo())() -> foo()()\n  [Blockly.JavaScript.ORDER_FUNCTION_CALL, Blockly.JavaScript.ORDER_FUNCTION_CALL],\n  // (foo.bar).baz -> foo.bar.baz\n  // (foo.bar)[0] -> foo.bar[0]\n  // (foo[0]).bar -> foo[0].bar\n  // (foo[0])[1] -> foo[0][1]\n  [Blockly.JavaScript.ORDER_MEMBER, Blockly.JavaScript.ORDER_MEMBER],\n  // (foo.bar)() -> foo.bar()\n  // (foo[0])() -> foo[0]()\n  [Blockly.JavaScript.ORDER_MEMBER, Blockly.JavaScript.ORDER_FUNCTION_CALL],\n\n  // !(!foo) -> !!foo\n  [Blockly.JavaScript.ORDER_LOGICAL_NOT, Blockly.JavaScript.ORDER_LOGICAL_NOT],\n  // a * (b * c) -> a * b * c\n  [Blockly.JavaScript.ORDER_MULTIPLICATION, Blockly.JavaScript.ORDER_MULTIPLICATION],\n  // a + (b + c) -> a + b + c\n  [Blockly.JavaScript.ORDER_ADDITION, Blockly.JavaScript.ORDER_ADDITION],\n  // a && (b && c) -> a && b && c\n  [Blockly.JavaScript.ORDER_LOGICAL_AND, Blockly.JavaScript.ORDER_LOGICAL_AND],\n  // a || (b || c) -> a || b || c\n  [Blockly.JavaScript.ORDER_LOGICAL_OR, Blockly.JavaScript.ORDER_LOGICAL_OR]\n];\n\n/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  Blockly.JavaScript.variableDB_.setVariableMap(workspace.getVariableMap());\n\n  var defvars = [];\n  // Add developer variables (not created or named by the user).\n  var devVarList = Blockly.Variables.allDeveloperVariables(workspace);\n  for (var i = 0; i < devVarList.length; i++) {\n    defvars.push(Blockly.JavaScript.variableDB_.getName(devVarList[i],\n        Blockly.Names.DEVELOPER_VARIABLE_TYPE));\n  }\n\n  // Add user variables, but only ones that are being used.\n  var variables = Blockly.Variables.allUsedVarModels(workspace);\n  for (var i = 0; i < variables.length; i++) {\n    defvars.push(Blockly.JavaScript.variableDB_.getName(variables[i].getId(),\n        Blockly.Variables.NAME_TYPE));\n  }\n\n  // Declare all of the variables.\n  if (defvars.length) {\n    Blockly.JavaScript.definitions_['variables'] =\n        'var ' + defvars.join(', ') + ';';\n  }\n};\n\n/**\n * Prepend the generated code with the variable definitions.\n * @param {string} code Generated code.\n * @return {string} Completed code.\n */\nBlockly.JavaScript.finish = function(code) {\n  // Convert the definitions dictionary into a list.\n  var definitions = [];\n  for (var name in Blockly.JavaScript.definitions_) {\n    definitions.push(Blockly.JavaScript.definitions_[name]);\n  }\n  // Clean up temporary data.\n  delete Blockly.JavaScript.definitions_;\n  delete Blockly.JavaScript.functionNames_;\n  Blockly.JavaScript.variableDB_.reset();\n  return definitions.join('\\n\\n') + '\\n\\n\\n' + code;\n};\n\n/**\n * Naked values are top-level blocks with outputs that aren't plugged into\n * anything.  A trailing semicolon is needed to make this legal.\n * @param {string} line Line of generated code.\n * @return {string} Legal line of code.\n */\nBlockly.JavaScript.scrubNakedValue = function(line) {\n  return line + ';\\n';\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/'/g, '\\\\\\'');\n  return '\\'' + string + '\\'';\n};\n\n/**\n * Common tasks for generating JavaScript from blocks.\n * Handles comments for the specified block and any connected value blocks.\n * Calls any statements following this block.\n * @param {!Blockly.Block} block The current block.\n * @param {string} code The JavaScript code created for this block.\n * @param {boolean=} opt_thisOnly True to generate code for only this statement.\n * @return {string} JavaScript code with comments and subsequent blocks added.\n * @private\n */\nBlockly.JavaScript.scrub_ = function(block, code, opt_thisOnly) {\n  var commentCode = '';\n  // Only collect comments for blocks that aren't inline.\n  if (!block.outputConnection || !block.outputConnection.targetConnection) {\n    // Collect comment for this block.\n    var comment = block.getCommentText();\n    comment = Blockly.utils.wrap(comment, Blockly.JavaScript.COMMENT_WRAP - 3);\n    if (comment) {\n      if (block.getProcedureDef) {\n        // Use a comment block for function comments.\n        commentCode += '/**\\n' +\n                       Blockly.JavaScript.prefixLines(comment + '\\n', ' * ') +\n                       ' */\\n';\n      } else {\n        commentCode += Blockly.JavaScript.prefixLines(comment + '\\n', '// ');\n      }\n    }\n    // Collect comments for all value arguments.\n    // Don't collect comments for nested statements.\n    for (var i = 0; i < block.inputList.length; i++) {\n      if (block.inputList[i].type == Blockly.INPUT_VALUE) {\n        var childBlock = block.inputList[i].connection.targetBlock();\n        if (childBlock) {\n          var comment = Blockly.JavaScript.allNestedComments(childBlock);\n          if (comment) {\n            commentCode += Blockly.JavaScript.prefixLines(comment, '// ');\n          }\n        }\n      }\n    }\n  }\n  var nextBlock = block.nextConnection && block.nextConnection.targetBlock();\n  var nextCode = opt_thisOnly ? '' : Blockly.JavaScript.blockToCode(nextBlock);\n  return commentCode + code + nextCode;\n};\n\n/**\n * Gets a property and adjusts the value while taking into account indexing.\n * @param {!Blockly.Block} block The block.\n * @param {string} atId The property ID of the element to get.\n * @param {number=} opt_delta Value to add.\n * @param {boolean=} opt_negate Whether to negate the value.\n * @param {number=} opt_order The highest order acting on this value.\n * @return {string|number}\n */\nBlockly.JavaScript.getAdjusted = function(block, atId, opt_delta, opt_negate,\n    opt_order) {\n  var delta = opt_delta || 0;\n  var order = opt_order || Blockly.JavaScript.ORDER_NONE;\n  if (block.workspace.options.oneBasedIndex) {\n    delta--;\n  }\n  var defaultAtIndex = block.workspace.options.oneBasedIndex ? '1' : '0';\n  if (delta > 0) {\n    var at = Blockly.JavaScript.valueToCode(block, atId,\n        Blockly.JavaScript.ORDER_ADDITION) || defaultAtIndex;\n  } else if (delta < 0) {\n    var at = Blockly.JavaScript.valueToCode(block, atId,\n        Blockly.JavaScript.ORDER_SUBTRACTION) || defaultAtIndex;\n  } else if (opt_negate) {\n    var at = Blockly.JavaScript.valueToCode(block, atId,\n        Blockly.JavaScript.ORDER_UNARY_NEGATION) || defaultAtIndex;\n  } else {\n    var at = Blockly.JavaScript.valueToCode(block, atId, order) ||\n        defaultAtIndex;\n  }\n\n  if (Blockly.isNumber(at)) {\n    // If the index is a naked number, adjust it right now.\n    at = parseFloat(at) + delta;\n    if (opt_negate) {\n      at = -at;\n    }\n  } else {\n    // If the index is dynamic, adjust it in code.\n    if (delta > 0) {\n      at = at + ' + ' + delta;\n      var innerOrder = Blockly.JavaScript.ORDER_ADDITION;\n    } else if (delta < 0) {\n      at = at + ' - ' + -delta;\n      var innerOrder = Blockly.JavaScript.ORDER_SUBTRACTION;\n    }\n    if (opt_negate) {\n      if (delta) {\n        at = '-(' + at + ')';\n      } else {\n        at = '-' + at;\n      }\n      var innerOrder = Blockly.JavaScript.ORDER_UNARY_NEGATION;\n    }\n    innerOrder = Math.floor(innerOrder);\n    order = Math.floor(order);\n    if (innerOrder && order >= innerOrder) {\n      at = '(' + at + ')';\n    }\n  }\n  return at;\n};\n","module.exports = global[\"Blockly\"] = require(\"-!./blockly_compressed_vertical.Blockly.js\");","module.exports = global[\"goog\"] = require(\"-!./blockly_compressed_vertical.goog.js\");","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1567491422298\n      var cssReload = require(\"!../../../node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);;\n    }\n  ","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1567491417507\n      var cssReload = require(\"!../../../../node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);;\n    }\n  ","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1567491422334\n      var cssReload = require(\"!../../../../node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);;\n    }\n  ","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1567491417451\n      var cssReload = require(\"!../../../../node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);;\n    }\n  ","import React            from 'react';\nimport { PropTypes }    from 'prop-types';\nimport { BlueInfoIcon } from './Icons.jsx';\nimport { connect }      from '../stores/connect';\nimport { translate }    from '../utils/lang/i18n';\n\nclass FlyoutBlock extends React.PureComponent {\n    render() {\n        const { onInfoClick, block_node } = this.props;\n        \n        return (\n            <div className='flyout__item'>\n                <div className='flyout__item-header'>\n                    <div className='flyout__item-label'>{block_node.getAttribute('type')}</div>\n                    <div className='flyout__item-buttons'>\n                        { onInfoClick &&\n                            <div className='flyout__item-info' onClick={ onInfoClick }>\n                                <BlueInfoIcon className={'info'} />\n                            </div>\n                        }\n                        <button\n                            className='flyout__item-add'\n                            onClick={() => Blockly.derivWorkspace.addBlockNode(block_node) }\n                        >\n                            { translate('Add') }\n                        </button>\n                    </div>\n                </div>\n                <div ref={el => this.el_block_workspace = el} className='flyout__block-workspace' />\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        const { initBlockWorkspace, block_node } = this.props;\n\n        initBlockWorkspace(this.el_block_workspace, block_node);\n    }\n}\n\nFlyoutBlock.propTypes = {\n    block_node        : PropTypes.any,\n    initBlockWorkspace: PropTypes.func,\n    onInfoClick       : PropTypes.func,\n};\n\nexport default connect(({ flyout }) => ({\n    initBlockWorkspace: flyout.initBlockWorkspace,\n}))(FlyoutBlock);\n\n","import React            from 'react';\nimport PropTypes        from 'prop-types';\nimport FlyoutBlock      from './flyout-block.jsx';\nimport { connect }      from '../stores/connect';\nimport                       '../assets/sass/scratch/flyout.scss';\n\nconst Flyout = ({\n    flyout_content,\n    flyout_width,\n    is_visible,\n}) => {\n    return (\n        <div\n            className={`flyout${!is_visible ? ' hidden' : ''}`}\n            style={{ width: `${flyout_width}px` }}\n        >\n            { flyout_content.map((node, index) => {\n                const tag_name = node.tagName.toUpperCase();\n\n                switch (tag_name) {\n                    case Blockly.Xml.NODE_BLOCK:\n                        return (\n                            <FlyoutBlock\n                                key={node.getAttribute('type') + index}\n                                id={`flyout__item-workspace--${index}`}\n                                block_node={node}\n                            />\n                        );\n                    case Blockly.Xml.NODE_LABEL:\n                        return (\n                            <div\n                                key={node.getAttribute('text') + index}\n                                className='flyout__item-label'\n                            >\n                                { node.getAttribute('text') }\n                            </div>\n                        );\n                    case Blockly.Xml.NODE_BUTTON: {\n                        const callback_key = node.getAttribute('callbackKey');\n                        const callback = Blockly.derivWorkspace.getButtonCallback(callback_key) || (() => {});\n                \n                        return (\n                            <button\n                                key={`${callback_key}${index}`}\n                                className='flyout__button'\n                                onClick={(button) => {\n                                    const flyout_button = button;\n        \n                                    // Workaround for not having a flyout workspace.\n                                    // eslint-disable-next-line no-underscore-dangle\n                                    flyout_button.targetWorkspace_ = Blockly.derivWorkspace;\n                                    // eslint-disable-next-line no-underscore-dangle\n                                    flyout_button.getTargetWorkspace = () => flyout_button.targetWorkspace_;\n        \n                                    callback(flyout_button);\n                                }}\n                            >\n                                { node.getAttribute('text') }\n                            </button>\n                        );\n                    }\n                    default:\n                        return null;\n                }\n            }) }\n        </div>\n    );\n};\n\nFlyout.propTypes = {\n    flyout_content: PropTypes.array,\n    flyout_width  : PropTypes.number,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(({ flyout }) => ({\n    flyout_content: flyout.flyout_content,\n    flyout_width  : flyout.flyout_width,\n    is_visible    : flyout.is_visible,\n}))(Flyout);\n\n","import { setBlockTextColor } from '../../../utils';\nimport { translate }         from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.procedures_callnoreturn = {\n    init() {\n        this.arguments = [];\n        this.argumentVarModels = [];\n        this.previousDisabledState = false;\n\n        this.jsonInit(this.definition());\n    },\n    /**\n     * Block definitions describe how a block looks and behaves, including the text,\n     * the colour, the shape, and what other blocks it can connect to. We've separated\n     * the block definition from the init function so we can search through it.\n     * https://developers.google.com/blockly/guides/create-custom-blocks/define-blocks\n     */\n    definition() {\n        return {\n            message0: '%1 %2',\n            args0   : [\n                {\n                    type: 'field_label',\n                    name: 'NAME',\n                    text: this.id,\n                },\n                {\n                    type: 'input_dummy',\n                    name: 'TOPROW',\n                },\n            ],\n            colour           : Blockly.Colours.BinaryProcedures.colour,\n            colourSecondary  : Blockly.Colours.BinaryProcedures.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryProcedures.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Function with no return value tooltip'),\n            category         : Blockly.Categories.Functions,\n        };\n    },\n    /**\n     * Meta returns an object with with properties that contain human readable strings,\n     * these strings are used in the flyout help content, as well as used for searching\n     * for specific blocks.\n     */\n    meta() {\n        return {\n            'display_name': translate('Function With no Return name'),\n            'description' : translate('Function with no return value description'),\n        };\n    },\n    /**\n     * Procedure calls cannot exist without the corresponding procedure\n     * definition.  Enforce this link whenever an event is fired.\n     * @param {!Blockly.Events.Abstract} event Change event.\n     * @this Blockly.Block\n     */\n    onchange(event) {\n        setBlockTextColor(this);\n\n        if (!this.workspace || this.workspace.isFlyout) {\n            // Block is deleted or is in a flyout.\n            return;\n        }\n\n        if (!event.recordUndo) {\n            // Events not generated by user. Skip handling.\n            return;\n        }\n\n        if (event.type === Blockly.Events.BLOCK_CREATE && event.ids.indexOf(this.id) !== -1) {\n            // Look for the case where a procedure call was created (usually through\n            // paste) and there is no matching definition.  In this case, create\n            // an empty definition block with the correct signature.\n            const name = this.getProcedureCall();\n            let def = this.getProcedureDefinition(name);\n\n            // Set data of `this` block to 'procedure definition'-block `id` so we can keep track of their relation.\n            if (!def) {\n                this.unplug();\n                this.dispose();\n            }\n\n            this.data = def.id;\n\n            if (\n                def &&\n                (def.type !== this.defType || JSON.stringify(def.arguments) !== JSON.stringify(this.arguments))\n            ) {\n                // The signatures don't match.\n                def = null;\n            }\n            if (!def) {\n                Blockly.Events.setGroup(event.group);\n                /**\n                 * Create matching definition block.\n                 * <xml>\n                 *   <block type=\"procedures_defreturn\" x=\"10\" y=\"20\">\n                 *     <mutation name=\"test\">\n                 *       <arg name=\"x\"></arg>\n                 *     </mutation>\n                 *     <field name=\"NAME\">test</field>\n                 *   </block>\n                 * </xml>\n                 */\n                const xml = document.createElement('xml');\n                const block = document.createElement('block');\n                block.setAttribute('type', this.defType);\n\n                const xy = this.getRelativeToSurfaceXY();\n                const x = xy.x + Blockly.SNAP_RADIUS * (this.RTL ? -1 : 1);\n                const y = xy.y + Blockly.SNAP_RADIUS * 2;\n\n                block.setAttribute('x', x);\n                block.setAttribute('y', y);\n\n                const mutation = this.mutationToDom();\n\n                block.appendChild(mutation);\n\n                const field = document.createElement('field');\n                field.setAttribute('name', 'NAME');\n                field.appendChild(document.createTextNode(this.getProcedureCall()));\n\n                block.appendChild(field);\n                xml.appendChild(block);\n\n                Blockly.Xml.domToWorkspace(xml, this.workspace);\n                Blockly.Events.setGroup(false);\n            }\n        } else if (event.type === Blockly.Events.BLOCK_DELETE) {\n            // Look for the case where a procedure definition has been deleted,\n            // leaving this block (a procedure call) orphaned.  In this case, delete\n            // the orphan.\n            const name = this.getProcedureCall();\n            const def = Blockly.Procedures.getDefinition(name, this.workspace);\n\n            if (!def) {\n                Blockly.Events.setGroup(event.group);\n                this.dispose(true, false);\n                Blockly.Events.setGroup(false);\n            }\n        } else if (event.type === Blockly.Events.BLOCK_CHANGE && event.element === 'disabled') {\n            const name = this.getProcedureCall();\n            const def = Blockly.Procedures.getDefinition(name, this.workspace);\n\n            if (def && def.id === event.blockId) {\n                // in most cases the old group should be ''\n                const oldGroup = Blockly.Events.getGroup();\n\n                if (oldGroup) {\n                    // This should only be possible programatically and may indicate a problem\n                    // with event grouping. If you see this message please investigate. If the\n                    // use ends up being valid we may need to reorder events in the undo stack.\n                    // eslint-disable-next-line no-console\n                    console.log('Saw an existing group while responding to a definition change');\n                }\n\n                Blockly.Events.setGroup(event.group);\n\n                if (event.newValue) {\n                    this.previousDisabledState = this.disabled;\n                    this.setDisabled(true);\n                } else {\n                    this.setDisabled(this.previousDisabledState);\n                }\n\n                Blockly.Events.setGroup(oldGroup);\n            }\n        }\n    },\n    /**\n     * Returns the related procedure definition block.\n     * @return {Blockly.Block} Procedure definition block.\n     * @this Blockly.Block\n     */\n    getProcedureDefinition(name) {\n        // Assume that a procedure definition is a top block.\n        return this.workspace.getTopBlocks(false).find(block => {\n            if (block.getProcedureDefinition) {\n                const tuple = block.getProcedureDefinition();\n                return tuple && Blockly.Names.equals(tuple[0], name);\n            }\n            return false;\n        });\n    },\n    /**\n     * Returns the name of the procedure this block calls.\n     * @return {string} Procedure name.\n     * @this Blockly.Block\n     */\n    getProcedureCall() {\n        // The NAME field is guaranteed to exist, null will never be returned.\n        return /** @type {string} */ (this.getFieldValue('NAME'));\n    },\n    /**\n     * Notification that a procedure is renaming.\n     * If the name matches this block's procedure, rename it.\n     * @param {string} oldName Previous name of procedure.\n     * @param {string} newName Renamed procedure.\n     * @this Blockly.Block\n     */\n    renameProcedure(oldName, newName) {\n        if (Blockly.Names.equals(oldName, this.getProcedureCall())) {\n            this.setFieldValue(newName, 'NAME');\n        }\n    },\n    /**\n     * Notification that the procedure's parameters have changed.\n     * @param {!Array.<string>} paramNames New param names, e.g. ['x', 'y', 'z'].\n     * @private\n     * @this Blockly.Block\n     */\n    setProcedureParameters(paramNames) {\n        // Rebuild the block's arguments.\n        this.arguments = [].concat(paramNames);\n\n        // And rebuild the argument model list.\n        this.argumentVarModels = this.arguments.map(argumentName =>\n            Blockly.Variables.getOrCreateVariablePackage(this.workspace, null, argumentName, '')\n        );\n\n        this.updateShape();\n    },\n    /**\n     * Modify this block to have the correct number of arguments.\n     * @private\n     * @this Blockly.Block\n     */\n    updateShape() {\n        this.arguments.forEach((argumentName, i) => {\n            let field = this.getField(`ARGNAME${i}`);\n            if (field) {\n                // Ensure argument name is up to date.\n                // The argument name field is deterministic based on the mutation,\n                // no need to fire a change event.\n                Blockly.Events.disable();\n                try {\n                    field.setValue(argumentName);\n                } finally {\n                    Blockly.Events.enable();\n                }\n            } else {\n                // Add new input.\n                field = new Blockly.FieldLabel(argumentName);\n                const input = this.appendValueInput(`ARG${i}`).appendField(field, `ARGNAME${i}`);\n                input.init();\n            }\n        });\n\n        // Remove deleted inputs.\n        let i = this.arguments.length;\n        while (this.getInput(`ARG${i}`)) {\n            this.removeInput(`ARG${i}`);\n            i++;\n        }\n\n        // Add 'with:' if there are parameters, remove otherwise.\n        const topRow = this.getInput('TOPROW');\n\n        if (topRow) {\n            if (this.arguments.length) {\n                if (!this.getField('WITH')) {\n                    topRow.appendField(translate('with:'), 'WITH');\n                    topRow.init();\n                }\n            } else if (this.getField('WITH')) {\n                topRow.removeField('WITH');\n            }\n        }\n    },\n    /**\n     * Create XML to represent the (non-editable) name and arguments.\n     * @return {!Element} XML storage element.\n     * @this Blockly.Block\n     */\n    mutationToDom() {\n        const container = document.createElement('mutation');\n        container.setAttribute('name', this.getProcedureCall());\n\n        this.arguments.forEach(argumentName => {\n            const parameter = document.createElement('arg');\n            parameter.setAttribute('name', argumentName);\n            container.appendChild(parameter);\n        });\n\n        return container;\n    },\n    /**\n     * Parse XML to restore the (non-editable) name and parameters.\n     * @param {!Element} xmlElement XML storage element.\n     * @this Blockly.Block\n     */\n    domToMutation(xmlElement) {\n        const name = xmlElement.getAttribute('name');\n        this.renameProcedure(this.getProcedureCall(), name);\n\n        const args = [];\n        const paramIds = [];\n\n        xmlElement.childNodes.forEach(childNode => {\n            if (childNode.nodeName.toLowerCase() === 'arg') {\n                args.push(childNode.getAttribute('name'));\n                paramIds.push(childNode.getAttribute('paramId'));\n            }\n        });\n\n        this.setProcedureParameters(args, paramIds);\n    },\n    /**\n     * Return all variables referenced by this block.\n     * @return {!Array.<!Blockly.VariableModel>} List of variable models.\n     * @this Blockly.Block\n     */\n    getVarModels() {\n        return this.argumentVarModels;\n    },\n    /**\n     * Add menu option to find the definition block for this call.\n     * @param {!Array} options List of menu options to add to.\n     * @this Blockly.Block\n     */\n    customContextMenu(options) {\n        if (!this.workspace.isMovable()) {\n            // If we center on the block and the workspace isn't movable we could\n            // loose blocks at the edges of the workspace.\n            return;\n        }\n\n        const name = this.getProcedureCall();\n        const { workspace } = this;\n\n        const option = { enabled: true };\n        option.text = translate('Highlight function definition');\n        option.callback = () => {\n            const def = this.getProcedureDefinition(name);\n            if (def) {\n                workspace.centerOnBlock(def.id);\n                def.select();\n            }\n        };\n\n        options.push(option);\n    },\n    defType: 'procedures_defnoreturn',\n};\n\nBlockly.JavaScript.procedures_callnoreturn = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const functionName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('NAME'),\n        Blockly.Procedures.NAME_TYPE\n    );\n    const args = block.arguments.map(\n        (arg, i) => Blockly.JavaScript.valueToCode(block, `ARG${i}`, Blockly.JavaScript.ORDER_COMMA) || 'null'\n    );\n\n    const code = `${functionName}(${args.join(', ')});\\n`;\n    return code;\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.procedures_callreturn = {\n    init() {\n        this.arguments = [];\n        this.previousDisabledState = false;\n\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: '%1 %2',\n            args0   : [\n                {\n                    type: 'field_label',\n                    name: 'NAME',\n                    text: this.id,\n                },\n                {\n                    type: 'input_dummy',\n                    name: 'TOPROW',\n                },\n            ],\n            output         : null,\n            colour         : Blockly.Colours.BinaryProcedures.colour,\n            colourSecondary: Blockly.Colours.BinaryProcedures.colourSecondary,\n            colourTertiary : Blockly.Colours.BinaryProcedures.colourTertiary,\n            tooltip        : translate('Function with return value'),\n            category       : Blockly.Categories.Functions,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Function with return value'),\n            'description' : translate('Function with return value Description'),\n        };\n    },\n    onchange              : Blockly.Blocks.procedures_callnoreturn.onchange,\n    getProcedureDefinition: Blockly.Blocks.procedures_callnoreturn.getProcedureDefinition,\n    getProcedureCall      : Blockly.Blocks.procedures_callnoreturn.getProcedureCall,\n    renameProcedure       : Blockly.Blocks.procedures_callnoreturn.renameProcedure,\n    setProcedureParameters: Blockly.Blocks.procedures_callnoreturn.setProcedureParameters,\n    updateShape           : Blockly.Blocks.procedures_callnoreturn.updateShape,\n    mutationToDom         : Blockly.Blocks.procedures_callnoreturn.mutationToDom,\n    domToMutation         : Blockly.Blocks.procedures_callnoreturn.domToMutation,\n    getVarModels          : Blockly.Blocks.procedures_callnoreturn.getVarModels,\n    customContextMenu     : Blockly.Blocks.procedures_callnoreturn.customContextMenu,\n    defType               : 'procedures_defreturn',\n};\n\nBlockly.JavaScript.procedures_callreturn = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const functionName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('NAME'),\n        Blockly.Procedures.NAME_TYPE\n    );\n    const args = block.arguments.map(\n        (arg, i) => Blockly.JavaScript.valueToCode(block, `ARG${i}`, Blockly.JavaScript.ORDER_COMMA) || 'null'\n    );\n\n    const code = `${functionName}(${args.join(', ')})`;\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n","import { plusIconLight }     from '../../images';\nimport { setBlockTextColor } from '../../../utils';\nimport { translate }         from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.procedures_defnoreturn = {\n    init() {\n        this.arguments = [];\n        this.argumentVarModels = [];\n\n        this.jsonInit(this.definition());\n\n        // Enforce unique procedure names\n        const nameField = this.getField('NAME');\n        nameField.setValidator(Blockly.Procedures.rename);\n\n        // Render a ➕-icon for adding parameters\n        const fieldImage = new Blockly.FieldImage(plusIconLight, 24, 24, '+', () => this.onAddClick());\n        this.appendDummyInput('ADD_ICON').appendField(fieldImage);\n\n        this.setStatements(true);\n    },\n    definition() {\n        return {\n            message0: translate('function %1 %2'),\n            args0   : [\n                {\n                    type: 'field_input',\n                    name: 'NAME',\n                    text: '',\n                },\n                {\n                    type: 'field_label',\n                    name: 'PARAMS',\n                    text: '',\n                },\n            ],\n            colour         : Blockly.Colours.BinaryProcedures.colour,\n            colourSecondary: Blockly.Colours.BinaryProcedures.colourSecondary,\n            colourTertiary : Blockly.Colours.BinaryProcedures.colourTertiary,\n            tooltip        : translate('function with no return tooltip'),\n            category       : Blockly.Categories.Functions,\n        };\n    },\n    meta() {\n        return {\n            'display_name': translate('Function with no return value'),\n            'description' : translate('Function with no return value description'),\n        };\n    },\n    /**\n     * Sets the block colour and updates this procedure's caller blocks\n     * to reflect the same name on a change.\n     * @param {!Blockly.Events.Abstract} event Change event.\n     * @this Blockly.Block\n     */\n    onchange(event) {\n        setBlockTextColor(this);\n\n        const allowedEvents = [Blockly.Events.BLOCK_DELETE, Blockly.Events.BLOCK_CREATE, Blockly.Events.BLOCK_CHANGE];\n        if (!this.workspace || this.workspace.isFlyout || !allowedEvents.includes(event.type)) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.BLOCK_CHANGE) {\n            // Sync names between definition- and execution-block\n            if (event.blockId === this.id && event.name === 'NAME') {\n                this.getProcedureCallers().forEach(block => {\n                    block.setFieldValue(event.newValue, 'NAME');\n                });\n            }\n        }\n    },\n    /**\n     * Prompt the user for parameter name\n     * @this Blockly.Block\n     */\n    onAddClick() {\n        if (this.isInFlyout) {\n            return;\n        }\n        \n        // Wrap in setTimeout so block doesn't stick to mouse (Blockly.Events.END_DRAG event isn't blocked).\n        setTimeout(() => {\n            const promptMessage = translate('Specify a parameter name:');\n            Blockly.prompt(promptMessage, '', paramName => {\n                if (paramName) {\n                    const variable = Blockly.Variables.getOrCreateVariablePackage(this.workspace, null, paramName, '');\n                    if (variable) {\n                        this.arguments.push(paramName);\n                        this.argumentVarModels.push(variable);\n\n                        const paramField = this.getField('PARAMS');\n                        paramField.setText(`${translate('with: ')} ${this.arguments.join(', ')}`);\n\n                        this.getProcedureCallers().forEach(block => {\n                            block.setProcedureParameters(this.arguments);\n                            block.initSvg();\n                            block.render(false);\n                        });\n                    }\n                }\n            });\n        }, 200);\n    },\n    /**\n     * Add or remove the statement block from this function definition.\n     * @param {boolean} hasStatements True if a statement block is needed.\n     * @this Blockly.Block\n     */\n    setStatements(hasStatements) {\n        if (this.hasStatements === hasStatements) {\n            return;\n        }\n\n        if (hasStatements) {\n            this.appendStatementInput('STACK').appendField('');\n            if (this.getInput('RETURN')) {\n                this.moveInputBefore('STACK', 'RETURN');\n            }\n        } else {\n            this.removeInput('STACK', true);\n        }\n\n        this.hasStatements = hasStatements;\n    },\n    /**\n     * Update the display of parameters for this procedure definition block.\n     * @private\n     * @this Blockly.Block\n     */\n    updateParams() {\n        let paramString = '';\n\n        if (this.arguments.length) {\n            paramString = `${translate('with:')} ${this.arguments.join(', ')}`;\n        }\n\n        // The params field is deterministic based on the mutation,\n        // no need to fire a change event.\n        Blockly.Events.disable();\n        try {\n            this.setFieldValue(paramString, 'PARAMS');\n        } finally {\n            Blockly.Events.enable();\n        }\n    },\n    /**\n     * Create XML to represent the argument inputs.\n     * @param {boolean=} optParamIds If true include the IDs of the parameter\n     *     quarks.  Used by Blockly.Procedures.mutateCallers for reconnection.\n     * @return {!Element} XML storage element.\n     * @this Blockly.Block\n     */\n    mutationToDom(optParamIds) {\n        const container = document.createElement('mutation');\n\n        if (optParamIds) {\n            container.setAttribute('name', this.getFieldValue('NAME'));\n        }\n\n        this.argumentVarModels.forEach((arg, i) => {\n            const parameter = document.createElement('arg');\n\n            parameter.setAttribute('name', arg.name);\n            parameter.setAttribute('varid', arg.getId());\n\n            if (optParamIds && this.paramIds) {\n                parameter.setAttribute('paramId', this.paramIds[i]);\n            }\n            container.appendChild(parameter);\n        });\n\n        // Save whether the statement input is visible.\n        if (!this.hasStatements) {\n            container.setAttribute('statements', 'false');\n        }\n\n        return container;\n    },\n    /**\n     * Parse XML to restore the argument inputs.\n     * @param {!Element} xmlElement XML storage element.\n     * @this Blockly.Block\n     */\n    domToMutation(xmlElement) {\n        this.arguments = [];\n        this.argumentVarModels = [];\n\n        xmlElement.childNodes.forEach(childNode => {\n            if (childNode.nodeName.toLowerCase() === 'arg') {\n                const varName = childNode.getAttribute('name');\n                this.arguments.push(varName);\n\n                const varId = childNode.getAttribute('varid') || childNode.getAttribute('varId');\n                const variable = Blockly.Variables.getOrCreateVariablePackage(this.workspace, varId, varName, '');\n\n                if (variable !== null) {\n                    this.argumentVarModels.push(variable);\n                } else {\n                    // eslint-disable-next-line no-console\n                    console.log(`Failed to create a variable with name ${varName}, ignoring.`);\n                }\n            }\n        });\n\n        this.updateParams();\n\n        // Show or hide the statement input.\n        this.setStatements(xmlElement.getAttribute('statements') !== 'false');\n    },\n    /**\n     * Return the signature of this procedure definition.\n     * @return {!Array} Tuple containing three elements:\n     *     - the name of the defined procedure,\n     *     - a list of all its arguments,\n     *     - that it DOES NOT have a return value.\n     * @this Blockly.Block\n     */\n    getProcedureDef() {\n        return [this.getFieldValue('NAME'), this.arguments, false];\n    },\n    /**\n     * Return all procedure callers related to this block.\n     * @return {!Array.<Blockly.Block>} List of procedure caller blocks\n     * @this Blockly.Block\n     */\n    getProcedureCallers() {\n        return this.workspace\n            .getAllBlocks(false)\n            .filter(block => block.type === this.callType && block.data === this.id);\n    },\n    /**\n     * Return all variables referenced by this block.\n     * @return {!Array.<string>} List of variable names.\n     * @this Blockly.Block\n     */\n    getVars() {\n        return this.arguments;\n    },\n    /**\n     * Return all variables referenced by this block.\n     * @return {!Array.<!Blockly.VariableModel>} List of variable models.\n     * @this Blockly.Block\n     */\n    getVarModels() {\n        return this.argumentVarModels;\n    },\n    /**\n     * Add custom menu options to this block's context menu.\n     * @param {!Array} options List of menu options to add to.\n     * @this Blockly.Block\n     */\n    customContextMenu(options) {\n        if (this.isInFlyout) {\n            return;\n        }\n        // Add option to create caller.\n        const option = { enabled: true };\n        const name = this.getFieldValue('NAME');\n        option.text = Blockly.Msg.PROCEDURES_CREATE_DO.replace('%1', name);\n\n        const xmlMutation = document.createElement('mutation');\n        xmlMutation.setAttribute('name', name);\n\n        this.arguments.forEach(argumentName => {\n            const xmlArg = document.createElement('arg');\n            xmlArg.setAttribute('name', argumentName);\n            xmlMutation.appendChild(xmlArg);\n        });\n\n        const xmlBlock = document.createElement('block');\n        xmlBlock.setAttribute('type', this.callType);\n        xmlBlock.appendChild(xmlMutation);\n        option.callback = Blockly.ContextMenu.callbackFactory(this, xmlBlock);\n        options.push(option);\n\n        // Add options to create getters for each parameter.\n        if (!this.isCollapsed()) {\n            this.argumentVarModels.forEach(argumentVarModel => {\n                const getOption = { enabled: true };\n\n                getOption.text = Blockly.Msg.VARIABLES_SET_CREATE_GET.replace('%1', argumentVarModel.name);\n\n                const xmlField = Blockly.Variables.generateVariableFieldDom(argumentVarModel);\n                const xmlOptionBlock = document.createElement('block');\n\n                xmlOptionBlock.setAttribute('type', 'variables_get');\n                xmlOptionBlock.appendChild(xmlField);\n\n                getOption.callback = Blockly.ContextMenu.callbackFactory(this, xmlOptionBlock);\n                options.push(getOption);\n            });\n        }\n    },\n    callType: 'procedures_callnoreturn',\n};\n\nBlockly.JavaScript.procedures_defnoreturn = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const functionName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('NAME'),\n        Blockly.Procedures.NAME_TYPE\n    );\n\n    let branch = Blockly.JavaScript.statementToCode(block, 'STACK');\n\n    if (Blockly.JavaScript.STATEMENT_PREFIX) {\n        const id = block.id.replace(/\\$/g, '$$$$'); // Issue 251.\n\n        branch =\n            Blockly.JavaScript.prefixLines(\n                Blockly.JavaScript.STATEMENT_PREFIX.replace(/%1/g, `'${id}'`),\n                Blockly.JavaScript.INDENT\n            ) + branch;\n    }\n\n    if (Blockly.JavaScript.INFINITE_LOOP_TRAP) {\n        branch = Blockly.JavaScript.INFINITE_LOOP_TRAP.replace(/%1/g, `'${block.id}'`) + branch;\n    }\n\n    let returnValue = Blockly.JavaScript.valueToCode(block, 'RETURN', Blockly.JavaScript.ORDER_NONE) || '';\n    if (returnValue) {\n        returnValue = `${Blockly.JavaScript.INDENT}return ${returnValue};\\n`;\n    }\n\n    const args = block.arguments.map(\n        argumentName => Blockly.JavaScript.variableDB_.getName(argumentName, Blockly.Variables.NAME_TYPE) // eslint-disable-line no-underscore-dangle\n    );\n\n    // eslint-disable-next-line no-underscore-dangle\n    const code = Blockly.JavaScript.scrub_(\n        block,\n        `\n    function ${functionName}(${args.join(', ')}) {\n        ${branch}\n        ${returnValue}\n    }\\n`\n    );\n\n    // Add % so as not to collide with helper functions in definitions list.\n    // eslint-disable-next-line no-underscore-dangle\n    Blockly.JavaScript.definitions_[`%${functionName}`] = code;\n    return null;\n};\n","import { plusIconDark } from '../../images';\nimport { translate }    from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.procedures_defreturn = {\n    init() {\n        this.arguments = [];\n        this.argumentVarModels = [];\n\n        this.jsonInit(this.definition());\n\n        // Enforce unique procedure names\n        const nameField = this.getField('NAME');\n        nameField.setValidator(Blockly.Procedures.rename);\n\n        // Render a ➕-icon for adding parameters\n        const fieldImage = new Blockly.FieldImage(plusIconDark, 24, 24, '+', () => this.onAddClick());\n        this.appendDummyInput('ADD_ICON').appendField(fieldImage);\n        this.moveInputBefore('ADD_ICON', 'RETURN');\n\n        this.setStatements(true);\n    },\n    definition(){\n        return {\n            message0: translate('function %1 %2 %3'),\n            message1: 'return %1',\n            args0   : [\n                {\n                    type: 'field_input',\n                    name: 'NAME',\n                    text: '',\n                },\n                {\n                    type: 'field_label',\n                    name: 'PARAMS',\n                    text: '',\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type : 'input_value',\n                    name : 'RETURN',\n                    check: null,\n                    align: Blockly.ALIGN_RIGHT,\n                },\n            ],\n            colour         : Blockly.Colours.BinaryProcedures.colour,\n            colourSecondary: Blockly.Colours.BinaryProcedures.colourSecondary,\n            colourTertiary : Blockly.Colours.BinaryProcedures.colourTertiary,\n            tooltip        : translate('Function def with return value'),\n            category       : Blockly.Categories.Functions,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Function def with return value'),\n            'description' : translate('Function def with return value Description'),\n        };\n    },\n    onAddClick   : Blockly.Blocks.procedures_defnoreturn.onAddClick,\n    onchange     : Blockly.Blocks.procedures_defnoreturn.onchange,\n    setStatements: Blockly.Blocks.procedures_defnoreturn.setStatements,\n    updateParams : Blockly.Blocks.procedures_defnoreturn.updateParams,\n    mutationToDom: Blockly.Blocks.procedures_defnoreturn.mutationToDom,\n    domToMutation: Blockly.Blocks.procedures_defnoreturn.domToMutation,\n    /**\n     * Return the signature of this procedure definition.\n     * @return {!Array} Tuple containing three elements:\n     *     - the name of the defined procedure,\n     *     - a list of all its arguments,\n     *     - that it DOES have a return value.\n     * @this Blockly.Block\n     */\n    getProcedureDef() {\n        return [this.getFieldValue('NAME'), this.arguments, true];\n    },\n    getProcedureCallers      : Blockly.Blocks.procedures_defnoreturn.getProcedureCallers,\n    getVars                  : Blockly.Blocks.procedures_defnoreturn.getVars,\n    getVarModels             : Blockly.Blocks.procedures_defnoreturn.getVarModels,\n    renameVarById            : Blockly.Blocks.procedures_defnoreturn.renameVarById,\n    updateVarName            : Blockly.Blocks.procedures_defnoreturn.updateVarName,\n    displayRenamedVar        : Blockly.Blocks.procedures_defnoreturn.displayRenamedVar,\n    customContextMenu        : Blockly.Blocks.procedures_defnoreturn.customContextMenu,\n    callType                 : 'procedures_callreturn',\n    registerWorkspaceListener: Blockly.Blocks.procedures_defnoreturn.registerWorkspaceListener,\n};\n\nBlockly.JavaScript.procedures_defreturn = Blockly.JavaScript.procedures_defnoreturn;\n","import { setBlockTextColor } from '../../../utils';\nimport { translate }         from '../../../../utils/lang/i18n';\n\n/**\n * Block for conditionally returning a value from a procedure.\n * @this Blockly.Block\n */\nBlockly.Blocks.procedures_ifreturn = {\n    init() {\n        this.hasReturnValue = true;\n\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('if %1 return %2'),\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'CONDITION',\n                },\n                {\n                    type: 'input_value',\n                    name: 'VALUE',\n                },\n            ],\n            colour           : Blockly.Colours.BinaryProcedures.colour,\n            colourSecondary  : Blockly.Colours.BinaryProcedures.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryProcedures.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Function If Else'),\n            category         : Blockly.Categories.Functions,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Function If else'),\n            'description' : translate('Function If else Description'),\n        };\n    },\n    /**\n     * Create XML to represent whether this block has a return value.\n     * @return {!Element} XML storage element.\n     * @this Blockly.Block\n     */\n    mutationToDom() {\n        const container = document.createElement('mutation');\n        container.setAttribute('value', Number(this.hasReturnValue));\n        return container;\n    },\n    /**\n     * Parse XML to restore whether this block has a return value.\n     * @param {!Element} xmlElement XML storage element.\n     * @this Blockly.Block\n     */\n    domToMutation(xmlElement) {\n        const value = xmlElement.getAttribute('value');\n        this.hasReturnValue = value === '1';\n\n        if (!this.hasReturnValue) {\n            this.removeInput('VALUE');\n            this.appendDummyInput('VALUE').appendField(translate('return'));\n            this.initSvg();\n            this.render();\n        }\n    },\n    /**\n     * Called whenever anything on the workspace changes.\n     * Add warning if this flow block is not nested inside a loop.\n     * @param {!Blockly.Events.Abstract} e Change event.\n     * @this Blockly.Block\n     */\n    onchange(/* e */) {\n        setBlockTextColor(this);\n\n        if (!this.workspace.isDragging || this.workspace.isDragging()) {\n            return; // Don't change state at the start of a drag.\n        }\n\n        let legal = false;\n\n        // Is the block nested in a procedure?\n        let block = this;\n        do {\n            if (this.FUNCTION_TYPES.indexOf(block.type) !== -1) {\n                legal = true;\n                break;\n            }\n            block = block.getSurroundParent();\n        } while (block);\n\n        if (legal) {\n            const rerender = () => {\n                this.initSvg();\n                this.render();\n            };\n\n            // If needed, toggle whether this block has a return value.\n            if (block.type === 'procedures_defnoreturn' && this.hasReturnValue) {\n                this.removeInput('VALUE');\n                this.appendDummyInput('VALUE').appendField(translate('return'));\n                rerender();\n                this.hasReturnValue = false;\n            } else if (block.type === 'procedures_defreturn' && !this.hasReturnValue) {\n                this.removeInput('VALUE');\n                this.appendValueInput('VALUE').appendField(translate('return'));\n                rerender();\n                this.hasReturnValue = true;\n            }\n\n            if (!this.isInFlyout) {\n                this.setDisabled(false);\n            }\n        } else if (!this.isInFlyout && !this.getInheritedDisabled()) {\n            this.setDisabled(true);\n        }\n    },\n    /**\n     * List of block types that are functions and thus do not need warnings.\n     * To add a new function type add this to your code:\n     * Blockly.Blocks['procedures_ifreturn'].FUNCTION_TYPES.push('custom_func');\n     */\n    FUNCTION_TYPES: ['procedures_defnoreturn', 'procedures_defreturn'],\n};\n\nBlockly.JavaScript.procedures_ifreturn = block => {\n    const condition = Blockly.JavaScript.valueToCode(block, 'CONDITION', Blockly.JavaScript.ORDER_NONE) || 'false';\n\n    let branch;\n    if (block.hasReturnValue) {\n        const value = Blockly.JavaScript.valueToCode(block, 'VALUE', Blockly.JavaScript.ORDER_NONE) || 'null';\n        branch = `return ${value};\\n`;\n    } else {\n        branch = 'return;\\n';\n    }\n\n    const code = `\n    if (${condition}) {\n        ${branch}\n    }\\n`;\n    return code;\n};\n","import { plusIconDark } from '../../images';\nimport { translate }    from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.lists_create_with = {\n    init() {\n        this.jsonInit(this.definition());\n\n        // Render a ➕-icon for adding additional `lists_statement` blocks\n        const fieldImage = new Blockly.FieldImage(plusIconDark, 25, 25, '', () => this.onIconClick());\n        this.appendDummyInput('ADD_ICON').appendField(fieldImage);\n        this.moveInputBefore('ADD_ICON', 'STACK');\n    },\n    definition(){\n        return {\n            message0: translate('set %1 to create list with'),\n            message1: '%1',\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VARIABLE',\n                    variable: translate('list'),\n                },\n            ],\n            args1: [\n                {\n                    type: 'input_statement',\n                    name: 'STACK',\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Create List with'),\n            category         : Blockly.Categories.List,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Create list with'),\n            'description' : translate('Create list with description'),\n        };\n    },\n    onIconClick() {\n        if (!this.workspace || this.isInFlyout) {\n            return;\n        }\n\n        const statementBlock = this.workspace.newBlock('lists_statement');\n        statementBlock.requiredParentId = this.id;\n        statementBlock.setMovable(false);\n        statementBlock.initSvg();\n        statementBlock.render();\n\n        const connection = this.getLastConnectionInStatement('STACK');\n        connection.connect(statementBlock.previousConnection);\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.END_DRAG) {\n            // Only allow `lists_statement` blocks to be part of the `STACK`\n            let currentBlock = this.getInputTargetBlock('STACK');\n            while (currentBlock !== null) {\n                if (currentBlock.type !== 'lists_statement') {\n                    currentBlock.unplug(false);\n                }\n                currentBlock = currentBlock.getNextBlock();\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.lists_create_with = block => {\n    const variable = block.getFieldValue('VARIABLE');\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(variable, Blockly.Variables.NAME_TYPE);\n    const elements = [];\n\n    let currentBlock = block.getInputTargetBlock('STACK');\n    while (currentBlock !== null) {\n        const value = Blockly.JavaScript[currentBlock.type](currentBlock);\n\n        if (Array.isArray(value) && value.length === 2) {\n            elements.push(value[0]);\n        } else {\n            elements.push(value);\n        }\n\n        currentBlock = currentBlock.getNextBlock();\n    }\n\n    const code = `${varName} = [${elements.join(', ')}];\\n`;\n    return code;\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.lists_getIndex = {\n    init() {\n        this.MODE_OPTIONS = [\n            [translate('get'), 'GET'],\n            [translate('get and remove'), 'GET_REMOVE'],\n            [translate('remove'), 'REMOVE'],\n        ];\n        this.WHERE_OPTIONS = [\n            ['#', 'FROM_START'],\n            [translate('# from end'), 'FROM_END'],\n            [translate('first'), 'FIRST'],\n            [translate('last'), 'LAST'],\n            [translate('random'), 'RANDOM'],\n        ];\n        const modeMenu = new Blockly.FieldDropdown(this.MODE_OPTIONS, value => {\n            const isStatement = value === 'REMOVE';\n            this.updateStatement(isStatement);\n        });\n\n        this.appendValueInput('VALUE')\n            .setCheck('Array')\n            .appendField(translate('in list'));\n        this.appendDummyInput().appendField(modeMenu, 'MODE');\n        this.appendDummyInput('AT');\n        // eslint-disable-next-line no-underscore-dangle\n        this.setColourFromRawValues_(\n            Blockly.Colours.Binary.colour,\n            Blockly.Colours.Binary.colourSecondary,\n            Blockly.Colours.Binary.colourTertiary\n        );\n        this.setOutput(true, null);\n\n        this.updateAt(true);\n    },\n    meta(){\n        return {\n            'display_name': translate('List Get Index'),\n            'description' : translate('List Get Index Description'),\n            'category'    : Blockly.Categories.List,\n        };\n    },\n    mutationToDom() {\n        const container = document.createElement('mutation');\n        const isStatement = !this.outputConnection;\n        const isAt = this.getInput('AT').type === Blockly.INPUT_VALUE;\n\n        container.setAttribute('statement', isStatement);\n        container.setAttribute('at', isAt);\n\n        return container;\n    },\n    domToMutation(xmlElement) {\n        const isStatement = xmlElement.getAttribute('statement') === 'true';\n        this.updateStatement(isStatement);\n\n        const isAt = xmlElement.getAttribute('at') !== 'false';\n        this.updateAt(isAt);\n    },\n    updateStatement(newStatement) {\n        const oldStatement = !this.outputConnection;\n\n        if (newStatement !== oldStatement) {\n            this.unplug(true, true);\n\n            this.setOutput(!newStatement);\n            this.setPreviousStatement(newStatement);\n            this.setNextStatement(newStatement);\n\n            this.initSvg();\n            this.render(false);\n        }\n    },\n    updateAt(isAt) {\n        this.removeInput('AT', true);\n\n        if (isAt) {\n            this.appendValueInput('AT').setCheck('Number');\n        } else {\n            this.appendDummyInput('AT');\n        }\n\n        const menu = new Blockly.FieldDropdown(this.WHERE_OPTIONS, value => {\n            const newAt = ['FROM_START', 'FROM_END'].includes(value);\n            if (newAt !== isAt) {\n                this.updateAt(newAt);\n                this.setFieldValue(value, 'WHERE');\n                return null;\n            }\n            return undefined;\n        });\n\n        this.getInput('AT').appendField(menu, 'WHERE');\n\n        this.initSvg();\n        this.render(false);\n    },\n};\n\nBlockly.JavaScript.lists_getIndex = block => {\n    const mode = block.getFieldValue('MODE') || 'GET';\n    const where = block.getFieldValue('WHERE') || 'FIRST';\n    const listOrder = where === 'RANDOM' ? Blockly.JavaScript.ORDER_COMMA : Blockly.JavaScript.ORDER_MEMBER;\n    const list = Blockly.JavaScript.valueToCode(block, 'VALUE', listOrder) || '[]';\n\n    let code,\n        order;\n\n    if (where === 'FIRST') {\n        if (mode === 'GET') {\n            code = `${list}[0]`;\n            order = Blockly.JavaScript.ORDER_MEMBER;\n        } else if (mode === 'GET_REMOVE') {\n            code = `${list}.shift()`;\n            order = Blockly.JavaScript.ORDER_MEMBER;\n        } else if (mode === 'REMOVE') {\n            return `${list}.shift();\\n`;\n        }\n    } else if (where === 'LAST') {\n        if (mode === 'GET') {\n            code = `${list}.slice(-1)[0]`;\n            order = Blockly.JavaScript.ORDER_MEMBER;\n        } else if (mode === 'GET_REMOVE') {\n            code = `${list}.pop()`;\n            order = Blockly.JavaScript.ORDER_MEMBER;\n        } else if (mode === 'REMOVE') {\n            return `${list}.pop();\\n`;\n        }\n    } else if (where === 'FROM_START') {\n        const at = Blockly.JavaScript.getAdjusted(block, 'AT');\n        if (mode === 'GET') {\n            code = `${list}[${at}]`;\n            order = Blockly.JavaScript.ORDER_MEMBER;\n        } else if (mode === 'GET_REMOVE') {\n            code = `${list}.splice(${at}, 1)[0]`;\n            order = Blockly.JavaScript.ORDER_FUNCTION_CALL;\n        } else if (mode === 'REMOVE') {\n            return `${list}.splice(${at}, 1);\\n`;\n        }\n    } else if (where === 'FROM_END') {\n        const at = Blockly.JavaScript.getAdjusted(block, 'AT', 1, true);\n        if (mode === 'GET') {\n            code = `${list}.slice(${at})[0]`;\n            order = Blockly.JavaScript.ORDER_FUNCTION_CALL;\n        } else if (mode === 'GET_REMOVE') {\n            code = `${list}.splice(${at}, 1)[0]`;\n            order = Blockly.JavaScript.ORDER_FUNCTION_CALL;\n        } else if (mode === 'REMOVE') {\n            return `${list}.splice(${at}, 1);\\n`;\n        }\n    } else if (where === 'RANDOM') {\n        // eslint-disable-next-line no-underscore-dangle\n        const functionName = Blockly.JavaScript.provideFunction_('listsGetRandomItem', [\n            // eslint-disable-next-line no-underscore-dangle\n            `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(list, remove) {\n                var x = Math.floor(Math.random() * list.length);\n                if (remove) {\n                    return list.splice(x, 1)[0];\n                } else {\n                    return list[x];\n                }\n            }`,\n        ]);\n\n        code = `${functionName}(${list}, ${mode !== 'GET'})`;\n\n        if (mode === 'GET' || mode === 'GET_REMOVE') {\n            order = Blockly.JavaScript.ORDER_FUNCTION_CALL;\n        } else if (mode === 'REMOVE') {\n            return `${code};\\n`;\n        }\n    }\n\n    return [code, order];\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.lists_getSublist = {\n    init() {\n        this.WHERE_OPTIONS_1 = [\n            [translate('get sub-list from #'), 'FROM_START'],\n            [translate('get sub-list from # from end'), 'FROM_END'],\n            [translate('get sub-list from first'), 'FIRST'],\n        ];\n        this.WHERE_OPTIONS_2 = [\n            [translate('#'), 'FROM_START'],\n            [translate('# from end'), 'FROM_END'],\n            [translate('last'), 'LAST'],\n        ];\n\n        this.appendValueInput('LIST').appendField(translate('in list'));\n        this.appendDummyInput('AT1');\n        this.appendDummyInput('AT2');\n\n        // eslint-disable-next-line no-underscore-dangle\n        this.setColourFromRawValues_(\n            Blockly.Colours.Binary.colour,\n            Blockly.Colours.Binary.colourSecondary,\n            Blockly.Colours.Binary.colourTertiary\n        );\n        this.setOutput(true, null);\n        this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n\n        this.updateAt(1, true);\n        this.updateAt(2, true);\n    },\n    meta() {\n        return {\n            'display_name': translate('List get sublit'),\n            'description' : translate('List get sublist description'),\n            'category'    : Blockly.Categories.List,\n        };\n    },\n    mutationToDom() {\n        const container = document.createElement('mutation');\n        const isAt1 = this.getInput('AT1').type === Blockly.INPUT_VALUE;\n        const isAt2 = this.getInput('AT2').type === Blockly.INPUT_VALUE;\n\n        container.setAttribute('at1', isAt1);\n        container.setAttribute('at2', isAt2);\n\n        return container;\n    },\n    domToMutation(xmlElement) {\n        const isAt1 = xmlElement.getAttribute('at1') === 'true';\n        const isAt2 = xmlElement.getAttribute('at2') === 'true';\n        this.updateAt(1, isAt1);\n        this.updateAt(2, isAt2);\n    },\n    updateAt(n, isAt) {\n        this.removeInput(`AT${n}`);\n\n        if (isAt) {\n            this.appendValueInput(`AT${n}`).setCheck('Number');\n        } else {\n            this.appendDummyInput(`AT${n}`);\n        }\n\n        const menu = new Blockly.FieldDropdown(this[`WHERE_OPTIONS_${n}`], value => {\n            const newAt = ['FROM_START', 'FROM_END'].includes(value);\n            if (newAt !== isAt) {\n                this.updateAt(n, newAt);\n                this.setFieldValue(value, `WHERE${n}`);\n                return null;\n            }\n            return undefined;\n        });\n\n        this.getInput(`AT${n}`).appendField(menu, `WHERE${n}`);\n\n        if (n === 1) {\n            this.moveInputBefore('AT1', 'AT2');\n        }\n\n        this.initSvg();\n        this.render(false);\n    },\n};\n\nBlockly.JavaScript.lists_getSublist = block => {\n    const list = Blockly.JavaScript.valueToCode(block, 'LIST', Blockly.JavaScript.ORDER_MEMBER) || '[]';\n    const where1 = block.getFieldValue('WHERE1');\n    const where2 = block.getFieldValue('WHERE2');\n\n    let at1,\n        at2,\n        code;\n\n    if (list.match(/^\\w+$/)) {\n        if (where1 === 'FROM_START') {\n            at1 = Blockly.JavaScript.getAdjusted(block, 'AT1');\n        } else if (where1 === 'FROM_END') {\n            at1 = Blockly.JavaScript.getAdjusted(block, 'AT1', 1, false, Blockly.JavaScript.ORDER_SUBTRACTION);\n            at1 = `${list}.length - ${at1}`;\n        }\n        if (where2 === 'FROM_START') {\n            at2 = Blockly.JavaScript.getAdjusted(block, 'AT2', 1);\n        } else if (where2 === 'FROM_END') {\n            at2 = Blockly.JavaScript.getAdjusted(block, 'AT2', 0, false, Blockly.JavaScript.ORDER_SUBTRACTION);\n            at2 = `${list}.length - ${at2}`;\n        }\n\n        code = `${list}.slice(${at1}, ${at2})`;\n    } else {\n        at1 = Blockly.JavaScript.getAdjusted(block, 'AT1');\n        at2 = Blockly.JavaScript.getAdjusted(block, 'AT2');\n        const wherePascalCase = {\n            FROM_START: 'FromStart',\n            FROM_END  : 'FromEnd',\n        };\n        const getIndex = (listName, where, at) => (where === 'FROM_END' ? `${listName}.length - 1 - ${at}` : at);\n\n        // eslint-disable-next-line no-underscore-dangle\n        const functionName = Blockly.JavaScript.provideFunction_(\n            `subsequence${wherePascalCase[where1]}${wherePascalCase[where2]}`,\n            [\n                // eslint-disable-next-line no-underscore-dangle\n                `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(sequence, at1, at2) {\n                var start = ${getIndex('sequence', where1, 'at1')};\n                var end = ${getIndex('sequence', where2, 'at2')};\n                return sequence.slice(start, end);\n            }`,\n            ]\n        );\n\n        code = `${functionName}(${list}, ${at1}, ${at2})`;\n    }\n\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.lists_indexOf = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('in list %1 find %2 occurence of item %3'),\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'VALUE',\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'END',\n                    options: [[translate('first'), 'FIRST'], [translate('last'), 'LAST']],\n                },\n                {\n                    type: 'input_value',\n                    name: 'FIND',\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Index of List Tooltip'),\n            category       : Blockly.Categories.List,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Index Of List'),\n            'description' : translate('Index of List Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.lists_indexOf = block => {\n    const operator = block.getFieldValue('END') === 'FIRST' ? 'indexOf' : 'lastIndexOf';\n    const item = Blockly.JavaScript.valueToCode(block, 'FIND', Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n    const list = Blockly.JavaScript.valueToCode(block, 'VALUE', Blockly.JavaScript.ORDER_MEMBER) || '\\'\\'';\n\n    const code = `${list}.${operator}(${item})`;\n\n    if (block.workspace.options.oneBasedIndex) {\n        return [`${code} + 1`, Blockly.JavaScript.ORDER_ADDITION];\n    }\n\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.lists_isEmpty = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('list %1 is empty'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'VALUE',\n                    check: ['Array'],\n                },\n            ],\n            output         : 'Boolean',\n            outputShape    : Blockly.OUTPUT_SHAPE_HEXAGONAL,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('List is Empty Tooltip'),\n            category       : Blockly.Categories.List,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('List is Empty'),\n            'description' : translate('List is empty Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.lists_isEmpty = block => {\n    const list = Blockly.JavaScript.valueToCode(block, 'VALUE', Blockly.JavaScript.ORDER_MEMBER) || '[]';\n    const isVariable = block.workspace.getAllVariables().findIndex(variable => variable.name === list) !== -1;\n\n    const code = isVariable ? `!${list} || !${list}.length` : `!${list}.length`;\n    return [code, Blockly.JavaScript.ORDER_LOGICAL_NOT];\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.lists_length = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('length of %1'),\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'VALUE',\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('List Length Tooltip'),\n            category       : Blockly.Categories.List,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('List Length'),\n            'description' : translate('List Length Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.lists_length = block => {\n    const list = Blockly.JavaScript.valueToCode(block, 'VALUE', Blockly.JavaScript.ORDER_MEMBER) || '[]';\n\n    const code = `${list}.length`;\n    return [code, Blockly.JavaScript.ORDER_MEMBER];\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.lists_repeat = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('set %1 to item %2 repeated %3 times'),\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VARIABLE',\n                    variable: translate('list'),\n                },\n                {\n                    type: 'input_value',\n                    name: 'ITEM',\n                },\n                {\n                    type: 'input_value',\n                    name: 'NUM',\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('List Repeat Tooltip'),\n            category         : Blockly.Categories.List,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('List Repeat'),\n            'description' : translate('List Repeat Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.lists_repeat = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('VARIABLE'),\n        Blockly.Variables.NAME_TYPE\n    );\n    // eslint-disable-next-line no-underscore-dangle\n    const functionName = Blockly.JavaScript.provideFunction_('listsRepeat', [\n        // eslint-disable-next-line no-underscore-dangle\n        `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(value, n) {\n            var array = [];\n            for (var i = 0; i < n; i++) {\n                array[i] = value;\n            }\n            return array;\n        }`,\n    ]);\n\n    const element = Blockly.JavaScript.valueToCode(block, 'ITEM', Blockly.JavaScript.ORDER_COMMA) || 'null';\n    const repeatCount = Blockly.JavaScript.valueToCode(block, 'NUM', Blockly.JavaScript.ORDER_COMMA) || '0';\n\n    const code = `${varName} = ${functionName}(${element}, ${repeatCount});\\n`;\n    return code;\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.lists_setIndex = {\n    init() {\n        this.MODE_OPTIONS = [[translate('set'), 'SET'], [translate('insert at'), 'INSERT']];\n        this.WHERE_OPTIONS = [\n            [translate('#'), 'FROM_START'],\n            [translate('# from end'), 'FROM_END'],\n            [translate('first'), 'FIRST'],\n            [translate('last'), 'LAST'],\n            [translate('random'), 'RANDOM'],\n        ];\n\n        this.appendValueInput('LIST')\n            .setCheck('Array')\n            .appendField(translate('in list'));\n        this.appendDummyInput().appendField(new Blockly.FieldDropdown(this.MODE_OPTIONS), 'MODE');\n        this.appendDummyInput('AT');\n        this.appendValueInput('TO').appendField(translate('as'));\n\n        // eslint-disable-next-line no-underscore-dangle\n        this.setColourFromRawValues_(\n            Blockly.Colours.Binary.colour,\n            Blockly.Colours.Binary.colourSecondary,\n            Blockly.Colours.Binary.colourTertiary\n        );\n        this.setPreviousStatement(true, null);\n        this.setNextStatement(true, null);\n\n        this.updateAt(true);\n    },\n    meta(){\n        return {\n            'display_name': translate('List set Index'),\n            'description' : translate('List set Index'),\n            'category'    : Blockly.Categories.List,\n        };\n    },\n    mutationToDom() {\n        const container = document.createElement('mutation');\n        const isAt = this.getInput('AT').type === Blockly.INPUT_VALUE;\n\n        container.setAttribute('at', isAt);\n        return container;\n    },\n    domToMutation(xmlElement) {\n        const isAt = xmlElement.getAttribute('at') !== 'false';\n        this.updateAt(isAt);\n    },\n    updateAt(isAt) {\n        this.removeInput('AT', true);\n\n        if (isAt) {\n            this.appendValueInput('AT').setCheck('Number');\n        } else {\n            this.appendDummyInput('AT');\n        }\n\n        const menu = new Blockly.FieldDropdown(this.WHERE_OPTIONS, value => {\n            const newAt = ['FROM_START', 'FROM_END'].includes(value);\n            if (newAt !== isAt) {\n                this.updateAt(newAt);\n                this.setFieldValue(value, 'WHERE');\n                return null;\n            }\n            return undefined;\n        });\n\n        this.moveInputBefore('AT', 'TO');\n        this.getInput('AT').appendField(menu, 'WHERE');\n        this.initSvg();\n        this.render(false);\n    },\n};\n\nBlockly.JavaScript.lists_setIndex = block => {\n    const mode = block.getFieldValue('MODE') || 'SET';\n    const where = block.getFieldValue('WHERE') || 'FIRST';\n    const value = Blockly.JavaScript.valueToCode(block, 'TO', Blockly.JavaScript.ORDER_ASSIGNMENT) || 'null';\n\n    let list = Blockly.JavaScript.valueToCode(block, 'LIST', Blockly.JavaScript.ORDER_MEMBER) || '[]';\n\n    const cacheList = () => {\n        if (list.match(/^\\w+$/)) {\n            return '';\n        }\n\n        // eslint-disable-next-line no-underscore-dangle\n        const listVar = Blockly.JavaScript.variableDB_.getDistinctName('tmpList', Blockly.Variables.NAME_TYPE);\n        const code = `var ${listVar} = ${list};\\n`;\n\n        list = listVar;\n        return code;\n    };\n\n    let code;\n\n    if (where === 'FIRST') {\n        if (mode === 'SET') {\n            code = `${list}[0] = ${value};\\n`;\n        } else if (mode === 'INSERT') {\n            code = `${list}.unshift(${value});\\n`;\n        }\n    } else if (where === 'LAST') {\n        if (mode === 'SET') {\n            code = cacheList();\n            code += `${list}[${list}.length - 1] = ${value};\\n`;\n        } else if (mode === 'INSERT') {\n            code = `${list}.push(${value});\\n`;\n        }\n    } else if (where === 'FROM_START') {\n        const at = Blockly.JavaScript.getAdjusted(block, 'AT');\n        if (mode === 'SET') {\n            code = `${list}[${at}] = ${value};\\n`;\n        } else if (mode === 'INSERT') {\n            code = `${list}.splice(${at}, 0, ${value});\\n`;\n        }\n    } else if (where === 'FROM_END') {\n        const at = Blockly.JavaScript.getAdjusted(block, 'AT', 1, false, Blockly.JavaScript.ORDER_SUBTRACTION);\n        code = cacheList();\n        if (mode === 'SET') {\n            code = `${list}[${list}.length - ${at}] = ${value};\\n`;\n        } else if (mode === 'INSERT') {\n            code = `${list}.splice(${list}.length - ${at}, 0, ${value});\\n`;\n        }\n    } else if (where === 'RANDOM') {\n        code = cacheList();\n\n        // eslint-disable-next-line no-underscore-dangle\n        const xVar = Blockly.JavaScript.variableDB_.getDistinctName('tmpX', Blockly.Variables.NAME_TYPE);\n\n        code += `var ${xVar} = Math.floor(Math.random() * ${list}.length);\\n`;\n\n        if (mode === 'SET') {\n            code += `${list}[${xVar}] = ${value};\\n`;\n        } else if (mode === 'INSERT') {\n            code += `${list}.splice(${xVar}, 0, ${value});\\n`;\n        }\n    }\n\n    return code;\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.lists_sort = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('sort %1 %2 %3'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'TYPE',\n                    options: [[translate('numeric'), 'NUMERIC'], [translate('alphabetic'), 'TEXT']],\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'DIRECTION',\n                    options: [[translate('ascending'), '1'], [translate('descending'), '-1']],\n                },\n                {\n                    type: 'input_value',\n                    name: 'LIST',\n                },\n            ],\n            output         : 'Array',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('List Sort Tooltip'),\n            category       : Blockly.Categories.List,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('List Sort'),\n            'description' : translate('List Sort Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.lists_sort = block => {\n    const list = Blockly.JavaScript.valueToCode(block, 'LIST', Blockly.JavaScript.ORDER_FUNCTION_CALL) || '[]';\n    const direction = block.getFieldValue('DIRECTION') === '1' ? 1 : -1;\n    const type = block.getFieldValue('TYPE');\n    // eslint-disable-next-line no-underscore-dangle\n    const getCompareFunctionName = Blockly.JavaScript.provideFunction_('listsGetSortCompare', [\n        // eslint-disable-next-line no-underscore-dangle\n        `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(type, direction) {\n            var compareFuncs = {\n                NUMERIC: function(a, b) {\n                    return parseFloat(a) - parseFloat(b);\n                },\n                TEXT: function(a, b) {\n                    return a.toString().toLowerCase() > b.toString().toLowerCase() ? 1 : -1;\n                }\n            };\n\n            return function(a, b) {\n                return compareFuncs[type](a, b) * direction; \n            }\n        }`,\n    ]);\n\n    const code = `${list}.slice(0).sort(${getCompareFunctionName}(\"${type}\", ${direction}))`;\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.lists_split = {\n    init() {\n        const dropdown = new Blockly.FieldDropdown(\n            [[translate('make list from text'), 'SPLIT'], [translate('make text from list'), 'JOIN']],\n            newMode => this.updateType(newMode)\n        );\n\n        this.appendValueInput('INPUT')\n            .setCheck('String')\n            .appendField(dropdown, 'MODE');\n        this.appendValueInput('DELIM')\n            .setCheck('String')\n            .appendField('', 'SPACE1')\n            .appendField(translate('with delimiter'), 'DELIM_LABEL');\n        this.appendDummyInput().appendField('', 'SPACE2');\n\n        this.setOutput(true, 'Array');\n        this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n\n        // eslint-disable-next-line no-underscore-dangle\n        this.setColourFromRawValues_(\n            Blockly.Colours.Binary.colour,\n            Blockly.Colours.Binary.colourSecondary,\n            Blockly.Colours.Binary.colourTertiary\n        );\n    },\n    meta(){\n        return {\n            'display_name': translate('List Split'),\n            'description' : translate('List SPlit Description'),\n            'category'    : Blockly.Categories.List,\n        };\n    },\n    mutationToDom() {\n        const container = document.createElement('mutation');\n        container.setAttribute('mode', this.getFieldValue('MODE'));\n        return container;\n    },\n    domToMutation(xmlElement) {\n        this.updateType(xmlElement.getAttribute('mode'));\n    },\n    updateType(newMode) {\n        const delimInput = this.getInput('DELIM');\n        const spaceField = this.getField('SPACE1');\n\n        if (newMode === 'SPLIT') {\n            this.outputConnection.setCheck('Array');\n            this.getInput('INPUT').setCheck('String');\n\n            // Create extra spacing for OUTPUT_SHAPE_SQUARE (i.e. string shapes)\n            if (!spaceField) {\n                delimInput.insertFieldAt(0, '', 'SPACE1');\n            }\n        } else {\n            this.outputConnection.setCheck('String');\n            this.getInput('INPUT').setCheck(null);\n\n            if (spaceField) {\n                delimInput.removeField('SPACE1');\n            }\n        }\n\n        this.initSvg();\n        this.render(false);\n    },\n};\n\nBlockly.JavaScript.lists_split = block => {\n    const input = Blockly.JavaScript.valueToCode(block, 'INPUT', Blockly.JavaScript.ORDER_MEMBER);\n    const delimiter = Blockly.JavaScript.valueToCode(block, 'DELIM', Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n    const mode = block.getFieldValue('MODE');\n\n    let code;\n\n    if (mode === 'SPLIT') {\n        code = `${input || '\\'\\''}.split(${delimiter})`;\n    } else if (mode === 'JOIN') {\n        code = `${input || '[]'}.join(${delimiter})`;\n    }\n\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n","import { minusIconDark } from '../../images';\nimport { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.lists_statement = {\n    init() {\n        this.requiredParentId = '';\n\n        this.jsonInit(this.definition());\n\n        // Render a ➖-icon for removing self\n        const fieldImage = new Blockly.FieldImage(minusIconDark, 25, 25, '', () => this.onIconClick());\n        this.appendDummyInput('REMOVE_ICON').appendField(fieldImage);\n    },\n    definition(){\n        return {\n            message0: '%1',\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'VALUE',\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessGray.colour,\n            colourSecondary  : Blockly.Colours.BinaryLessGray.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessGray.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('List Statement Tooltip'),\n            category         : Blockly.Categories.List,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('List Statement'),\n            'description' : translate('List Statement Description'),\n        };\n    },\n    onIconClick() {\n        if (!this.workspace || this.isInFlyout) {\n            return;\n        }\n\n        this.unplug(true);\n        this.dispose();\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        const surroundParent = this.getSurroundParent();\n        if (event.type === Blockly.Events.END_DRAG) {\n            if (!this.requiredParentId && surroundParent.type === 'lists_create_with') {\n                this.requiredParentId = surroundParent.id;\n            } else if (!surroundParent || surroundParent.id !== this.requiredParentId) {\n                Blockly.Events.disable();\n                this.unplug(false);\n\n                const parentBlock = this.workspace.getAllBlocks().find(block => block.id === this.requiredParentId);\n\n                if (parentBlock) {\n                    const parentConnection = parentBlock.getLastConnectionInStatement('STACK');\n                    parentConnection.connect(this.previousConnection);\n                } else {\n                    this.dispose();\n                }\n                Blockly.Events.enable();\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.lists_statement = block => {\n    const code = Blockly.JavaScript.valueToCode(block, 'VALUE') || 'null';\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.controls_flow_statements = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('%1 of loop'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'FLOW',\n                    options: [\n                        [translate('break out'), 'BREAK'],\n                        [translate('continue with next iteration'), 'CONTINUE'],\n                    ],\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Control Statement Tooltip'),\n            category         : Blockly.Categories.Loop,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Control Statement'),\n            'description' : translate('Control Statement Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.controls_flow_statements = block => {\n    const keyword = block.getFieldValue('FLOW') === 'BREAK' ? 'break' : 'continue';\n    return `${keyword};\\n`;\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.controls_for = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('count with %1 from %2 to %3 by %4'),\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VAR',\n                    variable: null,\n                },\n                {\n                    type : 'input_value',\n                    name : 'FROM',\n                    check: 'Number',\n                },\n                {\n                    type : 'input_value',\n                    name : 'TO',\n                    check: 'Number',\n                },\n                {\n                    type : 'input_value',\n                    name : 'BY',\n                    check: 'Number',\n                },\n            ],\n            message1: translate('do %1'),\n            args1   : [\n                {\n                    type: 'input_statement',\n                    name: 'DO',\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Control For Tooltip'),\n            category         : Blockly.Categories.Loop,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Control For'),\n            'description' : translate('Control For Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.controls_for = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const variable0 = Blockly.JavaScript.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n    const argument0 = Blockly.JavaScript.valueToCode(block, 'FROM', Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n    const argument1 = Blockly.JavaScript.valueToCode(block, 'TO', Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n    const increment = Blockly.JavaScript.valueToCode(block, 'BY', Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n\n    let branch = Blockly.JavaScript.statementToCode(block, 'DO');\n    branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n\n    let code = '';\n\n    if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) && Blockly.isNumber(increment)) {\n        const up = parseFloat(argument0) <= parseFloat(argument1);\n        const operator = up ? '<=' : '>=';\n        const step = Math.abs(parseFloat(increment));\n\n        const assignment = `${variable0} = ${argument0}`;\n        const condition = `${variable0} ${operator} ${argument1}`;\n        const statement = `${variable0} ${up ? '+=' : '-='} ${step}`;\n\n        code = `\n        for (${assignment}; ${condition}; ${statement}) {\n            ${branch}\n        }\\n`;\n    } else {\n        // Cache non-trivial values to variables to prevent repeated look-ups.\n        let startVar = argument0;\n        if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n            // eslint-disable-next-line no-underscore-dangle\n            startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n                `${variable0}_start`,\n                Blockly.Variables.NAME_TYPE\n            );\n            code = `var ${startVar} = ${argument0};\\n`;\n        }\n\n        let endVar = argument1;\n        if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n            // eslint-disable-next-line no-underscore-dangle\n            endVar = Blockly.JavaScript.variableDB_.getDistinctName(`${variable0}_end`, Blockly.Variables.NAME_TYPE);\n            code += `var ${endVar} = ${argument1};\\n`;\n        }\n\n        // Determine loop direction at start, in case one of the bounds changes during loop execution.\n        // eslint-disable-next-line no-underscore-dangle\n        const incVar = Blockly.JavaScript.variableDB_.getDistinctName(`${variable0}_inc`, Blockly.Variables.NAME_TYPE);\n        const incVal = Blockly.isNumber(increment) ? Math.abs(increment) : `Math.abs(${increment})`;\n\n        code += `\n        var ${incVar} = ${incVal};\n        if (${startVar} > ${endVar}) {\n            ${incVar} = -${incVar};\n        }\n        for (\n           ${variable0} = ${startVar}; \n           ${incVar} >= 0 ? ${variable0} <= ${endVar} : ${variable0} >= ${endVar};\n           ${variable0} += ${incVar}\n        ) {\n            ${branch};\n        }\\n`;\n    }\n\n    return code;\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.controls_forEach = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('for each item %1 in list %2'),\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VAR',\n                    variable: null,\n                },\n                {\n                    type : 'input_value',\n                    name : 'LIST',\n                    check: 'Array',\n                },\n            ],\n            message1: translate('do %1'),\n            args1   : [\n                {\n                    type: 'input_statement',\n                    name: 'DO',\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Control Foreach Tooltip'),\n            category         : Blockly.Categories.Loop,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Control Foreach'),\n            'description' : translate('Control Foreach'),\n        };\n    },\n};\n\nBlockly.JavaScript.controls_forEach = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const variable0 = Blockly.JavaScript.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n    const argument0 = Blockly.JavaScript.valueToCode(block, 'LIST', Blockly.JavaScript.ORDER_ASSIGNMENT) || '[]';\n\n    let branch = Blockly.JavaScript.statementToCode(block, 'DO');\n    branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n\n    let code = '';\n\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    let listVar = argument0;\n    if (!argument0.match(/^\\w+$/)) {\n        // eslint-disable-next-line no-underscore-dangle\n        listVar = Blockly.JavaScript.variableDB_.getDistinctName(`${variable0}_list`, Blockly.Variables.NAME_TYPE);\n        code = `var ${listVar} = ${argument0};\\n`;\n    }\n\n    // eslint-disable-next-line no-underscore-dangle\n    const indexVar = Blockly.JavaScript.variableDB_.getDistinctName(`${variable0}_list`, Blockly.Variables.NAME_TYPE);\n\n    code += `\n    for (var ${indexVar} in ${listVar}) {\n        ${variable0} = ${listVar}[${indexVar}];\n        ${branch}\n    }\\n`;\n\n    return code;\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.controls_repeat = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            type    : 'controls_repeat',\n            message0: translate('repeat %1 times'),\n            args0   : [\n                {\n                    type     : 'field_number',\n                    name     : 'TIMES',\n                    value    : 10,\n                    min      : 0,\n                    precision: 1,\n                },\n            ],\n            message1: translate('do %1'),\n            args1   : [\n                {\n                    type: 'input_statement',\n                    name: 'DO',\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Control Repeat Tooltip'),\n            category         : Blockly.Categories.Loop,\n        };\n    },\n    meta(){\n        return  {\n            'display_name': translate('Control Repeat'),\n            'description' : translate('Control Repeat Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.controls_repeat = Blockly.JavaScript.controls_repeat_ext;\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.controls_repeat_ext = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('repeat %1 times'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'TIMES',\n                    check: 'Number',\n                },\n            ],\n            message1: translate('do %1'),\n            args1   : [\n                {\n                    type: 'input_statement',\n                    name: 'DO',\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Control Repeat Tooltip'),\n            category         : Blockly.Categories.Loop,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Control Repeat'),\n            'description' : translate('Control Repeat Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.controls_repeat_ext = block => {\n    let repeats;\n    if (block.getField('TIMES')) {\n        repeats = String(Number(block.getFieldValue('TIMES')));\n    } else {\n        repeats = Blockly.JavaScript.valueToCode(block, 'TIMES') || '0';\n    }\n\n    const branch = Blockly.JavaScript.statementToCode(block, 'DO');\n    let code = '';\n\n    // eslint-disable-next-line no-underscore-dangle\n    const loopVar = Blockly.JavaScript.variableDB_.getDistinctName('count', Blockly.Variables.NAME_TYPE);\n    let endVar = repeats;\n\n    if (!repeats.match(/^\\w+$/) && !Blockly.isNumber(repeats)) {\n        // eslint-disable-next-line no-underscore-dangle\n        endVar = Blockly.JavaScript.variableDB_.getDistinctName('repeat_end', Blockly.Variables.NAME_TYPE);\n        code += `var ${endVar} = ${repeats};\\n`;\n    }\n\n    code += `\n    for (var ${loopVar} = 0; ${loopVar} < ${endVar}; ${loopVar}++) {\n        ${branch}\n    }\\n`;\n    return code;\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.controls_whileUntil = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('repeat %1 %2'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'MODE',\n                    options: [[translate('while'), 'WHILE'], [translate('until'), 'UNTIL']],\n                },\n                {\n                    type : 'input_value',\n                    name : 'BOOL',\n                    check: 'Boolean',\n                },\n            ],\n            message1: translate('do %1'),\n            args1   : [\n                {\n                    type: 'input_statement',\n                    name: 'DO',\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Control While Tooltip'),\n            category         : Blockly.Categories.Loop,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Control While'),\n            'description' : translate('Control While Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.controls_whileUntil = block => {\n    const branch = Blockly.JavaScript.statementToCode(block, 'DO');\n    const until = block.getFieldValue('MODE') === 'UNTIL';\n    const order = until ? Blockly.JavaScript.ORDER_LOGICAL_NOT : Blockly.JavaScript.ORDER_NONE;\n    let argument0 = Blockly.JavaScript.valueToCode(block, 'BOOL', order) || 'false';\n\n    if (until) {\n        argument0 = `!${argument0}`;\n    }\n\n    // eslint-disable-next-line no-underscore-dangle\n    const maxLoopVar = Blockly.JavaScript.variableDB_.getDistinctName('maxLoops', Blockly.Variables.NAME_TYPE);\n    // eslint-disable-next-line no-underscore-dangle\n    const currentLoopVar = Blockly.JavaScript.variableDB_.getDistinctName('currentLoop', Blockly.Variables.NAME_TYPE);\n\n    return `\n        var ${maxLoopVar} = 10000;\n        var ${currentLoopVar} = 0;\n\n        while (${argument0}) {\n            if (${currentLoopVar} > ${maxLoopVar}) {\n                throw new Error(\"${translate('Infinite loop detected')}\");\n            } else {\n                ${currentLoopVar}++;\n            }\n            \n            ${branch}\n        }\\n`;\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.variables_get = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            type    : 'variables_get',\n            message0: '%1',\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VAR',\n                    variable: translate('item'),\n                },\n            ],\n            output         : null,\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Get Variable Tooltip'),\n            category       : Blockly.Categories.Variables,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Get Variable Value'),\n            'description' : translate('Get Variable Value Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.variables_get = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const code = Blockly.JavaScript.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.variables_set = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            type    : 'field_variable',\n            message0: translate('set %1 to %2'),\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VAR',\n                    variable: translate('item'),\n                },\n                {\n                    type: 'input_value',\n                    name: 'VALUE',\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Set Variable Tooltip'),\n            category         : Blockly.Categories.Variables,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Set Variable'),\n            'description' : translate('Set Variable Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.variables_set = block => {\n    const argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE', Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n\n    const code = `${varName} = ${argument0};\\n`;\n    return code;\n};\n","import { finishSign }        from '../../images';\nimport { setBlockTextColor } from '../../../utils';\nimport { translate }         from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.after_purchase = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('%1 (4) Get your trade result and trade again %2'),\n            message1: '%1',\n            args0   : [\n                {\n                    type  : 'field_image',\n                    src   : finishSign,\n                    width : 25,\n                    height: 25,\n                    alt   : 'F',\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type : 'input_statement',\n                    name : 'AFTERPURCHASE_STACK',\n                    check: 'TradeAgain',\n                },\n            ],\n            colour         : '#2a3052',\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate(\n                'Get the previous trade information and result, then trade again (Runs on trade finish)'\n            ),\n            category: Blockly.Categories.After_Purchase,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('After Purchase'),\n            'description' : translate('After Purchase Description'),\n        };\n    },\n    onchange(event) {\n        setBlockTextColor(this);\n        if (!this.workspace || this.isInFlyout) {\n            return;\n        }\n\n        // Maintain single instance of this block\n        if (event.type === Blockly.Events.BLOCK_CREATE) {\n            if (event.ids && event.ids.includes(this.id)) {\n                this.workspace.getAllBlocks(true).forEach(block => {\n                    if (block.type === this.type && block.id !== this.id) {\n                        block.dispose();\n                    }\n                });\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.after_purchase = block => {\n    const stack = Blockly.JavaScript.statementToCode(block, 'AFTERPURCHASE_STACK');\n    const code = `\n    BinaryBotPrivateAfterPurchase = function BinaryBotPrivateAfterPurchase() {\n        ${stack}\n        return false;\n    };`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import config        from '../../../../constants';\nimport { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.contract_check_result = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('Result is %1'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'CHECK_RESULT',\n                    options: config.lists.CHECK_RESULT,\n                },\n            ],\n            output         : 'Boolean',\n            outputShape    : Blockly.OUTPUT_SHAPE_HEXAGONAL,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('True if the result matches the selection'),\n            category       : Blockly.Categories.After_Purchase,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Check Result'),\n            'description' : translate('Check Result Description'),\n        };\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.BLOCK_CREATE || event.type === Blockly.Events.END_DRAG) {\n            if (this.isDescendantOf('after_purchase')) {\n                if (this.disabled) {\n                    this.setDisabled(false);\n                }\n            } else if (!this.disabled) {\n                this.setDisabled(true);\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.contract_check_result = block => {\n    const checkWith = block.getFieldValue('CHECK_RESULT');\n\n    const code = `Bot.isResult('${checkWith}')`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import config        from '../../../../constants';\nimport { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.read_details = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('Contract Detail: %1'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'DETAIL_INDEX',\n                    options: config.lists.DETAILS,\n                },\n            ],\n            output         : null,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Reads a selected option from contract details list'),\n            category       : Blockly.Categories.After_Purchase,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Read Detail Block'),\n            'description' : translate('Read Detail Description'),\n\n        };\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.BLOCK_CREATE || event.type === Blockly.Events.END_DRAG) {\n            if (this.isDescendantOf('after_purchase')) {\n                if (this.disabled) {\n                    this.setDisabled(false);\n                }\n            } else if (!this.disabled) {\n                this.setDisabled(true);\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.read_details = block => {\n    const detailIndex = block.getFieldValue('DETAIL_INDEX');\n\n    const code = `Bot.readDetails(${detailIndex})`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.trade_again = {\n    init() {\n        this.jsonInit(this.definition());\n\n        // Ensure one of this type per statement-stack\n        this.setNextStatement(false);\n    },\n    definition(){\n        return {\n            message0         : translate('Trade Again'),\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            tooltip          : translate('Runs the trade block again'),\n            category         : Blockly.Categories.After_Purchase,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Trade Again'),\n            'description' : translate('Trade Again Description'),\n        };\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.BLOCK_CREATE || event.type === Blockly.Events.END_DRAG) {\n            if (this.isDescendantOf('after_purchase')) {\n                if (this.disabled) {\n                    this.setDisabled(false);\n                }\n            } else if (!this.disabled) {\n                this.setDisabled(true);\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.trade_again = () => 'return true;\\n';\n","import { getPurchaseChoices } from '../../../shared';\nimport { translate }          from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.ask_price = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('Ask Price %1'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'PURCHASE_LIST',\n                    options: getPurchaseChoices,\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Ask Price for selected proposal'),\n            category       : Blockly.Categories.Before_Purchase,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Ask Price'),\n            'description' : translate('Ask Price Description'),\n        };\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.BLOCK_CREATE || event.type === Blockly.Events.END_DRAG) {\n            if (this.isDescendantOf('before_purchase')) {\n                if (this.disabled) {\n                    this.setDisabled(false);\n                }\n            } else if (!this.disabled) {\n                this.setDisabled(true);\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.ask_price = block => {\n    const purchaseList = block.getFieldValue('PURCHASE_LIST');\n\n    const code = `Bot.getAskPrice('${purchaseList}')`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { purchase }          from '../../images';\nimport { setBlockTextColor } from '../../../utils';\nimport { translate }         from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.before_purchase = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition() {\n        return {\n            message0: translate('%1 (2) Watch and purchase your contract %2'),\n            message1: '%1',\n            args0   : [\n                {\n                    type  : 'field_image',\n                    src   : purchase,\n                    width : 25,\n                    height: 25,\n                    alt   : 'P',\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type : 'input_statement',\n                    name : 'BEFOREPURCHASE_STACK',\n                    check: 'Purchase',\n                },\n            ],\n            colour         : '#2a3052',\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Watch the tick stream and purchase the desired contract (Runs on tick update)'),\n            category       : Blockly.Categories.Before_Purchase,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Before Purchase'),\n            'description' : translate('Before Purchase Description'),\n        };\n    },\n    onchange(event) {\n        setBlockTextColor(this);\n        if (!this.workspace || this.isInFlyout) {\n            return;\n        }\n\n        // Maintain single instance of this block\n        if (event.type === Blockly.Events.BLOCK_CREATE) {\n            if (event.ids && event.ids.includes(this.id)) {\n                this.workspace.getAllBlocks(true).forEach(block => {\n                    if (block.type === this.type && block.id !== this.id) {\n                        block.dispose();\n                    }\n                });\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.before_purchase = block => {\n    const stack = Blockly.JavaScript.statementToCode(block, 'BEFOREPURCHASE_STACK');\n\n    const code = `BinaryBotPrivateBeforePurchase = function BinaryBotPrivateBeforePurchase() {\n        ${stack}\n    };\\n`;\n    return code;\n};\n","import { getPurchaseChoices } from '../../../shared';\nimport { translate }         from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.payout = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('Payout %1'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'PURCHASE_LIST',\n                    options: getPurchaseChoices,\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Payout for selected proposal'),\n            category       : Blockly.Categories.Before_Purchase,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Payout'),\n            'description' : translate('Payout Description'),\n        };\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.BLOCK_CREATE || event.type === Blockly.Events.END_DRAG) {\n            if (this.isDescendantOf('before_purchase')) {\n                if (this.disabled) {\n                    this.setDisabled(false);\n                }\n            } else if (!this.disabled) {\n                this.setDisabled(true);\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.payout = block => {\n    const purchaseList = block.getFieldValue('PURCHASE_LIST');\n\n    const code = `Bot.getPayout('${purchaseList}')`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { getPurchaseChoices, updatePurchaseChoices } from '../../../shared';\nimport { translate }                                 from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.purchase = {\n    init() {\n        this.jsonInit(this.definition());\n\n        // Ensure one of this type per statement-stack\n        this.setNextStatement(false);\n    },\n    definition(){\n        return {\n            message0: translate('Purchase %1'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'PURCHASE_LIST',\n                    options: getPurchaseChoices,\n                },\n            ],\n            previousStatement: null,\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            tooltip          : translate('Payout for selected proposal'),\n            category         : Blockly.Categories.Before_Purchase,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Puchase'),\n            'description' : translate('Purchase Description'),\n        };\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (this.isDescendantOf('before_purchase')) {\n            if (this.disabled) {\n                this.setDisabled(false);\n            }\n        } else if (!this.disabled) {\n            this.setDisabled(true);\n        }\n\n        if (\n            (event.type === Blockly.Events.BLOCK_CREATE && event.ids.includes(this.id)) ||\n            (event.type === Blockly.Events.BLOCK_CHANGE)\n        ) {\n            const trade_definition_block = this.workspace.getAllBlocks(true).find(block => block.type === 'trade_definition');\n\n            if (!trade_definition_block) {\n                return;\n            }\n\n            const trade_type_block    = trade_definition_block.getChildByType('trade_definition_tradetype');\n            const contract_type_block = trade_definition_block.getChildByType('trade_definition_contracttype');\n\n            const trade_type    = trade_type_block.getFieldValue('TRADETYPE_LIST');\n            const opposite_name = trade_type.toUpperCase();\n            const contract_type = contract_type_block.getFieldValue('TYPE_LIST');\n\n            if (opposite_name && opposite_name !== 'NA' && trade_type && contract_type) {\n                updatePurchaseChoices(contract_type, opposite_name);\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.purchase = block => {\n    const purchaseList = block.getFieldValue('PURCHASE_LIST');\n\n    const code = `Bot.purchase('${purchaseList}');\\n`;\n    return code;\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.check_sell = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0       : translate('Sell is available'),\n            output         : 'Boolean',\n            outputShape    : Blockly.OUTPUT_SHAPE_HEXAGONAL,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('True if sell at market is available'),\n            category       : Blockly.Categories.During_Purchase,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Check Sell'),\n            'description' : translate('Check Sell Description'),\n        };\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.BLOCK_CREATE || event.type === Blockly.Events.END_DRAG) {\n            if (this.isDescendantOf('during_purchase')) {\n                if (this.disabled) {\n                    this.setDisabled(false);\n                }\n            } else if (!this.disabled) {\n                this.setDisabled(true);\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.check_sell = () => {\n    const code = 'Bot.isSellAvailable()';\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { sellContract }      from '../../images';\nimport { setBlockTextColor } from '../../../utils';\nimport { translate }         from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.during_purchase = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('%1 (3) Watch and sell your purchased contract %2'),\n            message1: '%1',\n            args0   : [\n                {\n                    type  : 'field_image',\n                    src   : sellContract,\n                    width : 25,\n                    height: 25,\n                    alt   : 'S',\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type : 'input_statement',\n                    name : 'DURING_PURCHASE_STACK',\n                    check: 'SellAtMarket',\n                },\n            ],\n            colour         : '#2a3052',\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate(\n                'Watch the purchased contract info and sell at market if available (Runs on contract update)'\n            ),\n            category: Blockly.Categories.During_Purchase,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('During Purchase'),\n            'description' : translate('During Purchase Description'),\n        };\n    },\n    onchange(event) {\n        setBlockTextColor(this);\n        if (!this.workspace || this.isInFlyout) {\n            return;\n        }\n\n        // Maintain single instance of this block\n        if (event.type === Blockly.Events.BLOCK_CREATE) {\n            if (event.ids && event.ids.includes(this.id)) {\n                this.workspace.getAllBlocks(true).forEach(block => {\n                    if (block.type === this.type && block.id !== this.id) {\n                        block.dispose();\n                    }\n                });\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.during_purchase = block => {\n    const stack = Blockly.JavaScript.statementToCode(block, 'DURING_PURCHASE_STACK');\n\n    const code = `BinaryBotPrivateDuringPurchase = function BinaryBotPrivateDuringPurchase() {\n        ${stack}\n    };\\n`;\n    return code;\n};\n","import { translate }         from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.sell_at_market = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0         : translate('Sell at market'),\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Sell at market'),\n            category         : Blockly.Categories.During_Purchase,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Sell at market'),\n            'description' : translate('Sell at market description'),\n        };\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.BLOCK_CREATE || event.type === Blockly.Events.END_DRAG) {\n            if (this.isDescendantOf('during_purchase')) {\n                if (this.disabled) {\n                    this.setDisabled(false);\n                }\n            } else if (!this.disabled) {\n                this.setDisabled(true);\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.sell_at_market = () => 'Bot.sellAtMarket();\\n';\n","import { translate }         from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.sell_price = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0       : translate('Sell profit/loss'),\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Returns the profit for sell at market.'),\n            category       : Blockly.Categories.During_Purchase,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Sell price'),\n            'description' : translate('Sell price description'),\n        };\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.BLOCK_CREATE || event.type === Blockly.Events.END_DRAG) {\n            if (this.isDescendantOf('during_purchase')) {\n                if (this.disabled) {\n                    this.setDisabled(false);\n                }\n            } else if (!this.disabled) {\n                this.setDisabled(true);\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.sell_price = () => {\n    const code = 'Bot.getSellPrice()';\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.fast_ema_period = {\n    init() {\n        this.jsonInit({\n            message0: translate('Fast EMA Period %1'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'FAST_EMA_PERIOD',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessGray.colour,\n            colourSecondary  : Blockly.Colours.BinaryLessGray.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessGray.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange      : Blockly.Blocks.input_list.onchange,\n    allowedParents: ['macda_statement'],\n};\n\nBlockly.JavaScript.fast_ema_period = () => {};\n","import { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.input_list = {\n    init() {\n        this.requiredParentId = '';\n\n        this.jsonInit({\n            message0: translate('Input List %1'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'INPUT_LIST',\n                    check: 'Array',\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessGray.colour,\n            colourSecondary  : Blockly.Colours.BinaryLessGray.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessGray.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        const surroundParent = this.getSurroundParent();\n        if (event.type === Blockly.Events.END_DRAG) {\n            if (!this.requiredParentId && this.allowedParents.includes(surroundParent.type)) {\n                this.requiredParentId = surroundParent.id;\n            } else if (!surroundParent || surroundParent.id !== this.requiredParentId) {\n                Blockly.Events.disable();\n                this.unplug(false);\n\n                const parentBlock = this.workspace.getAllBlocks().find(block => block.id === this.requiredParentId);\n\n                if (parentBlock) {\n                    const parentConnection = parentBlock.getLastConnectionInStatement('STATEMENT');\n                    parentConnection.connect(this.previousConnection);\n                } else {\n                    this.dispose();\n                }\n                Blockly.Events.enable();\n            }\n        }\n    },\n    allowedParents: [\n        'bb_statement',\n        'bba_statement',\n        'ema_statement',\n        'emaa_statement',\n        'macda_statement',\n        'rsi_statement',\n        'rsia_statement',\n        'sma_statement',\n        'smaa_statement',\n    ],\n};\n\nBlockly.JavaScript.input_list = () => {};\n","import { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.period = {\n    init() {\n        this.jsonInit({\n            message0: translate('Period %1'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'PERIOD',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessGray.colour,\n            colourSecondary  : Blockly.Colours.BinaryLessGray.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessGray.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange      : Blockly.Blocks.input_list.onchange,\n    allowedParents: [\n        'bb_statement',\n        'bba_statement',\n        'ema_statement',\n        'emaa_statement',\n        'macda_statement',\n        'rsi_statement',\n        'rsia_statement',\n        'sma_statement',\n        'smaa_statement',\n    ],\n};\n\nBlockly.JavaScript.period = () => {};\n","import { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.signal_ema_period = {\n    init() {\n        this.jsonInit({\n            message0: translate('Signal EMA Period %1'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'SIGNAL_EMA_PERIOD',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessGray.colour,\n            colourSecondary  : Blockly.Colours.BinaryLessGray.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessGray.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange      : Blockly.Blocks.input_list.onchange,\n    allowedParents: ['macda_statement'],\n};\n\nBlockly.JavaScript.signal_ema_period = () => {};\n","import { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.slow_ema_period = {\n    init() {\n        this.jsonInit({\n            message0: translate('Slow EMA Period %1'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'SLOW_EMA_PERIOD',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessGray.colour,\n            colourSecondary  : Blockly.Colours.BinaryLessGray.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessGray.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange      : Blockly.Blocks.input_list.onchange,\n    allowedParents: ['macda_statement'],\n};\n\nBlockly.JavaScript.slow_ema_period = () => {};\n","import { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.std_dev_multiplier_down = {\n    init() {\n        this.jsonInit({\n            message0: translate('Standard Deviation Down Multiplier %1'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'DOWNMULTIPLIER',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessGray.colour,\n            colourSecondary  : Blockly.Colours.BinaryLessGray.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessGray.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n    },\n    onchange      : Blockly.Blocks.input_list.onchange,\n    allowedParents: ['bb_statement', 'bba_statement'],\n};\n\nBlockly.JavaScript.std_dev_multiplier_down = () => {};\n","import { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.std_dev_multiplier_up = {\n    init() {\n        this.jsonInit({\n            message0: translate('Standard Deviation Up Multiplier %1'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'UPMULTIPLIER',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessGray.colour,\n            colourSecondary  : Blockly.Colours.BinaryLessGray.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessGray.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange      : Blockly.Blocks.input_list.onchange,\n    allowedParents: ['bb_statement', 'bba_statement'],\n};\n\nBlockly.JavaScript.std_dev_multiplier_up = () => {};\n","import { expectValue } from '../../../shared';\nimport config          from '../../../../constants';\nimport { translate }   from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.bb_statement = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('set %1 to Bollinger Bands %2 %3'),\n            message1: '%1',\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VARIABLE',\n                    variable: 'bb',\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'BBRESULT_LIST',\n                    options: config.bbResult,\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type : 'input_statement',\n                    name : 'STATEMENT',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            tooltip          : translate('Calculates Bollinger Bands (BB) from a list with a period'),\n            previousStatement: null,\n            nextStatement    : null,\n            category         : Blockly.Categories.Indicators,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('BB Statement'),\n            'descriptionL': translate('BB Statement Description'),\n        };\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.END_DRAG) {\n            const blocksInStatement = this.getBlocksInStatement('STATEMENT');\n            blocksInStatement.forEach(block => {\n                if (!this.requiredParamBlocks.includes(block.type)) {\n                    Blockly.Events.disable();\n                    block.unplug(false);\n                    Blockly.Events.enable();\n                }\n            });\n        }\n    },\n    requiredParamBlocks: ['input_list', 'period', 'std_dev_multiplier_up', 'std_dev_multiplier_down'],\n};\n\nBlockly.JavaScript.bb_statement = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('VARIABLE'),\n        Blockly.Variables.NAME_TYPE\n    );\n    const bbResult = block.getFieldValue('BBRESULT_LIST');\n    const input = expectValue(block.getChildByType('input_list'), 'INPUT_LIST');\n    const period = block.childValueToCode('period', 'PERIOD') || '10';\n    const stdDevUp = block.childValueToCode('std_dev_multiplier_up', 'UPMULTIPLIER') || '5';\n    const stdDevDown = block.childValueToCode('std_dev_multiplier_down', 'DOWNMULTIPLIER') || '5';\n\n    const code = `${varName} = Bot.bb(${input}, { periods: ${period}, stdDevUp: ${stdDevUp}, stdDevDown: ${stdDevDown} }, ${bbResult});\\n`;\n    return code;\n};\n","import { expectValue } from '../../../shared';\nimport config          from '../../../../constants';\nimport { translate }   from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.bba_statement = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('set %1 to Bollinger Bands Array %2 %3'),\n            message1: '%1',\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VARIABLE',\n                    variable: 'bba',\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'BBRESULT_LIST',\n                    options: config.bbResult,\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type : 'input_statement',\n                    name : 'STATEMENT',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            tooltip          : translate('Calculates Bollinger Bands (BB) list from a list with a period'),\n            previousStatement: null,\n            nextStatement    : null,\n            category         : Blockly.Categories.Indicators,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Bollinger Bands Statement'),\n            'description' : translate('Bollinger Bands Description'),\n        };\n    },\n    onchange           : Blockly.Blocks.bb_statement.onchange,\n    requiredParamBlocks: ['input_list', 'period', 'std_dev_multiplier_up', 'std_dev_multiplier_down'],\n};\n\nBlockly.JavaScript.bba_statement = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('VARIABLE'),\n        Blockly.Variables.NAME_TYPE\n    );\n    const bbResult = block.getFieldValue('BBRESULT_LIST');\n    const input = expectValue(block.getChildByType('input_list'), 'INPUT_LIST');\n    const period = block.childValueToCode('period', 'PERIOD') || '10';\n    const stdDevUp = block.childValueToCode('std_dev_multiplier_up', 'UPMULTIPLIER') || '5';\n    const stdDevDown = block.childValueToCode('std_dev_multiplier_down', 'DOWNMULTIPLIER') || '5';\n\n    const code = `${varName} = Bot.bba(${input}, { periods: ${period}, stdDevUp: ${stdDevUp}, stdDevDown: ${stdDevDown} }, ${bbResult});\\n`;\n    return code;\n};\n","import { expectValue } from '../../../shared';\nimport { translate }   from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.ema_statement = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('set %1 to Exponentional Moving Average %2'),\n            message1: '%1',\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VARIABLE',\n                    variable: 'ema',\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type : 'input_statement',\n                    name : 'STATEMENT',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            tooltip          : translate('Calculates Exponential Moving Average (EMA) from a list with a period'),\n            previousStatement: null,\n            nextStatement    : null,\n            category         : Blockly.Categories.Indicators,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Exponential Moving Average Statement'),\n            'description' : translate('Exponential Moving Average Statement Description'),\n        };\n    },\n    onchange           : Blockly.Blocks.bb_statement.onchange,\n    requiredParamBlocks: ['input_list', 'period'],\n};\n\nBlockly.JavaScript.ema_statement = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('VARIABLE'),\n        Blockly.Variables.NAME_TYPE\n    );\n    const input = expectValue(block.getChildByType('input_list'), 'INPUT_LIST');\n    const period = block.childValueToCode('period', 'PERIOD') || '10';\n\n    const code = `${varName} = Bot.ema(${input}, ${period});\\n`;\n    return code;\n};\n","import { expectValue } from '../../../shared';\nimport { translate }   from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.emaa_statement = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('set %1 to Exponentional Moving Average Array %2'),\n            message1: '%1',\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VARIABLE',\n                    variable: 'emaa',\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type : 'input_statement',\n                    name : 'STATEMENT',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            tooltip          : translate('Calculates Exponential Moving Average (EMA) list from a list of values with a period'),\n            previousStatement: null,\n            nextStatement    : null,\n            category         : Blockly.Categories.Indicators,\n        };\n    }, meta(){\n        return {\n            'display_name': translate('Exponential Moving Average Statement'),\n            'description' : translate('Exponential Moving Average Statement Dscription'),\n        };\n    },\n    onchange           : Blockly.Blocks.bb_statement.onchange,\n    requiredParamBlocks: ['input_list', 'period'],\n};\n\nBlockly.JavaScript.emaa_statement = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('VARIABLE'),\n        Blockly.Variables.NAME_TYPE\n    );\n    const input = expectValue(block.getChildByType('input_list'), 'INPUT_LIST');\n    const period = block.childValueToCode('period', 'PERIOD') || '10';\n\n    const code = `${varName} = Bot.emaa(${input}, ${period});\\n`;\n    return code;\n};\n","import { expectValue } from '../../../shared';\nimport config          from '../../../../constants';\nimport { translate }   from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.macda_statement = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('set %1 to MACD Array %2 %3'),\n            message1: '%1',\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VARIABLE',\n                    variable: 'macda',\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'MACDFIELDS_LIST',\n                    options: config.macdFields,\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type : 'input_statement',\n                    name : 'STATEMENT',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            tooltip          : translate('Calculates Moving Average Convergence Divergence (MACD) list from a list'),\n            previousStatement: null,\n            nextStatement    : null,\n            category         : Blockly.Categories.Indicators,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Moving Average Convergence Divergence'),\n            'decription'  : translate('Moving Average Convergence Divergence Description'),\n        };\n    },\n    onchange           : Blockly.Blocks.bb_statement.onchange,\n    requiredParamBlocks: ['input_list', 'fast_ema_period', 'slow_ema_period', 'signal_ema_period'],\n};\n\nBlockly.JavaScript.macda_statement = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('VARIABLE'),\n        Blockly.Variables.NAME_TYPE\n    );\n    const macdField = block.getFieldValue('MACDFIELDS_LIST');\n    const input = expectValue(block.getChildByType('input_list'), 'INPUT_LIST');\n    const fastEmaPeriod = block.childValueToCode('fast_ema_period', 'FAST_EMA_PERIOD') || '12';\n    const slowEmaPeriod = block.childValueToCode('slow_ema_period', 'SLOW_EMA_PERIOD') || '26';\n    const signalEmaPeriod = block.childValueToCode('signal_ema_period', 'SIGNAL_EMA_PERIOD') || '9';\n\n    const code = `${varName} = Bot.macda(${input}, { \n        fastEmaPeriod: ${fastEmaPeriod},\n        slowEmaPeriod: ${slowEmaPeriod},\n        signalEmaPeriod: ${signalEmaPeriod},\n    }, ${macdField});\\n`;\n    return code;\n};\n","import { expectValue } from '../../../shared';\nimport { translate }   from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.rsi_statement = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('set %1 to Relative Strength Index %2'),\n            message1: '%1',\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VARIABLE',\n                    variable: 'rsi',\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type : 'input_statement',\n                    name : 'STATEMENT',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            tooltip          : translate('Relative Strength Index (RSI) from a list with a period'),\n            previousStatement: null,\n            nextStatement    : null,\n            category         : Blockly.Categories.Indicators,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Relative Strength Index Statement'),\n            'description' : translate('Relative Strength Index Statement Description'),\n        };\n    },\n    onchange           : Blockly.Blocks.bb_statement.onchange,\n    requiredParamBlocks: ['input_list', 'period'],\n};\n\nBlockly.JavaScript.rsi_statement = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('VARIABLE'),\n        Blockly.Variables.NAME_TYPE\n    );\n    const input = expectValue(block.getChildByType('input_list'), 'INPUT_LIST');\n    const period = block.childValueToCode('period', 'PERIOD') || '10';\n\n    const code = `${varName} = Bot.rsi(${input}, ${period});\\n`;\n    return code;\n};\n","import { expectValue } from '../../../shared';\nimport { translate }   from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.rsia_statement = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('set %1 to Relative Strength Index Array %2'),\n            message1: '%1',\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VARIABLE',\n                    variable: 'rsia',\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type : 'input_statement',\n                    name : 'STATEMENT',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            tooltip          : translate('Calculates Relative Strength Index (RSI) list from a list of values with a period'),\n            previousStatement: null,\n            nextStatement    : null,\n            category         : Blockly.Categories.Indicators,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Relative Strength Index Statement'),\n            'description' : translate('Relative Strength Index Statement Description'),\n        };\n    },\n    onchange           : Blockly.Blocks.bb_statement.onchange,\n    requiredParamBlocks: ['input_list', 'period'],\n};\n\nBlockly.JavaScript.rsia_statement = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('VARIABLE'),\n        Blockly.Variables.NAME_TYPE\n    );\n    const input = expectValue(block.getChildByType('input_list'), 'INPUT_LIST');\n    const period = block.childValueToCode('period', 'PERIOD') || '10';\n\n    const code = `${varName} = Bot.rsia(${input}, ${period});\\n`;\n    return code;\n};\n","import { expectValue } from '../../../shared';\nimport { translate }   from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.sma_statement = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('set %1 to Simple Moving Average %2'),\n            message1: '%1',\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VARIABLE',\n                    variable: 'sma',\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type : 'input_statement',\n                    name : 'STATEMENT',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            tooltip          : translate('Calculates Simple Moving Average (SMA) from a list with a period'),\n            previousStatement: null,\n            nextStatement    : null,\n            category         : Blockly.Categories.Indicators,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('SImple Moving Average Statement'),\n            'description' : translate('Simple Moving Average Statement Description'),\n        };\n    },\n    onchange           : Blockly.Blocks.bb_statement.onchange,\n    requiredParamBlocks: ['input_list', 'period'],\n};\n\nBlockly.JavaScript.sma_statement = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('VARIABLE'),\n        Blockly.Variables.NAME_TYPE\n    );\n    const input = expectValue(block.getChildByType('input_list'), 'INPUT_LIST');\n    const period = block.getChildFieldValue('period', 'PERIOD') || '10';\n\n    const code = `${varName} = Bot.sma(${input}, ${period});\\n`;\n    return code;\n};\n","import { expectValue } from '../../../shared';\nimport { translate }   from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.smaa_statement = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('set %1 to Simple Moving Average Array %2'),\n            message1: '%1',\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VARIABLE',\n                    variable: 'smaa',\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type : 'input_statement',\n                    name : 'STATEMENT',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            tooltip          : translate('Calculates Simple Moving Average (SMA) from a list with a period'),\n            previousStatement: null,\n            nextStatement    : null,\n            category         : Blockly.Categories.Indicators,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Simple Moving Average Statement'),\n            'description' : translate('Simple Moving Average Statement Description'),\n        };\n    },\n    onchange: Blockly.Blocks.bb_statement.onchange,\n};\n\nBlockly.JavaScript.smaa_statement = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('VARIABLE'),\n        Blockly.Variables.NAME_TYPE\n    );\n    const input = expectValue(block.getChildByType('input_list'), 'INPUT_LIST');\n    const period = block.childValueToCode('period', 'PERIOD') || '10';\n\n    const code = `${varName} = Bot.smaa(${input}, ${period});\\n`;\n    return code;\n};\n","import config        from '../../../../constants';\nimport { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.check_direction = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('Direction is %1'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'CHECK_DIRECTION',\n                    options: config.lists.CHECK_DIRECTION,\n                },\n            ],\n            output         : 'Boolean',\n            outputShape    : Blockly.OUTPUT_SHAPE_HEXAGONAL,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('True if the direction matches the selection'),\n            category       : Blockly.Categories.Tick_Analysis,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Check Direction'),\n            'description' : translate('Check Direction Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.check_direction = block => {\n    const checkWith = block.getFieldValue('CHECK_DIRECTION');\n\n    const code = `Bot.checkDirection('${checkWith}')`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import config        from '../../../../constants';\nimport { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.get_ohlc = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('in candle list get # from end %1'),\n            message1: translate('with interval: %1'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'CANDLEINDEX',\n                    check: 'Number',\n                },\n            ],\n            args1: [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'CANDLEINTERVAL_LIST',\n                    options: config.candleIntervals,\n                },\n            ],\n            output         : 'Candle',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Get the nth recent candle'),\n            category       : Blockly.Categories.Tick_Analysis,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Nth recent Candle'),\n            'description' : translate('Nth recent Candle Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.get_ohlc = block => {\n    const selectedGranularity = block.getFieldValue('CANDLEINTERVAL_LIST');\n    const granularity = selectedGranularity === 'default' ? 'undefined' : selectedGranularity;\n    const index = Blockly.JavaScript.valueToCode(block, 'CANDLEINDEX', Blockly.JavaScript.ORDER_ATOMIC) || '1';\n\n    const code = `Bot.getOhlcFromEnd({ index: ${index}, granularity: ${granularity} })`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.lastDigitList = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0       : translate('Last Digit List'),\n            output         : 'Array',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Returns the list of last digit values'),\n            category       : Blockly.Categories.Tick_Analysis,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Last Digit List'),\n            'description' : translate('Last Digit List Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.lastDigitList = () => ['Bot.getLastDigitList()', Blockly.JavaScript.ORDER_ATOMIC];\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.last_digit = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0       : translate('Last Digit'),\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Returns the last digit of the latest tick'),\n            category       : Blockly.Categories.Tick_Analysis,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Last Digit'),\n            'description' : translate('Last Digit Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.last_digit = () => ['Bot.getLastDigit()', Blockly.JavaScript.ORDER_ATOMIC];\n","import config        from '../../../../constants';\nimport { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.ohlc = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('Candles List'),\n            message1: translate('with interval: %1'),\n            args1   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'CANDLEINTERVAL_LIST',\n                    options: config.candleIntervals,\n                },\n            ],\n            output         : 'Array',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Returns the candle list'),\n            category       : Blockly.Categories.Tick_Analysis,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Candle List'),\n            'description' : translate('Candle List Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.ohlc = block => {\n    const selectedGranularity = block.getFieldValue('CANDLEINTERVAL_LIST');\n    const granularity = selectedGranularity === 'default' ? 'undefined' : selectedGranularity;\n\n    const code = `Bot.getOhlc({ granularity: ${granularity} })`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import config        from '../../../../constants';\nimport { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.ohlc_values = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('Make a List of %1 values in candles list with interval: %2'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'OHLCFIELD_LIST',\n                    options: config.ohlcFields,\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'CANDLEINTERVAL_LIST',\n                    options: config.candleIntervals,\n                },\n            ],\n            output         : 'Array',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Returns a list of the selected candle values'),\n            category       : Blockly.Categories.Tick_Analysis,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Selected Candle Value'),\n            'description' : translate('Selected Candle Value Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.ohlc_values = block => {\n    const selectedGranularity = block.getFieldValue('CANDLEINTERVAL_LIST');\n    const granularity = selectedGranularity === 'default' ? 'undefined' : selectedGranularity;\n    const ohlcField = block.getFieldValue('OHLCFIELD_LIST');\n\n    const code = `Bot.getOhlc({ field: '${ohlcField}', granularity: ${granularity} })`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import config        from '../../../../constants';\nimport { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.read_ohlc = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('In candles list read %1 from end %2'),\n            message1: translate('with interval: %1'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'OHLCFIELD_LIST',\n                    options: config.ohlcFields,\n                },\n                {\n                    type : 'input_value',\n                    name : 'CANDLEINDEX',\n                    check: 'Number',\n                },\n            ],\n            args1: [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'CANDLEINTERVAL_LIST',\n                    options: config.candleIntervals,\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Read the selected candle value in the nth recent candle'),\n            category       : Blockly.Categories.Tick_Analysis,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Read selected candle'),\n            'description' : translate('Read selected candle description'),\n        };\n    },\n};\n\nBlockly.JavaScript.read_ohlc = block => {\n    const selectedGranularity = block.getFieldValue('CANDLEINTERVAL_LIST');\n    const granularity = selectedGranularity === 'default' ? 'undefined' : selectedGranularity;\n    const ohlcField = block.getFieldValue('OHLCFIELD_LIST');\n    const index = Blockly.JavaScript.valueToCode(block, 'CANDLEINDEX', Blockly.JavaScript.ORDER_ATOMIC) || '1';\n\n    const code = `Bot.getOhlcFromEnd({ field: '${ohlcField}', index: ${index}, granularity: ${granularity} })`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.tick = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0       : translate('Last Tick'),\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Returns the tick value received by a before purchase block'),\n            category       : Blockly.Categories.Tick_Analysis,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Tick value'),\n            'description' : translate('Tick value Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.tick = () => ['Bot.getLastTick()', Blockly.JavaScript.ORDER_ATOMIC];\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.tick_analysis = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('This block is called on every tick %1 %2'),\n            args0   : [\n                {\n                    type: 'input_dummy',\n                },\n                {\n                    type : 'input_statement',\n                    name : 'TICKANALYSIS_STACK',\n                    check: null,\n                },\n            ],\n            colour         : '#fef1cf',\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('You can use this block to analyze the ticks, regardless of your trades'),\n            category       : Blockly.Categories.Tick_Analysis,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Tick Analysis'),\n            'description' : translate('Tick Analysis Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.tick_analysis = block => {\n    const stack = Blockly.JavaScript.statementToCode(block, 'TICKANALYSIS_STACK') || '';\n\n    const code = `\n    BinaryBotPrivateTickAnalysisList.push(function BinaryBotPrivateTickAnalysis() {\n        ${stack}\n    });\\n`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.ticks = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0       : translate('Ticks List'),\n            output         : 'Array',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Returns the list of tick values'),\n            category       : Blockly.Categories.Tick_Analysis,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Tick List'),\n            'description' : translate('Tick List Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.ticks = () => ['Bot.getTicks()', Blockly.JavaScript.ORDER_ATOMIC];\n","import { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.is_candle_black = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('Is candle black? %1'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'OHLCOBJ',\n                    check: 'Candle',\n                },\n            ],\n            output         : 'Boolean',\n            outputShape    : Blockly.OUTPUT_SHAPE_HEXAGONAL,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate(\n                'Checks if the given candle is black, returns true if close is less than open in the given candle.'\n            ),\n            category: Blockly.Categories.Candle,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Is Candle Block'),\n            'description' : translate('Is Candle Black Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.is_candle_black = block => {\n    const ohlcObj = Blockly.JavaScript.valueToCode(block, 'OHLCOBJ') || '{}';\n\n    const code = `Bot.isCandleBlack(${ohlcObj})`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import config        from '../../../../../constants';\nimport { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.ohlc_values_in_list = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('Make a list of %1 values from candles list %2'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'OHLCFIELD_LIST',\n                    options: config.ohlcFields,\n                },\n                {\n                    type: 'input_value',\n                    name: 'OHLCLIST',\n                },\n            ],\n            output         : 'Array',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Returns a list of the selected candle values'),\n            category       : Blockly.Categories.Candle,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Selected Candle list value'),\n            'description' : translate('Selected Candle list value description'),\n        };\n    },\n};\n\nBlockly.JavaScript.ohlc_values_in_list = block => {\n    const ohlcField = block.getFieldValue('OHLCFIELD_LIST') || 'open';\n    const ohlcList = Blockly.JavaScript.valueToCode(block, 'OHLCLIST') || '[]';\n\n    const code = `Bot.candleValues(${ohlcList}, '${ohlcField}')`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import config        from '../../../../../constants';\nimport { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.read_ohlc_obj = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('Read %1 value in candle %2'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'OHLCFIELD_LIST',\n                    options: config.ohlcFields,\n                },\n                {\n                    type: 'input_value',\n                    name: 'OHLCOBJ',\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Read a field in a candle (read from the Candles list)'),\n            category       : Blockly.Categories.Candle,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Read candle '),\n            'description' : translate('Read candle Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.read_ohlc_obj = block => {\n    const ohlcField = block.getFieldValue('OHLCFIELD_LIST');\n    const ohlcObj = Blockly.JavaScript.valueToCode(block, 'OHLCOBJ') || '{}';\n\n    const code = `Bot.candleField(${ohlcObj}, '${ohlcField}')`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import config        from '../../../../../constants';\nimport { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.balance = {\n    init() {\n        this.jsonInit(this.definition());\n\n        // Change shape based on selected type\n        const balanceTypeField = this.getField('BALANCE_TYPE');\n        balanceTypeField.setValidator(value => {\n            if (value === 'STR') {\n                this.setOutputShape(Blockly.OUTPUT_SHAPE_SQUARE);\n                this.setOutput(true, 'String');\n            } else if (value === 'NUM') {\n                this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n                this.setOutput(true, 'Number');\n            }\n            this.initSvg();\n            this.render(false);\n            return undefined;\n        });\n    },\n    definition(){\n        return {\n            message0: translate('Balance: %1'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'BALANCE_TYPE',\n                    options: config.lists.BALANCE_TYPE,\n                },\n            ],\n            output         : null,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Balance Tooltip'),\n            category       : Blockly.Categories.Miscellaneous,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Balance'),\n            'description' : translate('Balance Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.balance = block => {\n    const balanceType = block.getFieldValue('BALANCE_TYPE');\n\n    const code = `Bot.getBalance('${balanceType}')`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.block_holder = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('Blocks inside are ignored %1 %2'),\n            args0   : [\n                {\n                    type: 'input_dummy',\n                },\n                {\n                    type : 'input_statement',\n                    name : 'USELESS_STACK',\n                    check: null,\n                },\n            ],\n            colour         : '#fef1cf',\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Put your blocks in here to prevent them from being removed'),\n            category       : Blockly.Categories.Miscellaneous,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Block Holder'),\n            'description' : translate('Block Holder Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.block_holder = () => '';\n","import { loadRemote }                 from '../../../../utils';\nimport { translate }                  from '../../../../../utils/lang/i18n';\nimport { observer as globalObserver } from '../../../../../utils/observer';\n\nBlockly.Blocks.loader = {\n    init() {\n        this.loadedByMe = [];\n        this.loadedVariables = [];\n        this.currentUrl = '';\n\n        this.jsonInit(this.definition());\n\n        const urlField = this.getField('URL');\n        // eslint-disable-next-line no-underscore-dangle\n        urlField.onFinishEditing_ = newValue => this.onFinishEditingUrl(newValue);\n    },\n    definition(){\n        return {\n            message0: translate('Load block from: %1'),\n            args0   : [\n                {\n                    type: 'field_input',\n                    name: 'URL',\n                    text: 'http://www.example.com/block.xml',\n                },\n            ],\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Load blocks from URL'),\n            category       : Blockly.Categories.Miscellaneous,\n        };\n    }, meta(){\n        return {\n            'display_name': translate('Lodear'),\n            'description' : translate('Loeder Description'),\n        };\n    },\n    onFinishEditingUrl(newValue) {\n        if (this.currentUrl === newValue) {\n            return;\n        }\n\n        if (this.disabled) {\n            const hasKnownUrl = this.workspace\n                .getAllBlocks()\n                .some(block => block.type === 'loader' && block.id !== this.id && block.currentUrl === this.currentUrl);\n            if (hasKnownUrl) {\n                this.setDisabled(false);\n            }\n        }\n\n        const { recordUndo } = Blockly.Events;\n        Blockly.Events.recordUndo = false;\n\n        loadRemote(this)\n            .then(() => {\n                Blockly.Events.recordUndo = recordUndo;\n                globalObserver.emit('ui.log.success', translate('Blocks are loaded successfully'));\n            })\n            .catch(errorMsg => {\n                Blockly.Events.recordUndo = recordUndo;\n                globalObserver.emit('ui.log.error', errorMsg);\n            });\n\n        this.currentUrl = this.getFieldValue('URL');\n    },\n    onchange(event) {\n        if (event.type === Blockly.Events.BLOCK_CREATE && event.ids.includes(this.id)) {\n            this.currentUrl = this.getFieldValue('URL');\n            this.workspace.getAllBlocks().forEach(block => {\n                if (block.type === 'loader' && block.id !== this.id) {\n                    if (block.currentUrl === this.currentUrl) {\n                        this.setDisabled(true);\n                    }\n                }\n            });\n        }\n    },\n};\n\nBlockly.JavaScript.loader = block => {\n    if (block.loadedVariables.length) {\n        // eslint-disable-next-line no-underscore-dangle\n        return `var ${block.loadedVariables.map(v => Blockly.JavaScript.variableDB_.safeName_(v)).toString()}`;\n    }\n    return '';\n};\n","import config        from '../../../../../constants';\nimport { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.notify = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('Notify %1 with sound: %2 %3'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'NOTIFICATION_TYPE',\n                    options: config.lists.NOTIFICATION_TYPE,\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'NOTIFICATION_SOUND',\n                    options: config.lists.NOTIFICATION_SOUND,\n                },\n                {\n                    type : 'input_value',\n                    name : 'MESSAGE',\n                    check: null,\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Creates a notification'),\n            cateogry         : Blockly.Categories.Miscellaneous,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Pop out notify'),\n            'description' : translate('Pop out notify description'),\n        };\n    },\n};\n\nBlockly.JavaScript.notify = block => {\n    const notificationType = block.getFieldValue('NOTIFICATION_TYPE');\n    const sound = block.getFieldValue('NOTIFICATION_SOUND');\n    const message = Blockly.JavaScript.valueToCode(block, 'MESSAGE') || `\"${translate('<empty message>')}\"`;\n\n    const code = `Bot.notify({ className: '${notificationType}', message: ${message}, sound: '${sound}'});\\n`;\n    return code;\n};\n","import { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.total_profit = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0       : translate('Total Profit'),\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Returns the total profit'),\n            category       : Blockly.Categories.Miscellaneous,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Total Profit'),\n            'description' : translate('Total Profit Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.total_profit = () => ['Bot.getTotalProfit()', Blockly.JavaScript.ORDER_ATOMIC];\n","import { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.total_runs = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0       : translate('Number of Runs'),\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Returns the number of runs since the beginning'),\n            category       : Blockly.Categories.Miscellaneous,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Total Runs'),\n            'description' : translate('Total Runs Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.total_runs = () => ['Bot.getTotalRuns()', Blockly.JavaScript.ORDER_ATOMIC];\n","import { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.epoch = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0       : translate('Seconds Since Epoch'),\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Returns the epoch time (seconds since epoch)'),\n            category       : Blockly.Categories.Time,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Second Since Epoch'),\n            'description' : translate('Seconds Since Epoch Decription'),\n        };\n    },\n};\n\nBlockly.JavaScript.epoch = () => ['Bot.getTime()', Blockly.JavaScript.ORDER_ATOMIC];\n","import { translate } from '../../../../../utils/lang/i18n';\n\nBlockly.Blocks.timeout = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('%1 %2 Run after %3 second(s)'),\n            args0   : [\n                {\n                    type: 'input_dummy',\n                },\n                {\n                    type: 'input_statement',\n                    name: 'TIMEOUTSTACK',\n                },\n                {\n                    type: 'input_value',\n                    name: 'SECONDS',\n                },\n            ],\n            colour           : '#fef1cf',\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Run the blocks inside every n seconds'),\n            category         : Blockly.Categories.Time,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Timeout'),\n            'description' : translate('Timeout Description'),\n        };\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.END_DRAG) {\n            const allowedScopes = [\n                'trade_definition',\n                'during_purchase',\n                'before_purchase',\n                'after_purchase',\n                'tick_analysis',\n            ];\n            if (allowedScopes.some(scope => this.isDescendantOf(scope))) {\n                if (this.disabled) {\n                    this.setDisabled(false);\n                }\n            } else if (!this.disabled) {\n                this.setDisabled(true);\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.timeout = block => {\n    const stack = Blockly.JavaScript.statementToCode(block, 'TIMEOUTSTACK');\n    const seconds = Blockly.JavaScript.valueToCode(block, 'SECONDS', Blockly.JavaScript.ORDER_ATOMIC) || '1';\n\n    const code = `sleep(${seconds});\\n${stack}\\n`;\n    return code;\n};\n","import { defineContract }    from '../../images';\nimport { setBlockTextColor } from '../../../utils';\nimport config                from '../../../../constants';\nimport ApiHelpers            from '../../../../services/api/helpers';\nimport { translate }         from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.trade_definition = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition() {\n        return {\n            message0: translate('%1 (1) Define your trade contract %2'),\n            message1: '%1',\n            message2: translate('Run Once at Start: %1'),\n            message3: '%1',\n            message4: translate('Define Trade Options: %1'),\n            message5: '%1',\n            args0   : [\n                {\n                    type  : 'field_image',\n                    src   : defineContract,\n                    width : 25,\n                    height: 25,\n                    alt   : 'T',\n                },\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args1: [\n                {\n                    type: 'input_statement',\n                    name: 'TRADE_OPTIONS',\n                },\n            ],\n            args2: [\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args3: [\n                {\n                    type : 'input_statement',\n                    name : 'INITIALIZATION',\n                    check: null,\n                },\n            ],\n            args4: [\n                {\n                    type: 'input_dummy',\n                },\n            ],\n            args5: [\n                {\n                    type: 'input_statement',\n                    name: 'SUBMARKET',\n                },\n            ],\n            colour         : '#2a3052',\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Trade Definition tooltip'),\n            category       : Blockly.Categories.Trade_Definition,\n        };\n    },\n    meta() {\n        return {\n            'display_name': translate('Trade Definition'),\n            'description' : translate('Define market type, stake, trade type and duration in trade'),\n        };\n    },\n    onchange(event) {\n        setBlockTextColor(this);\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.BLOCK_CREATE && event.ids.includes(this.id)) {\n            // Maintain single instance of this block, dispose of older ones.\n            const top_blocks = this.workspace.getTopBlocks(true);\n\n            top_blocks.forEach(top_block => {\n                if (top_block.type === this.type && top_block.id !== this.id) {\n                    top_block.dispose(false);\n                }\n            });\n\n            const market_block    = this.getChildByType('trade_definition_market');\n            const selected_market = market_block.getFieldValue('MARKET_LIST');\n            const change_event    = new Blockly.Events.BlockChange(market_block, 'field', 'MARKET_LIST', '', selected_market);\n\n            // Trigger change event on MARKET_LIST to populate all dropdowns.\n            Blockly.Events.fire(change_event);\n\n        } else if (event.type === Blockly.Events.BLOCK_CHANGE || Blockly.Events.END_DRAG) {\n            // Enforce only trade_definition_<type> blocks in TRADE_OPTIONS statement.\n            const blocks_in_trade_options = this.getBlocksInStatement('TRADE_OPTIONS');\n\n            blocks_in_trade_options.forEach(block => {\n                if (!/^trade_definition_.+$/.test(block.type)) {\n                    Blockly.Events.disable();\n                    block.unplug(true);\n                    Blockly.Events.enable();\n                }\n            });\n        }\n    },\n};\n\nBlockly.JavaScript.trade_definition = block => {\n    const { client: client_store } = ApiHelpers.instance.root_store;\n    \n    if (!client_store.is_logged_in) {\n        throw new Error('Please login'); // TEMP.\n    }\n\n    const { loginid }               = client_store.loginid;\n    const account                   = client_store.getToken(loginid);\n\n    const market_block              = block.getChildByType('trade_definition_market');\n    const trade_type_block          = block.getChildByType('trade_definition_tradetype');\n    const contract_type_block       = block.getChildByType('trade_definition_contracttype');\n    const candle_interval_block     = block.getChildByType('trade_definition_candleinterval');\n    const restart_on_error_block    = block.getChildByType('trade_definition_restartonerror');\n    const restart_on_buy_sell_block = block.getChildByType('trade_definition_restartbuysell');\n\n    const symbol                    = market_block.getFieldValue('SYMBOL_LIST');\n    const trade_type                = trade_type_block.getFieldValue('TRADETTYPE_LIST');\n    const contract_type             = contract_type_block.getFieldValue('TYPE_LIST');\n    const candle_interval           = candle_interval_block.getFieldValue('CANDLEINTERVAL_LIST');\n    const should_restart_on_error   = Blockly.JavaScript.valueToCode(restart_on_error_block, 'RESTARTONERROR', Blockly.JavaScript.ORDER_ATOMIC);\n    const should_restart_on_buysell = Blockly.JavaScript.valueToCode(restart_on_buy_sell_block, 'TIME_MACHINE_ENABLED', Blockly.JavaScript.ORDER_ATOMIC);\n\n    const { opposites }             = config;\n    const contract_type_list        = contract_type === 'both'\n        ? opposites[trade_type.toUpperCase()].map(opposite => Object.keys(opposite)[0])\n        : [contract_type];\n\n    const initialization            = Blockly.JavaScript.statementToCode(block, 'INITIALIZATION');\n    const trade_options_statement   = Blockly.JavaScript.statementToCode(block, 'SUBMARKET');\n\n    const code = `  \n    BinaryBotPrivateInit = function BinaryBotPrivateInit() {\n        Bot.init('${account}', {\n          symbol              : '${symbol}',\n          contractTypes       : ${JSON.stringify(contract_type_list)},\n          candleInterval      : '${candle_interval || 'FALSE'}',\n          shouldRestartOnError: ${should_restart_on_error || 'FALSE'},\n          timeMachineEnabled  : ${should_restart_on_buysell || 'FALSE'},\n        });\n        ${initialization.trim()}\n    };\n      BinaryBotPrivateStart = function BinaryBotPrivateStart() {\n        ${trade_options_statement.trim()}\n      };\\n`;\n    return code;\n};\n","import config from '../../../../constants';\n\nBlockly.Blocks.trade_definition_candleinterval = {\n    init() {\n        this.jsonInit({\n            message0: 'Default Candle Interval: %1',\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'CANDLEINTERVAL_LIST',\n                    options: config.candleIntervals.slice(1),\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessPurple.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessPurple.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange() {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        this.enforceLimitations();\n    },\n    enforceLimitations: Blockly.Blocks.trade_definition_market.enforceLimitations,\n};\nBlockly.JavaScript.trade_definition_candleinterval = () => {};\n","import config                  from '../../../../constants';\nimport { translate }           from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.trade_definition_contracttype = {\n    init() {\n        this.jsonInit({\n            message0: 'Contract Type: %1',\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'TYPE_LIST',\n                    options: [['', '']],\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessPurple.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessPurple.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        this.enforceLimitations();\n\n        if (event.type === Blockly.Events.BLOCK_CREATE && event.ids.includes(this.id)) {\n            this.updateContractTypes();\n        } else if (event.type === Blockly.Events.BLOCK_CHANGE) {\n            if (event.name === 'TRADETYPE_LIST' && !['', 'na'].includes(event.newValue)) {\n                this.updateContractTypes();\n            }\n        }\n    },\n    updateContractTypes() {\n        const top_parent_block    = this.getTopParent();\n        const trade_type_block    = top_parent_block.getChildByType('trade_definition_tradetype');\n        const trade_type          = trade_type_block.getFieldValue('TRADETYPE_LIST');\n        const contract_type_field = this.getField('TYPE_LIST');\n\n        let contract_types;\n\n        if (trade_type) {\n            const { opposites } = config;\n            contract_types      = [\n                [translate('Both'), 'both'],\n                ...opposites[trade_type.toUpperCase()].map(type => Object.entries(type)[0].reverse()),\n            ];\n        } else {\n            contract_types = config.NOT_AVAILABLE_DROPDOWN_OPTIONS;\n        }\n\n        contract_type_field.updateOptions(contract_types);\n    },\n    enforceLimitations: Blockly.Blocks.trade_definition_market.enforceLimitations,\n};\nBlockly.JavaScript.trade_definition_contracttype = () => '';\n","import ApiHelpers from '../../../../services/api/helpers';\n\nBlockly.Blocks.trade_definition_market = {\n    init() {\n        this.jsonInit({\n            message0: 'Market: %1 Submarket: %2 Symbol: %3',\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'MARKET_LIST',\n                    options: [['', '']],\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'SUBMARKET_LIST',\n                    options: [['', '']],\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'SYMBOL_LIST',\n                    options: [['', '']],\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessPurple.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessPurple.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        this.enforceLimitations();\n\n        const { active_symbols } = ApiHelpers.instance;\n        console.log(active_symbols);\n        const market_field       = this.getField('MARKET_LIST');\n        const submarket_field    = this.getField('SUBMARKET_LIST');\n\n        if (event.type === Blockly.Events.CREATE && event.ids.includes(this.id)) {\n            active_symbols.retrieveActiveSymbols().then(() => {\n                const markets = active_symbols.getMarketDropdownOptions();\n                console.log(markets);\n                market_field.updateOptions(markets, null, true);\n            });\n        } else if (event.type === Blockly.Events.CHANGE) {\n            if (event.name === 'MARKET_LIST') {\n                active_symbols.retrieveActiveSymbols().then(() => {\n                    const submarkets = active_symbols.getSubmarketDropdownOptions(market_field.getValue());\n                    submarket_field.updateOptions(submarkets, null, true);\n                });\n            } else if (event.name === 'SUBMARKET_LIST') {\n                const symbol_field = this.getField('SYMBOL_LIST');\n\n                active_symbols.retrieveActiveSymbols().then(() => {\n                    const symbols = active_symbols.getSymbolDropdownOptions(submarket_field.getValue());\n                    symbol_field.updateOptions(symbols, null, true);\n                });\n            }\n        }\n    },\n    enforceLimitations() {\n        if (!this.isDescendantOf('trade_definition')) {\n            Blockly.Events.disable();\n\n            this.unplug(false); // Unplug without reconnecting siblings\n\n            const top_blocks = this.workspace.getTopBlocks();\n            const trade_definition_block = top_blocks.find(block => block.type === 'trade_definition');\n\n            // Reconnect self to trade definition block.\n            if (trade_definition_block) {\n                const connection = trade_definition_block.getLastConnectionInStatement('TRADE_OPTIONS');\n                connection.connect(this.previousConnection);\n            } else {\n                this.dispose();\n            }\n\n            Blockly.Events.enable();\n        }\n\n        // These blocks cannot be disabled.\n        if (this.disabled) {\n            this.setDisabled(false);\n        }\n    },\n};\n\nBlockly.JavaScript.trade_definition_market = () => {};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.trade_definition_restartbuysell = {\n    init() {\n        this.jsonInit({\n            message0: translate('Restart buy/sell on error (disable for better performance): %1'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'TIME_MACHINE_ENABLED',\n                    check: 'Boolean',\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessPurple.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessPurple.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange() {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        this.enforceLimitations();\n    },\n    enforceLimitations: Blockly.Blocks.trade_definition_market.enforceLimitations,\n};\nBlockly.JavaScript.trade_definition_restartbuysell = () => {};\n","import { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.trade_definition_restartonerror = {\n    init() {\n        this.jsonInit({\n            message0: translate('Restart last trade on error (bot ignores the unsuccessful trade): %1'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'RESTARTONERROR',\n                    check: 'Boolean',\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessPurple.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessPurple.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange() {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n        \n        this.enforceLimitations();\n    },\n    enforceLimitations: Blockly.Blocks.trade_definition_market.enforceLimitations,\n};\nBlockly.JavaScript.trade_definition_restartonerror = () => {};\n","import config        from '../../../../constants';\nimport ApiHelpers    from '../../../../services/api/helpers';\nimport { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.trade_definition_tradeoptions = {\n    init() {\n        this.jsonInit(this.definition());\n\n        // Ensure one of this type per statement-stack\n        this.setNextStatement(false);\n    },\n    definition(){\n        return {\n            message0: translate('Duration: %1 %2 Stake: %3 %4'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'DURATIONTYPE_LIST',\n                    options: [['', '']],\n                },\n                {\n                    type: 'input_value',\n                    name: 'DURATION',\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'CURRENCY_LIST',\n                    options: config.lists.CURRENCY,\n                },\n                {\n                    type : 'input_value',\n                    name : 'AMOUNT',\n                    check: 'Number',\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessPurple.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessPurple.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Trade Options Tooltip'),\n            category         : Blockly.Categories.Trade_Definition,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Trade Options'),\n            'description' : translate('Trade Options Description'),\n        };\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        const top_parent_block = this.getTopParent();\n\n        if (!top_parent_block) {\n            return;\n        }\n\n        const market_block                = top_parent_block.getChildByType('trade_definition_market');\n        const trade_type_block            = top_parent_block.getChildByType('trade_definition_tradetype');\n\n        this.selected_symbol              = market_block.getFieldValue('SYMBOL_LIST');\n        this.selected_trade_type_category = trade_type_block.getFieldValue('TRADETYPECAT_LIST');\n        this.selected_trade_type          = trade_type_block.getFieldValue('TRADETYPE_LIST');\n        this.selected_duration            = this.getFieldValue('DURATIONTYPE_LIST');\n        this.selected_barrier_types       = [\n            this.getFieldValue('BARRIERTYPE_LIST') || config.BARRIER_TYPES[0][1],\n            this.getFieldValue('SECONDBARRIERTYPE_LIST') || config.BARRIER_TYPES[1][1],\n        ];\n\n        if (\n            (event.type === Blockly.Events.BLOCK_CREATE && event.ids.includes(this.id)) ||\n            (event.type === Blockly.Events.END_DRAG && event.blockId === this.id)\n        ) {\n            this.updateBarrierInputs();\n            this.enforceSingleBarrierType('BARRIERTYPE_LIST', true);\n            this.updateDurationInput(true);\n            this.updatePredictionInput();\n        } else if (event.type === Blockly.Events.BLOCK_CHANGE) {\n            if (event.name === 'DURATIONTYPE_LIST') {\n                // Update barrier suggested values when changing duration unit.\n                this.updateBarrierInputs();\n                this.enforceSingleBarrierType('BARRIERTYPE_LIST', true);\n                // Update duration minimum amount when changing duration unit.\n                this.updateDurationInput(false);\n            } else if (event.name === 'BARRIERTYPE_LIST' || event.name === 'SECONDBARRIERTYPE_LIST') {\n                // Update barrier suggested values when changing barrier type.\n                this.updateBarrierInputs();\n                this.enforceSingleBarrierType(event.name, false);\n            } else if (event.name === 'SYMBOL_LIST' || event.name === 'TRADETYPE_LIST') {\n                // Update durations, barriers, and prediction when changing the trade type.\n                this.updateBarrierInputs();\n                this.enforceSingleBarrierType('BARRIERTYPE_LIST', true);\n                this.updateDurationInput(true);\n                this.updatePredictionInput();\n            }\n        }\n    },\n    createPredictionInput(prediction_range) {\n        Blockly.Events.disable();\n\n        if (prediction_range.length === 0) {\n            this.removeInput('PREDICTION_LABEL', true);\n            this.removeInput('PREDICTION', true);\n        } else if (!this.getInput('PREDICTION')) {\n            this.appendDummyInput('PREDICTION_LABEL')\n                .appendField(translate('Prediction:'));\n\n            const prediction_input = this.appendValueInput('PREDICTION');\n            const shadow_block = this.workspace.newBlock('math_number');\n\n            shadow_block.setShadow(true);\n            shadow_block.setFieldValue(prediction_range[0], 'NUM');\n            shadow_block.outputConnection.connect(prediction_input.connection);\n            shadow_block.initSvg();\n            shadow_block.render(true);\n        }\n\n        Blockly.Events.enable();\n    },\n    createBarrierInputs(barriers) {\n        Blockly.Events.disable();\n\n        const input_names  = ['BARRIER', 'SECONDBARRIER'];\n\n        for (let i = 0; i < barriers.values.length; i++) {\n            const label = (barriers.values.length === 1 ? translate('Barrier') : config.BARRIER_LABELS[i]);\n            let input   = this.getInput(input_names[i]);\n\n            if (input) {\n                input.fieldRow[0].setText(label);\n            } else {\n                input = this.appendValueInput(input_names[i])\n                    .appendField(label, `${input_names[i]}_LABEL`)\n                    .appendField(new Blockly.FieldDropdown(config.BARRIER_TYPES), `${input_names[i]}TYPE_LIST`);\n\n                const shadow_block = this.workspace.newBlock('math_number');\n\n                shadow_block.setShadow(true);\n                shadow_block.setFieldValue(barriers.values[i], 'NUM');\n                shadow_block.outputConnection.connect(input.connection);\n                shadow_block.initSvg();\n                shadow_block.render(true);\n            }\n        }\n\n        // Remove any extra inputs (quietly) if not required\n        for (let i = input_names.length; i > barriers.values.length; i--) {\n            this.removeInput(input_names[i - 1], true);\n        }\n\n        Blockly.Events.enable();\n    },\n    updateDurationInput(should_use_default_unit) {\n        const { contracts_for } = ApiHelpers.instance;\n\n        contracts_for.getDurations(this.selected_symbol, this.selected_trade_type).then(durations => {\n            const duration_field_dropdown = this.getField('DURATIONTYPE_LIST');\n            const duration_input          = this.getInput('DURATION');\n            const { connection }          = duration_input;\n            const duration_options        = durations.map(duration => [duration.display, duration.unit]);\n\n            if (should_use_default_unit) {\n                duration_field_dropdown.updateOptions(duration_options);\n            } else {\n                duration_field_dropdown.updateOptions(duration_options, this.selected_duration, false);\n            }\n            \n            if (connection) {\n                const target_block = connection.targetBlock();\n\n                if (target_block && target_block.isShadow()) {\n                    const min_duration = durations.find(d => d.unit === this.selected_duration);\n\n                    if (min_duration) {\n                        target_block.setFieldValue(min_duration.min, 'NUM');\n                    }\n                }\n            }\n        });\n    },\n    updateBarrierInputs() {\n        const { contracts_for } = ApiHelpers.instance;\n\n        contracts_for.getBarriers(\n            this.selected_symbol,\n            this.selected_trade_type,\n            this.selected_duration,\n            this.selected_barrier_types\n        ).then(barriers => {\n            this.createBarrierInputs(barriers);\n            \n            const input_names = ['BARRIER', 'SECONDBARRIER'];\n\n            for (let i = 0; i < barriers.values.length; i++) {\n                const barrier_field_dropdown = this.getField(`${input_names[i]}TYPE_LIST`);\n                const { ABSOLUTE_BARRIER_DROPDOWN_OPTION, BARRIER_TYPES } = config;\n                \n                if (this.selected_duration === 'd') {\n                    barrier_field_dropdown.updateOptions(ABSOLUTE_BARRIER_DROPDOWN_OPTION, 'absolute');\n                } else if (barriers.allow_both_types || barriers.allow_absolute_type) {\n                    const options = [].concat(BARRIER_TYPES, ABSOLUTE_BARRIER_DROPDOWN_OPTION);\n                    barrier_field_dropdown.updateOptions(options, barrier_field_dropdown.getValue());\n                } else {\n                    barrier_field_dropdown.updateOptions(BARRIER_TYPES, barrier_field_dropdown.getValue());\n                }\n\n                const { connection } = this.getInput(input_names[i]);\n\n                if (connection) {\n                    const target_block = connection.targetBlock();\n                    if (target_block.isShadow()) {\n                        target_block.setFieldValue(barriers.values[i], 'NUM');\n                    }\n                }\n            }\n        });\n    },\n    updatePredictionInput() {\n        const { contracts_for } = ApiHelpers.instance;\n\n        contracts_for.getPredictionRange(this.selected_symbol, this.selected_trade_type).then(prediction_range => {\n            this.createPredictionInput(prediction_range);\n\n            if (prediction_range.length > 0) {\n                const prediction_input = this.getInput('PREDICTION');\n                const { connection } = prediction_input;\n\n                if (connection) {\n                    const target_block = connection.targetBlock();\n\n                    if (target_block) {\n                        const initial_prediction = Math.max(1, prediction_range[0]);\n                        target_block.setFieldValue(initial_prediction, 'NUM');\n                    }\n                }\n            }\n        });\n    },\n    enforceSingleBarrierType(barrier_input_name, should_force_distinct = false) {\n        const new_value                = this.getFieldValue(barrier_input_name);\n        const other_barrier_input_name = barrier_input_name === 'BARRIERTYPE_LIST' ? 'SECONDBARRIERTYPE_LIST' : 'BARRIERTYPE_LIST';\n        const other_barrier_field      = this.getField(other_barrier_input_name);\n        const { BARRIER_TYPES }        = config;\n\n        if (other_barrier_field) {\n            const has_other_barrier = BARRIER_TYPES.findIndex(type => type[1] === new_value) !== -1;\n            const other_barrier_type = other_barrier_field.getValue();\n\n            Blockly.Events.disable();\n\n            if (has_other_barrier && (other_barrier_type === 'absolute' || should_force_distinct)) {\n                const other_barrier_value = BARRIER_TYPES.find(type => type[1] !== new_value);\n                other_barrier_field.setValue(other_barrier_value[1]);\n            } else if (new_value === 'absolute' && other_barrier_type !== 'absolute') {\n                other_barrier_field.setValue('absolute');\n            }\n\n            Blockly.Events.enable();\n        }\n    },\n    domToMutation(xmlElement) {\n        const has_first_barrier  = xmlElement.getAttribute('has_first_barrier') === 'true';\n        const has_second_barrier = xmlElement.getAttribute('has_second_barrier') === 'true';\n        const has_prediction     = xmlElement.getAttribute('has_prediction') === 'true';\n\n        if (has_first_barrier && has_second_barrier) {\n            this.createBarrierInputs({ values: [1, -1] }); // These values are overwritten with XML values.\n        } else if (has_first_barrier) {\n            this.createBarrierInputs({ values: [1] });\n        } else if (has_prediction) {\n            this.createPredictionInput([1]);\n        }\n    },\n    mutationToDom() {\n        const container = document.createElement('mutation');\n\n        container.setAttribute('has_first_barrier', !!this.getInput('BARRIER'));\n        container.setAttribute('has_second_barrier', !!this.getInput('SECONDBARRIER'));\n        container.setAttribute('has_prediction', !!this.getInput('PREDICTION'));\n        \n        return container;\n    },\n};\n\nBlockly.JavaScript.trade_definition_tradeoptions = block => {\n    const amount           = Blockly.JavaScript.valueToCode(block, 'AMOUNT') || '0';\n    const currency         = block.getFieldValue('CURRENCY_LIST');\n    const duration_type    = block.getFieldValue('DURATIONTYPE_LIST') || '0';\n    const duration_value   = Blockly.JavaScript.valueToCode(block, 'DURATION') || '0';\n\n    const getBarrierValue = (barrier_offset_type, value) => {\n        // Variables should not be encapsulated in quotes\n        if (/^(\\d+(\\.\\d+)?)$/.test(value)) {\n            return barrier_offset_type === 'absolute' ? `'${value}'` : `'${barrier_offset_type}${value}'`;\n        }\n        return barrier_offset_type === 'absolute' ? value : `'${barrier_offset_type}' + ${value}`;\n    };\n\n    let prediction_value, barrier_offset_value, second_barrier_offset_value;\n\n    if (block.getInput('PREDICTION')) {\n        prediction_value = Blockly.JavaScript.valueToCode(block, 'PREDICTION') || '-1';\n    }\n\n    if (block.getInput('BARRIER')) {\n        const barrier_offset_type = block.getFieldValue('BARRIERTYPE_LIST');\n        const value               = Blockly.JavaScript.valueToCode(block, 'BARRIER') || '0';\n        barrier_offset_value      = getBarrierValue(barrier_offset_type, value);\n    }\n\n    if (block.getInput('SECONDBARRIER')) {\n        const barrier_offset_type   = block.getFieldValue('SECONDBARRIERTYPE_LIST');\n        const value                 = Blockly.JavaScript.valueToCode(block, 'SECONDBARRIER') || '0';\n        second_barrier_offset_value = getBarrierValue(barrier_offset_type, value);\n    }\n\n    const code = `\n        Bot.start({\n        limitations        : BinaryBotPrivateLimitations,\n        duration           : ${duration_value || '0'},\n        duration_unit      : '${duration_type || '0'}',\n        currency           : '${currency}',\n        amount             : ${amount || '0'},\n        prediction         : ${prediction_value || 'undefined'},\n        barrierOffset      : ${barrier_offset_value || 'undefined'},\n        secondBarrierOffset: ${second_barrier_offset_value || 'undefined'},\n        });\n    `;\n    return code;\n};\n","import ApiHelpers    from '../../../../services/api/helpers';\nimport { translate } from '../../../../utils/lang/i18n';\n\nBlockly.Blocks.trade_definition_tradetype = {\n    init() {\n        this.jsonInit({\n            message0: translate('Trade Category: %1 Trade Type: %2'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'TRADETYPECAT_LIST',\n                    options: [['', '']],\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'TRADETYPE_LIST',\n                    options: [['', '']],\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessPurple.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessPurple.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        this.enforceLimitations();\n\n        if (event.type === Blockly.Events.BLOCK_CHANGE) {\n            if (event.name === 'SYMBOL_LIST' || event.name === 'TRADETYPECAT_LIST') {\n                const { contracts_for } = ApiHelpers.instance;\n                const top_parent_block  = this.getTopParent();\n                const market_block      = top_parent_block.getChildByType('trade_definition_market');\n                const market            = market_block.getFieldValue('MARKET_LIST');\n                const submarket         = market_block.getFieldValue('SUBMARKET_LIST');\n                const symbol            = market_block.getFieldValue('SYMBOL_LIST');\n                const trade_type_cat    = this.getFieldValue('TRADETYPECAT_LIST');\n\n                if (event.name === 'SYMBOL_LIST') {\n                    contracts_for.getTradeTypeCategories(market, submarket, symbol).then(categories => {\n                        const trade_type_cat_block = this.getField('TRADETYPECAT_LIST');\n                        trade_type_cat_block.updateOptions(categories);\n                    });\n                }\n\n                const trade_types = contracts_for.getTradeTypes(market, submarket, symbol, trade_type_cat);\n                const trade_type_block = this.getField('TRADETYPE_LIST');\n\n                trade_type_block.updateOptions(trade_types);\n            }\n        }\n    },\n    enforceLimitations: Blockly.Blocks.trade_definition_market.enforceLimitations,\n};\n\nBlockly.JavaScript.trade_definition_tradetype = () => {};\n","import {\n    plusIconDark,\n    minusIconDark,\n}                    from '../images';\nimport { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.controls_if = {\n    init() {\n        this.elseIfCount = 0;\n        this.elseCount = 0;\n\n        this.jsonInit(this.definition());\n\n        const addInputIcon = this.getAddInputIcon();\n        this.appendDummyInput('MUTATOR').appendField(addInputIcon);\n    },\n    definition(){\n        return {\n            message0: translate('if %1 then'),\n            message1: '%1',\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'IF0',\n                    check: 'Boolean',\n                },\n            ],\n            args1: [\n                {\n                    type: 'input_statement',\n                    name: 'DO0',\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            // category         : Blockly.Categories.control,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('If else statement tooltip'),\n            category         : Blockly.Categories.Logic,\n        };\n    },\n    meta(){\n        return {\n            'display_name': 'If else statement',\n            'description' : 'If else statement description',\n        };\n    },\n    /**\n     * Create XML to represent the number of else-if and else inputs.\n     * @return {Element} XML storage element.\n     * @this Blockly.Block\n     */\n    mutationToDom() {\n        if (!this.elseIfCount && !this.elseCount) {\n            return null;\n        }\n\n        const container = document.createElement('mutation');\n\n        if (this.elseIfCount) {\n            container.setAttribute('elseif', this.elseIfCount);\n        }\n\n        if (this.elseCount) {\n            container.setAttribute('else', 1);\n        }\n\n        return container;\n    },\n    /**\n     * Parse XML to restore the else-if and else inputs.\n     * @param {!Element} xmlElement XML storage element.\n     * @this Blockly.Block\n     */\n    domToMutation(xmlElement) {\n        this.elseIfCount = parseInt(xmlElement.getAttribute('elseif')) || 0;\n        this.elseCount = parseInt(xmlElement.getAttribute('else')) || 0;\n\n        this.updateShape();\n    },\n    updateShape() {\n        // Delete everything.\n        if (this.getInput('ELSE')) {\n            this.removeInput('ELSE');\n        }\n\n        let i = 1;\n        while (this.getInput(`IF${i}`)) {\n            this.removeInput(`IF${i}`);\n            this.removeInput(`DO${i}`);\n\n            i++;\n        }\n\n        if (this.getInput('MUTATOR')) {\n            this.removeInput('MUTATOR');\n        }\n\n        // Rebuild block\n        for (let j = 1; j <= this.elseIfCount; j++) {\n            this.appendDummyInput(`IF_LABEL${j}`).appendField(translate('else if'));\n            this.appendValueInput(`IF${j}`).setCheck('Boolean');\n            this.appendDummyInput(`THEN_LABEL${j}`).appendField(translate('then'));\n            this.appendDummyInput(`DELETE_ICON${j}`).appendField(this.getRemoveInputIcon(j, false));\n            this.appendStatementInput(`DO${j}`);\n        }\n\n        if (this.elseCount) {\n            this.appendDummyInput('ELSE_LABEL').appendField(translate('else'));\n            this.appendDummyInput('DELETE_ELSE').appendField(this.getRemoveInputIcon(this.elseIfCount + 1, true));\n            this.appendStatementInput('ELSE');\n        }\n\n        this.appendDummyInput('MUTATOR').appendField(this.getAddInputIcon());\n\n        this.initSvg();\n        this.render();\n    },\n    getAddInputIcon() {\n        const onAddClick = () => {\n            if (!this.workspace || this.isInFlyout) {\n                return;\n            }\n\n            const newInputNum = this.elseIfCount + 1;\n\n            if (this.elseCount === 0) {\n                // No `elseif`, just add an `else`-statement\n                this.appendDummyInput('ELSE_LABEL').appendField(translate('else'));\n                this.appendDummyInput('DELETE_ELSE').appendField(this.getRemoveInputIcon(newInputNum, true));\n                this.appendStatementInput('ELSE');\n\n                this.elseCount++;\n            } else {\n                // We've already got `elseif` + `else`, keep adding more `elseif`'s\n                this.appendDummyInput(`IF_LABEL${newInputNum}`).appendField(translate('else if'));\n                this.appendValueInput(`IF${newInputNum}`).setCheck('Boolean');\n                this.appendDummyInput(`THEN_LABEL${newInputNum}`).appendField(translate('then'));\n                this.appendDummyInput(`DELETE_ICON${newInputNum}`).appendField(\n                    this.getRemoveInputIcon(newInputNum, false)\n                );\n                this.appendStatementInput(`DO${newInputNum}`);\n\n                this.elseIfCount++;\n            }\n\n            // We already have an else, this input needs to be moved to the bottom where it belongs.\n            if (this.getInput('ELSE')) {\n                this.moveInputBefore('ELSE_LABEL', null);\n                this.moveInputBefore('DELETE_ELSE', null);\n                this.moveInputBefore('ELSE', null);\n            }\n\n            // Move plus-icon to the bottom\n            this.moveInputBefore('MUTATOR', null);\n\n            this.initSvg();\n            this.render();\n        };\n\n        const fieldImage = new Blockly.FieldImage(plusIconDark, 24, 24, '+', onAddClick);\n        return fieldImage;\n    },\n    getRemoveInputIcon(index, isElseStack) {\n        const onRemoveClick = () => {\n            if (!this.workspace || this.isInFlyout) {\n                return;\n            }\n\n            if (isElseStack) {\n                this.removeInput('ELSE_LABEL');\n                this.removeInput('DELETE_ELSE');\n                this.removeInput('ELSE');\n                this.elseCount = 0;\n            } else {\n                // Determine which label it is, has to be done inside this function.\n                const inputNames = ['IF_LABEL', 'IF', 'THEN_LABEL', 'DELETE_ICON', 'DO'];\n\n                inputNames.forEach(inputName => {\n                    this.removeInput(`${inputName}${index}`);\n\n                    // Re-number inputs w/ indexes larger than this one, e.g. when removing `IF5` becomes `IF4`\n                    let i = 1;\n                    let j = 0;\n\n                    // e.g. we've removed `IF5`, name of larger input `IF6` should become `IF5`\n                    let largerInput = this.getInput(inputName + (index + i));\n\n                    while (largerInput) {\n                        const newIndex = index + j;\n                        largerInput.name = inputName + newIndex;\n\n                        // Re-attach click handler with correct index.\n                        if (inputName === 'DELETE_ICON') {\n                            for (let k = 0; k < largerInput.fieldRow.length; k++) {\n                                const field = largerInput.fieldRow[k];\n                                field.dispose();\n                                largerInput.fieldRow.splice(k, 1);\n                            }\n\n                            largerInput.appendField(this.getRemoveInputIcon(newIndex, false));\n                        }\n\n                        i++;\n                        j++;\n\n                        largerInput = this.getInput(inputName + (index + i));\n                    }\n                });\n\n                this.elseIfCount--;\n            }\n        };\n\n        const fieldImage = new Blockly.FieldImage(minusIconDark, 24, 24, '-', onRemoveClick);\n        return fieldImage;\n    },\n};\n\nBlockly.JavaScript.controls_if = block => {\n    // If/elseif/else condition.\n    let n = 0;\n    let code = '';\n\n    do {\n        const condition = Blockly.JavaScript.valueToCode(block, `IF${n}`, Blockly.JavaScript.ORDER_NONE) || 'false';\n\n        // i.e. (else)? if { // code }\n        const keyword = n > 0 ? 'else if' : 'if';\n        code += `\n        ${keyword} (${condition}) {\n            ${Blockly.JavaScript.statementToCode(block, `DO${n}`)}\n        }`;\n        n++;\n    } while (block.getInput(`IF${n}`));\n\n    if (block.getInput('ELSE')) {\n        code += `\n        else {\n            ${Blockly.JavaScript.statementToCode(block, 'ELSE')}\n        }`;\n    }\n\n    return `${code}\\n`;\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.logic_boolean = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: '%1',\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'BOOL',\n                    options: [[translate('true'), 'TRUE'], [translate('false'), 'FALSE']],\n                },\n            ],\n            output         : 'Boolean',\n            outputShape    : Blockly.OUTPUT_SHAPE_HEXAGONAL,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Logic Boolean Tooltip'),\n            category       : Blockly.Categories.Logic,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Logic Boolean'),\n            'description' : translate('Logic Boolean Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.logic_boolean = block => {\n    const code = block.getFieldValue('BOOL') === 'TRUE' ? 'true' : 'false';\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.logic_compare = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: '%1 %2 %3',\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'A',\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'OP',\n                    options: [\n                        ['=', 'EQ'],\n                        ['\\u2260', 'NEQ'],\n                        ['\\u200F<', 'LT'],\n                        ['\\u200F\\u2264', 'LTE'],\n                        ['\\u200F>', 'GT'],\n                        ['\\u200F\\u2265', 'GTE'],\n                    ],\n                },\n                {\n                    type: 'input_value',\n                    name: 'B',\n                },\n            ],\n            output         : 'Boolean',\n            outputShape    : Blockly.OUTPUT_SHAPE_HEXAGONAL,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Logic Compare Tooltip'),\n            category       : Blockly.Categories.Logic,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Logic Compare'),\n            'description' : translate('Logic Compare Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.logic_compare = block => {\n    const operatorMapping = {\n        EQ : '==',\n        NEQ: '!=',\n        LT : '<',\n        LTE: '<=',\n        GT : '>',\n        GTE: '>=',\n    };\n\n    const operator = operatorMapping[block.getFieldValue('OP') || 'EQ'];\n    const order = ['==', '!='].includes(operator)\n        ? Blockly.JavaScript.ORDER_EQUALITY\n        : Blockly.JavaScript.ORDER_RELATIONAL;\n\n    const argument0 = Blockly.JavaScript.valueToCode(block, 'A', order);\n    const argument1 = Blockly.JavaScript.valueToCode(block, 'B', order);\n\n    const code = `${argument0} ${operator} ${argument1}`;\n    return [code, order];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.logic_negate = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('not %1'),\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'BOOL',\n                },\n            ],\n            output         : 'Boolean',\n            outputShape    : Blockly.OUTPUT_SHAPE_HEXAGONAL,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Logic Negate Tooltip'),\n            category       : Blockly.Categories.Logic,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Logic Negate'),\n            'description' : translate('Logic Negate Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.logic_negate = block => {\n    const order = Blockly.JavaScript.ORDER_LOGICAL_NOT;\n    const argument0 = Blockly.JavaScript.valueToCode(block, 'BOOL', order) || 'true';\n\n    const code = `!${argument0}`;\n    return [code, order];\n};\n","import { translate } from '../../../utils/tools';\n\nBlockly.Blocks.logic_null = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0       : 'null',\n            output         : null,\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Logic Null Tooltip'),\n            category       : Blockly.Categories.Logic,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Logic Null'),\n            'description' : translate('Logic Null Description'),\n        };\n    },\n};\nBlockly.JavaScript.logic_null = () => ['null', Blockly.JavaScript.ORDER_ATOMIC];\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.logic_operation = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: '%1 %2 %3',\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'A',\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'OP',\n                    options: [[translate('and'), 'AND'], [translate('or'), 'OR']],\n                },\n                {\n                    type: 'input_value',\n                    name: 'B',\n                },\n            ],\n            output         : 'Boolean',\n            outputShape    : Blockly.OUTPUT_SHAPE_HEXAGONAL,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Logic Operator Tooltip'),\n            category       : Blockly.Categories.Logic,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Logic Operator'),\n            'description' : translate('Logic Operator Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.logic_operation = block => {\n    const selectedOperator = block.getFieldValue('OP');\n\n    let operator,\n        order;\n\n    if (selectedOperator === 'AND') {\n        operator = '&&';\n        order = Blockly.JavaScript.ORDER_LOGICAL_AND;\n    } else if (selectedOperator === 'OR') {\n        operator = '||';\n        order = Blockly.JavaScript.ORDER_LOGICAL_OR;\n    }\n\n    const argument0 = Blockly.JavaScript.valueToCode(block, 'A');\n    const argument1 = Blockly.JavaScript.valueToCode(block, 'B');\n\n    const code = `${argument0} ${operator} ${argument1}`;\n    return [code, order];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.logic_ternary = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('test %1'),\n            message1: translate('if true %1'),\n            message2: translate('if false %1'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'IF',\n                    check: 'Boolean',\n                },\n            ],\n            args1: [\n                {\n                    type: 'input_value',\n                    name: 'THEN',\n                },\n            ],\n            args2: [\n                {\n                    type: 'input_value',\n                    name: 'ELSE',\n                },\n            ],\n            output         : null,\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Logic Ternary Tooltip'),\n            category       : Blockly.Categories.Logic,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Logic Ternary'),\n            'description' : translate('Logic Ternary Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.logic_ternary = block => {\n    const valueIf = Blockly.JavaScript.valueToCode(block, 'IF', Blockly.JavaScript.ORDER_CONDITIONAL) || 'false';\n    const valueThen = Blockly.JavaScript.valueToCode(block, 'THEN', Blockly.JavaScript.ORDER_CONDITIONAL) || 'null';\n    const valueElse = Blockly.JavaScript.valueToCode(block, 'ELSE', Blockly.JavaScript.ORDER_CONDITIONAL) || 'null';\n\n    const code = `${valueIf} ? ${valueThen} : ${valueElse}`;\n    return [code, Blockly.JavaScript.ORDER_CONDITIONAL];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.math_arithmetic = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: '%1 %2 %3',\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'A',\n                    check: 'Number',\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'OP',\n                    options: [['+', 'ADD'], ['-', 'MINUS'], ['*', 'MULTIPLY'], ['/', 'DIVIDE'], ['^', 'POWER']],\n                },\n                {\n                    type : 'input_value',\n                    name : 'B',\n                    check: 'Number',\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Mathematic Arithmetic (Add, minus, mutiply, divide, power)'),\n            category       : Blockly.Categories.Mathematical,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Mathematic Arithmetic'),\n            'description' : translate('Mathematic Arithmetic Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.math_arithmetic = block => {\n    const operators = {\n        ADD     : ['+', Blockly.JavaScript.ORDER_ADDITION],\n        MINUS   : ['-', Blockly.JavaScript.ORDER_SUBTRACTION],\n        MULTIPLY: ['*', Blockly.JavaScript.ORDER_MULTIPLICATION],\n        DIVIDE  : ['/', Blockly.JavaScript.ORDER_DIVISION],\n        POWER   : [null, Blockly.JavaScript.ORDER_COMMA], // Handle power separately.\n    };\n\n    const tuple = operators[block.getFieldValue('OP')];\n    const operator = tuple[0];\n    const order = tuple[1];\n\n    const argument0 = Blockly.JavaScript.valueToCode(block, 'A', order) || '0';\n    const argument1 = Blockly.JavaScript.valueToCode(block, 'B', order) || '0';\n\n    let code;\n\n    // Power in JavaScript requires a special case since it has no operator.\n    if (!operator) {\n        code = `Math.pow(${argument0}, ${argument1})`;\n        return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n    }\n\n    code = `${argument0} ${operator} ${argument1}`;\n    return [code, order];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.math_change = {\n    /**\n    * Initializes the block, in most cases this calls the jsonInit function, in some\n    * cases it may add extra properties to the block object.\n    * https://developers.google.com/blockly/reference/js/Blockly.Block#jsonInit\n    */\n    init() {\n        this.jsonInit(this.definition());\n    },\n    /**\n     * Block definitions describe how a block looks and behaves, including the text,\n     * the colour, the shape, and what other blocks it can connect to. We've separated\n     * the block definition from the init function so we can search through it.\n     * https://developers.google.com/blockly/guides/create-custom-blocks/define-blocks\n     */\n    definition() {\n        return {\n            message0: translate('change %1 by %2'),\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VAR',\n                    variable: translate('item'),\n                },\n                {\n                    type : 'input_value',\n                    name : 'DELTA',\n                    check: 'Number',\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Change Number variable'),\n            category         : Blockly.Categories.Mathematical,\n        };\n    },\n    /**\n     * Meta returns an object with with properties that contain human readable strings,\n     * these strings are used in the flyout help content, as well as used for searching\n     * for specific blocks.\n     */\n    meta() {\n        return {\n            'display_name': translate('Change Math'),\n            'description' : translate('Change Number Type Variable'),\n        };\n    },\n};\n\nBlockly.JavaScript.math_change = block => {\n    const variable = block.getFieldValue('VAR');\n    // eslint-disable-next-line no-underscore-dangle\n    const argument0 = Blockly.JavaScript.variableDB_.getName(variable, Blockly.Variables.NAME_TYPE);\n    const argument1 = Blockly.JavaScript.valueToCode(block, 'DELTA', Blockly.JavaScript.ORDER_ADDITION) || '0';\n\n    const code = `\n    if (typeof ${argument0} != 'number') {\n        ${argument0} = 0;\n    };\n    ${argument0} += ${argument1};\\n`;\n    return code;\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.math_constant = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: '%1',\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'CONSTANT',\n                    options: [\n                        ['\\u03C0', 'PI'],\n                        ['\\u2107', 'E'],\n                        ['\\u03d5', 'GOLDEN_RATIO'],\n                        ['sqrt(2)', 'SQRT2'],\n                        ['sqrt(\\u00bd)', 'SQRT1_2'],\n                        ['\\u221e', 'INFINITY'],\n                    ],\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Math Constant Tooltip'),\n            category       : Blockly.Categories.Mathematical,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Math Constant'),\n            'description' : translate('Math Constant Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.math_constant = block => {\n    const constant = block.getFieldValue('CONSTANT');\n\n    let code,\n        order;\n\n    if (constant === 'PI') {\n        code = 'Math.PI';\n        order = Blockly.JavaScript.ORDER_MEMBER;\n    } else if (constant === 'E') {\n        code = 'Math.E';\n        order = Blockly.JavaScript.ORDER_MEMBER;\n    } else if (constant === 'GOLDEN_RATIO') {\n        code = '(1 + Math.sqrt(5)) / 2';\n        order = Blockly.JavaScript.ORDER_DIVISION;\n    } else if (constant === 'SQRT2') {\n        code = 'Math.SQRT2';\n        order = Blockly.JavaScript.ORDER_MEMBER;\n    } else if (constant === 'SQRT1_2') {\n        code = 'Math.SQRT1_2';\n        order = Blockly.JavaScript.ORDER_MEMBER;\n    } else if (constant === 'INFINITY') {\n        code = 'Infinity';\n        order = Blockly.JavaScript.ORDER_ATOMIC;\n    }\n\n    return [code, order];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.math_constrain = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('constrain %1 low %2 high %3'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'VALUE',\n                    check: 'Number',\n                },\n                {\n                    type : 'input_value',\n                    name : 'LOW',\n                    check: 'Number',\n                },\n                {\n                    type : 'input_value',\n                    name : 'HIGH',\n                    check: 'Number',\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Math Constrain Tooltip'),\n            category       : Blockly.Categories.Mathematical,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Math Constrain'),\n            'description' : translate('Math Constrain Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.math_constrain = block => {\n    const argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE', Blockly.JavaScript.ORDER_COMMA) || '0';\n    const argument1 = Blockly.JavaScript.valueToCode(block, 'LOW', Blockly.JavaScript.ORDER_COMMA) || '0';\n    const argument2 = Blockly.JavaScript.valueToCode(block, 'HIGH', Blockly.JavaScript.ORDER_COMMA) || '0';\n\n    const code = `Math.min(Math.max(${argument0}, ${argument1}), ${argument2})`;\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.math_modulo = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('remainder of %1 ÷ %2'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'DIVIDEND',\n                    check: 'Number',\n                },\n                {\n                    type : 'input_value',\n                    name : 'DIVISOR',\n                    check: 'Number',\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Math Modulo Tooltip'),\n            category       : Blockly.Categories.Mathematical,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Math Modulo'),\n            'description' : translate('Math Modulo Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.math_modulo = block => {\n    const argument0 = Blockly.JavaScript.valueToCode(block, 'DIVIDEND', Blockly.JavaScript.ORDER_MODULUS) || '0';\n    const argument1 = Blockly.JavaScript.valueToCode(block, 'DIVISOR', Blockly.JavaScript.ORDER_MODULUS) || '0';\n\n    const code = `${argument0} % ${argument1}`;\n    return [code, Blockly.JavaScript.ORDER_MODULUS];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.math_number = {\n    init() {\n        this.jsonInit(this.definition());\n\n        const fieldInput = this.getField('NUM');\n        fieldInput.setValidator(input => this.numberValidator(input));\n    },\n    definition(){\n        return {\n            message0: '%1',\n            args0   : [\n                {\n                    type : 'field_number',\n                    name : 'NUM',\n                    value: 0,\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : '#dedede',\n            colourSecondary: '#ffffff',\n            colourTertiary : '#ffffff',\n            tooltip        : translate('Math Number Tooltip'),\n            category       : Blockly.Categories.Mathematical,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Math Number'),\n            'description' : translate('Math Number Decscription'),\n        };\n    },\n    numberValidator(input) {\n        if (/^-?([0][,.]|[1-9]+[,.])?([0]|[1-9])*$/.test(input)) {\n            return undefined;\n        }\n        return null;\n    },\n};\n\nBlockly.JavaScript.math_number = block => {\n    const code = block.getFieldValue('NUM');\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.math_number_positive = {\n    init      : Blockly.Blocks.math_number.init,\n    definition: Blockly.Blocks.math_number.definition,\n    meta() {\n        return {\n            'display_name': translate('Math Number Positive'),\n            'description' : translate('Math Number Description'),\n        };\n    },\n    numberValidator(input) {\n        if (/^([0][,.]|[1-9]+[,.])?([0]|[1-9])*$/.test(input)) {\n            return undefined;\n        }\n        return null;\n    },\n};\n\nBlockly.JavaScript.math_number_positive = Blockly.JavaScript.math_number;\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.math_number_property = {\n    init() {\n        this.jsonInit(this.definition());\n\n        this.setOnChange(event => {\n            if (event.name === 'PROPERTY') {\n                const hasDivisorInput = this.getFieldValue('PROPERTY') === 'DIVISIBLE_BY';\n                this.updateShape(hasDivisorInput);\n            }\n        });\n    },\n    definition(){\n        return {\n            message0: translate('%1 is %2'),\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'NUMBER_TO_CHECK',\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'PROPERTY',\n                    options: [\n                        [translate('even'), 'EVEN'],\n                        [translate('odd'), 'ODD'],\n                        [translate('prime'), 'PRIME'],\n                        [translate('whole'), 'WHOLE'],\n                        [translate('positive'), 'POSITIVE'],\n                        [translate('negative'), 'NEGATIVE'],\n                        [translate('divisible by'), 'DIVISIBLE_BY'],\n                    ],\n                },\n            ],\n            output         : 'Boolean',\n            outputShape    : Blockly.OUTPUT_SHAPE_HEXAGONAL,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            toolip         : translate('Math Number Tooltip'),\n            category       : Blockly.Categories.Mathematical,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Math Number'),\n            'description' : translate('Math Number Description'),\n        };\n    },\n    domToMutation(xmlElement) {\n        const hasDivisorInput = xmlElement.getAttribute('divisor_input') === 'true';\n        this.updateShape(hasDivisorInput);\n    },\n    mutationToDom() {\n        const container = document.createElement('mutation');\n        const divisorInput = this.getFieldValue('PROPERTY') === 'DIVISIBLE_BY';\n        container.setAttribute('divisor_input', divisorInput);\n        return container;\n    },\n    updateShape(hasDivisorInput) {\n        const inputExists = this.getInput('DIVISOR');\n\n        if (hasDivisorInput) {\n            if (!inputExists) {\n                this.appendValueInput('DIVISOR').setCheck('Number');\n                this.initSvg();\n                this.render(false);\n            }\n        } else {\n            this.removeInput('DIVISOR');\n        }\n    },\n};\n\nBlockly.JavaScript.math_number_property = block => {\n    const argument0 = Blockly.JavaScript.valueToCode(block, 'NUMBER_TO_CHECK', Blockly.JavaScript.ORDER_MODULUS) || '0';\n    const property = block.getFieldValue('PROPERTY');\n\n    let code;\n\n    if (property === 'PRIME') {\n        // eslint-disable-next-line no-underscore-dangle\n        const functionName = Blockly.JavaScript.provideFunction_('mathIsPrime', [\n            // eslint-disable-next-line no-underscore-dangle\n            `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(n) {\n                // https://en.wikipedia.org/wiki/Primality_test#Naive_methods\n                if (n == 2 || n == 3) {\n                    return true;\n                }\n\n                // False if n is NaN, negative, is 1, or not whole.\n                // And false if n is divisible by 2 or 3.\n                if (isNaN(n) || n <= 1 || n % 1 != 0 || n % 2 == 0 || n % 3 == 0) {\n                    return false;\n                }\n\n                // Check all the numbers of form 6k +/- 1, up to sqrt(n).\n                for (var x  = 6; x <= Math.sqrt(n) + 1; x += 6) {\n                    if (n % (x - 1) == 0 || n % (x + 1) == 0) {\n                        return false;\n                    }\n                }\n                return true;\n            }`,\n        ]);\n        code = `${functionName}(${argument0})`;\n        return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n    } else if (property === 'EVEN') {\n        code = `${argument0} % 2 === 0`;\n    } else if (property === 'ODD') {\n        code = `${argument0} % 2 === 1`;\n    } else if (property === 'WHOLE') {\n        code = `${argument0} % 1 === 0`;\n    } else if (property === 'POSITIVE') {\n        code = `${argument0} > 0`;\n    } else if (property === 'NEGATIVE') {\n        code = `${argument0} < 0`;\n    } else if (property === 'DIVISIBLE_BY') {\n        const divisor = Blockly.JavaScript.valueToCode(block, 'DIVISOR', Blockly.JavaScript.ORDER_MODULUS) || '0';\n        code = `${argument0} % ${divisor} == 0`;\n    }\n\n    return [code, Blockly.JavaScript.ORDER_EQUALITY];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.math_on_list = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('%1 of list %2'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'OPERATION',\n                    options: [\n                        [translate('sum'), 'SUM'],\n                        [translate('min'), 'MIN'],\n                        [translate('max'), 'MAX'],\n                        [translate('average'), 'AVERAGE'],\n                        [translate('median'), 'MEDIAN'],\n                        [translate('modes'), 'MODE'],\n                        [translate('standard deviation'), 'STD_DEV'],\n                        [translate('random item'), 'RANDOM'],\n                    ],\n                },\n                {\n                    type: 'input_value',\n                    name: 'LIST',\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Math On List'),\n            category       : Blockly.Categories.Mathematical,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Math On List'),\n            'description' : translate('Math On List Description'),\n        };\n    },\n};\n\n/* eslint-disable no-underscore-dangle */\nBlockly.JavaScript.math_on_list = block => {\n    const operation = block.getFieldValue('OPERATION');\n\n    let code,\n        list;\n\n    if (operation === 'SUM') {\n        list = Blockly.JavaScript.valueToCode(block, 'LIST', Blockly.JavaScript.ORDER_MEMBER) || '[]';\n        code = `${list}.reduce(function(x, y) { return x + y; })`;\n    } else if (operation === 'MIN') {\n        list = Blockly.JavaScript.valueToCode(block, 'LIST', Blockly.JavaScript.ORDER_COMMA) || '[]';\n        code = `Math.min.apply(null, ${list})`;\n    } else if (operation === 'MAX') {\n        list = Blockly.JavaScript.valueToCode(block, 'LIST', Blockly.JavaScript.ORDER_COMMA) || '[]';\n        code = `Math.max.apply(null, ${list})`;\n    } else if (operation === 'AVERAGE') {\n        const functionName = Blockly.JavaScript.provideFunction_('mathMean', [\n            `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(myList) {\n                return myList.reduce(function(x, y) { \n                    return x + y; \n                }) / myList.length;\n            }`,\n        ]);\n\n        list = Blockly.JavaScript.valueToCode(block, 'LIST', Blockly.JavaScript.ORDER_NONE) || '[]';\n        code = `${functionName}(${list})`;\n    } else if (operation === 'MEDIAN') {\n        const functionName = Blockly.JavaScript.provideFunction_('mathMedian', [\n            `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(myList) {\n                var localList = myList.filter(function(x) { \n                    return typeof x == 'number'; \n                });\n                if (!localList.length) {\n                    return null;\n                }\n                localList.sort(function(a, b) { \n                    return b - a; \n                });\n                if (localList.length % 2 == 0) {\n                    return (localList[localList.length / 2 - 1] + localList[localList.length / 2]) / 2;\n                } else {\n                    return localList[(localList.length - 1) / 2];\n                }\n            }`,\n        ]);\n\n        list = Blockly.JavaScript.valueToCode(block, 'LIST', Blockly.JavaScript.ORDER_NONE) || '[]';\n        code = `${functionName}(${list})`;\n    } else if (operation === 'MODE') {\n        const functionName = Blockly.JavaScript.provideFunction_('mathModes', [\n            `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(values) {\n                var modes = [];\n                var counts = [];\n                var maxCount = 0;\n\n                for (var i = 0; i < values.length; i++) {\n                    var value = values[i];\n                    var found = false;\n                    var thisCount;\n\n                    for (var j = 0; j < counts.length; j++) {\n                        if (counts[j][0] === value) {\n                            thisCount = ++counts[j][1];\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        counts.push([value, 1]);\n                        thisCount = 1;\n                    }\n                    maxCount = Math.max(thisCount, maxCount);\n                }\n                \n                for (var j = 0; j < counts.length; j++) {\n                    if (counts[j][1] == maxCount) {\n                        modes.push(counts[j][0]);\n                    }\n                }\n\n                return modes;\n            }`,\n        ]);\n\n        list = Blockly.JavaScript.valueToCode(block, 'LIST', Blockly.JavaScript.ORDER_NONE) || '[]';\n        code = `${functionName}(${list})`;\n    } else if (operation === 'STD_DEV') {\n        const functionName = Blockly.JavaScript.provideFunction_('mathStandardDeviation', [\n            `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(numbers) {\n                var n = numbers.length;\n                if (!n) {\n                    return null;\n                }\n\n                var mean = numbers.reduce(function(x, y) {\n                    return x + y;\n                }) / n;\n\n                var variance = 0;\n                for (var j = 0; j < n; j++) {\n                    variance += Math.pow(numbers[j] - mean, 2);\n                }\n                variance = variance / n;\n                return Math.sqrt(variance);\n            }`,\n        ]);\n\n        list = Blockly.JavaScript.valueToCode(block, 'LIST', Blockly.JavaScript.ORDER_NONE) || '[]';\n        code = `${functionName}(${list})`;\n    } else if (operation === 'RANDOM') {\n        const functionName = Blockly.JavaScript.provideFunction_('mathRandomList', [\n            `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(list) {\n                var x = Math.floor(Math.random() * list.length);\n                return list[x];\n            }`,\n        ]);\n\n        list = Blockly.JavaScript.valueToCode(block, 'LIST', Blockly.JavaScript.ORDER_NONE) || '[]';\n        code = `${functionName}(${list})`;\n    }\n\n    return [code, Blockly.JavaScript.FUNCTION_CALL];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.math_random_float = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0       : translate('random fraction'),\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Math Random Float Tooltip'),\n            category       : Blockly.Categories.Mathematical,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Math Random Float'),\n            'description' : translate('Math Random Float Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.math_random_float = () => ['Math.random()', Blockly.JavaScript.ORDER_FUNCTION_CALL];\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.math_random_int = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('random integer from %1 to %2'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'FROM',\n                    check: 'Number',\n                },\n                {\n                    type : 'input_value',\n                    name : 'TO',\n                    check: 'Number',\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Math Random Integer Tooltip'),\n            category       : Blockly.Categories.Mathematical,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Math Random Integer'),\n            'description' : translate('Math Random Integer Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.math_random_int = block => {\n    const argument0 = Blockly.JavaScript.valueToCode(block, 'FROM', Blockly.JavaScript.ORDER_COMMA) || '0';\n    const argument1 = Blockly.JavaScript.valueToCode(block, 'TO', Blockly.JavaScript.ORDER_COMMA) || '0';\n\n    // eslint-disable-next-line no-underscore-dangle\n    const functionName = Blockly.JavaScript.provideFunction_('mathRandomInt', [\n        // eslint-disable-next-line no-underscore-dangle\n        `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(a, b) {\n            if (a > b) {\n                // Swap a and b to ensure a is smaller.\n                var c = a;\n                a = b;\n                b = c;\n            }\n            return Math.floor(Math.random() * (b - a + 1) + a);\n        }`,\n    ]);\n\n    const code = `${functionName}(${argument0}, ${argument1})`;\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\n// https://github.com/google/blockly/blob/master/generators/javascript/math.js\nBlockly.Blocks.math_round = {\n    /**\n     * Check if a number is even, odd, prime, whole, positive, or negative\n     * or if it is divisible by certain number. Returns true or false.\n     * @this Blockly.Block\n     */\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: '%1 %2',\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'OP',\n                    options: [['round', 'ROUND'], ['round up', 'ROUNDUP'], ['round down', 'ROUNDDOWN']],\n                },\n                {\n                    type: 'input_value',\n                    name: 'NUM',\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Math Round Tooltip'),\n            category       : Blockly.Categories.Mathematical,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Math Round'),\n            'description' : translate('Math Round Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.math_round = block => {\n    const operation = block.getFieldValue('OP');\n    const argument0 = Blockly.JavaScript.valueToCode(block, 'NUM') || '0';\n\n    let code;\n\n    if (operation === 'ROUND') {\n        code = `Math.round(${argument0})`;\n    } else if (operation === 'ROUNDUP') {\n        code = `Math.ceil(${argument0})`;\n    } else if (operation === 'ROUNDDOWN') {\n        code = `Math.floor(${argument0})`;\n    }\n\n    return [code, Blockly.JavaScript.FUNCTION_CALL];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.math_single = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('%1 %2'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'OP',\n                    options: [\n                        [translate('square root'), 'ROOT'],\n                        [translate('absolute'), 'ABS'],\n                        ['-', 'NEG'],\n                        ['ln', 'LN'],\n                        ['log10', 'LOG10'],\n                        ['e^', 'EXP'],\n                        ['10^', 'POW10'],\n                    ],\n                },\n                {\n                    type: 'input_value',\n                    name: 'NUM',\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Mathematical Single Tooltip'),\n            category       : Blockly.Categories.Mathematical,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Mathematical Single'),\n            'description' : translate('Mathematical Single Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.math_single = block => {\n    const operator = block.getFieldValue('OP');\n\n    let code,\n        arg;\n\n    if (operator === 'NEG') {\n        // Negation is a special case given its different operator precedence.\n        arg = Blockly.JavaScript.valueToCode(block, 'NUM', Blockly.JavaScript.ORDER_UNARY_NEGATION) || '0';\n        if (arg[0] === '-') {\n            // --3 is not legal in JS\n            arg = ` ${arg}`;\n        }\n        code = `-${arg}`;\n        return [code, Blockly.JavaScript.ORDER_UNARY_NEGATION];\n    }\n\n    if (['SIN', 'COS', 'TAN'].includes(operator)) {\n        arg = Blockly.JavaScript.valueToCode(block, 'NUM', Blockly.JavaScript.ORDER_DIVISION) || '0';\n    } else {\n        arg = Blockly.JavaScript.valueToCode(block, 'NUM', Blockly.JavaScript.ORDER_NONE) || '0';\n    }\n\n    // First, handle cases which generate values that don't need parentheses\n    // wrapping the code.\n    if (operator === 'ABS') {\n        code = `Math.abs(${arg})`;\n    } else if (operator === 'ROOT') {\n        code = `Math.sqrt(${arg})`;\n    } else if (operator === 'LN') {\n        code = `Math.log(${arg})`;\n    } else if (operator === 'EXP') {\n        code = `Math.pow(Math.E, ${arg})`;\n    } else if (operator === 'POW10') {\n        code = `Math.pow(10, ${arg})`;\n    } else if (operator === 'ROUND') {\n        code = `Math.round(${arg})`;\n    } else if (operator === 'ROUNDUP') {\n        code = `Math.ceil(${arg})`;\n    } else if (operator === 'ROUNDDOWN') {\n        code = `Math.floor(${arg})`;\n    } else if (operator === 'SIN') {\n        code = `Math.sin(${arg} / 180 * Math.PI)`;\n    } else if (operator === 'COS') {\n        code = `Math.cos(${arg} / 180 * Math.PI)`;\n    } else if (operator === 'TAN') {\n        code = `Math.tan(${arg} / 180 * Math.PI)`;\n    }\n\n    if (code) {\n        return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n    }\n\n    // Second, handle cases which generate values that may need parentheses\n    // wrapping the code.\n    if (operator === 'LOG10') {\n        code = `Math.log(${arg}) / Math.log(10)`;\n    } else if (operator === 'ASIN') {\n        code = `Math.asin(${arg}) / Math.PI * 180`;\n    } else if (operator === 'ACOS') {\n        code = `Math.acos(${arg}) / Math.PI * 180`;\n    } else if (operator === 'ATAN') {\n        code = `Math.atan(${arg}) / Math.PI * 180`;\n    }\n\n    return [code, Blockly.JavaScript.ORDER_DIVISION];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.math_trig = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('%1 %2'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'OP',\n                    options: [\n                        ['sin', 'SIN'],\n                        ['cos', 'COS'],\n                        ['tan', 'TAN'],\n                        ['asin', 'ASIN'],\n                        ['acos', 'ACOS'],\n                        ['atan', 'ATAN'],\n                    ],\n                },\n                {\n                    type : 'input_value',\n                    name : 'NUM',\n                    check: 'Number',\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Mathematical Trig Tooltip'),\n            category       : Blockly.Categories.Mathematical,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Mathematical Trig'),\n            'description' : translate('Mathematical Trig Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.math_trig = Blockly.JavaScript.math_single;\n","import { translate } from '../../../utils/tools';\n\nBlockly.Blocks.text = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: '%1',\n            args0   : [\n                {\n                    type: 'field_input',\n                    name: 'TEXT',\n                },\n            ],\n            output         : 'String',\n            outputShape    : Blockly.OUTPUT_SHAPE_SQUARE,\n            colour         : '#dedede',\n            colourSecondary: '#ffffff',\n            colourTertiary : '#ffffff',\n            tooltip        : translate('Text Tooltip'),\n            category       : Blockly.Categories.Text,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('text'),\n            'description' : translate('Text Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.text = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const code = Blockly.JavaScript.quote_(block.getFieldValue('TEXT'));\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.text_append = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('to %1 append text %2'),\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VAR',\n                    variable: translate('text'),\n                },\n                {\n                    type: 'input_value',\n                    name: 'TEXT',\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Text Append Tooltip'),\n            category         : Blockly.Categories.Text,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Text Append'),\n            'description' : translate('Text Append Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.text_append = block => {\n    const forceString = value => {\n        const strRegExp = /^\\s*'([^']|\\\\')*'\\s*$/;\n        if (strRegExp.test(value)) {\n            return value;\n        }\n        return `String(${value})`;\n    };\n\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n    const value = Blockly.JavaScript.valueToCode(block, 'TEXT', Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n\n    const code = `${varName} += ${forceString(value)};\\n`;\n    return code;\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.text_changeCase = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('to %1 %2'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'CASE',\n                    options: [\n                        [translate('UPPER CASE'), 'UPPERCASE'],\n                        [translate('lower case'), 'LOWERCASE'],\n                        [translate('Title Case'), 'TITLECASE'],\n                    ],\n                },\n                {\n                    type: 'input_value',\n                    name: 'TEXT',\n                },\n            ],\n            output         : 'String',\n            outputShape    : Blockly.OUTPUT_SHAPE_SQUARE,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Text Change Case Tooltip'),\n            category       : Blockly.Categories.Text,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Text Change Case'),\n            'description' : translate('Text Change Case Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.text_changeCase = block => {\n    const operators = {\n        UPPERCASE: '.toUpperCase()',\n        LOWERCASE: '.toLowerCase()',\n        TITLECASE: null,\n    };\n    const operator = operators[block.getFieldValue('CASE')];\n    const textOrder = operator ? Blockly.JavaScript.ORDER_MEMBER : Blockly.JavaScript.ORDER_NONE;\n    const text = Blockly.JavaScript.valueToCode(block, 'TEXT', textOrder) || '\\'\\'';\n\n    let code;\n\n    if (operator) {\n        code = `${text}${operator}`;\n    } else {\n        // eslint-disable-next-line no-underscore-dangle\n        const functionName = Blockly.JavaScript.provideFunction_('textToTitleCase', [\n            // eslint-disable-next-line no-underscore-dangle\n            `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(str) {\n                return str.toLowerCase().split(' ').map(function(word) {\n                    return word.replace(word[0], word[0].toUpperCase());\n                }).join(' ');\n            }`,\n        ]);\n        code = `${functionName}(${text})`;\n    }\n\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.text_charAt = {\n    init() {\n        this.jsonInit(this.definition());\n\n        const dropdown = this.getField('WHERE');\n        dropdown.setValidator(value => {\n            const newAt = ['FROM_START', 'FROM_END'].includes(value);\n            if (newAt !== this.isAt) {\n                this.updateAt(newAt);\n                this.setFieldValue(value, 'WHERE');\n                return null;\n            }\n            return undefined;\n        });\n\n        this.updateAt(true);\n    },\n    definition(){\n        return {\n            message0: translate('in text %1 get %2'),\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'VALUE',\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'WHERE',\n                    options: [\n                        [translate('letter #'), 'FROM_START'],\n                        [translate('letter # from end'), 'FROM_END'],\n                        [translate('first letter'), 'FIRST'],\n                        [translate('last letter'), 'LAST'],\n                        [translate('random letter'), 'RANDOM'],\n                    ],\n                },\n            ],\n            output         : 'String',\n            outputShape    : Blockly.OUTPUT_SHAPE_SQUARE,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Text Char At Tooltip'),\n            category       : Blockly.Categories.Text,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Text Char At'),\n            'description' : translate('Text Char At Description'),\n        };\n    },\n    mutationToDom() {\n        const container = document.createElement('mutation');\n        container.setAttribute('at', !!this.isAt);\n        return container;\n    },\n    domToMutation(xmlElement) {\n        const isAt = xmlElement.getAttribute('at') !== 'false';\n        this.updateAt(isAt);\n    },\n    updateAt(isAt) {\n        this.removeInput('AT', true);\n        if (isAt) {\n            this.appendValueInput('AT').setCheck('Number');\n        }\n\n        this.isAt = isAt;\n        this.initSvg();\n        this.render(false);\n    },\n};\n\nBlockly.JavaScript.text_charAt = block => {\n    const where = block.getFieldValue('WHERE') || 'FROM_START';\n    const textOrder = where === 'RANDOM' ? Blockly.JavaScript.ORDER_NONE : Blockly.JavaScript.ORDER_MEMBER;\n    const text = Blockly.JavaScript.valueToCode(block, 'VALUE', textOrder) || '\\'\\'';\n\n    let code;\n\n    if (where === 'FROM_START') {\n        const at = Blockly.JavaScript.getAdjusted(block, 'AT');\n        // Adjust index if using one-based indices\n        code = `${text}.charAt(${at})`;\n    } else if (where === 'FROM_END') {\n        const at = Blockly.JavaScript.getAdjusted(block, 'AT', 1, true);\n        code = `${text}.slice(${at}).charAt(0)`;\n    } else if (where === 'FIRST') {\n        code = `${text}.charAt(0)`;\n    } else if (where === 'LAST') {\n        code = `${text}.slice(-1)`;\n    } else if (where === 'RANDOM') {\n        // eslint-disable-next-line no-underscore-dangle\n        const functionName = Blockly.JavaScript.provideFunction_('textRandomLetter', [\n            // eslint-disable-next-line no-underscore-dangle\n            `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(text) {\n                var x = Math.floor(Math.random() * text.length);\n                return text[x];\n            }`,\n        ]);\n        code = `${functionName}(${text})`;\n    }\n\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.text_getSubstring = {\n    init() {\n        this.WHERE_OPTIONS_1 = [\n            [translate('letter\\u00A0#'), 'FROM_START'],\n            [translate('letter\\u00A0#\\u00A0from end'), 'FROM_END'],\n            [translate('first'), 'FIRST'],\n        ];\n        this.WHERE_OPTIONS_2 = [\n            [translate('letter\\u00A0#'), 'FROM_START'],\n            [translate('letter\\u00A0#\\u00A0from end'), 'FROM_END'],\n            [translate('last'), 'LAST'],\n        ];\n\n        this.jsonInit(this.definition());\n\n        this.updateAt(1, true);\n        this.updateAt(2, true);\n    },\n    definition(){\n        return {\n            message0: translate('in text %1 get substring from %2 %3 to %4 %5'),\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'STRING',\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'WHERE1',\n                    options: this.WHERE_OPTIONS_1,\n                },\n                {\n                    type: 'input_dummy',\n                    name: 'AT1',\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'WHERE2',\n                    options: this.WHERE_OPTIONS_2,\n                },\n                {\n                    type: 'input_dummy',\n                    name: 'AT2',\n                },\n            ],\n            output         : 'String',\n            outputShape    : Blockly.OUTPUT_SHAPE_SQUARE,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Text Substring tooltip'),\n            category       : Blockly.Categories.Text,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Text Substring'),\n            'description' : translate('Text Substring Description'),\n        };\n    },\n    mutationToDom() {\n        const container = document.createElement('mutation');\n        const isAt1 = this.getInput('AT1').type === Blockly.INPUT_VALUE;\n        const isAt2 = this.getInput('AT2').type === Blockly.INPUT_VALUE;\n\n        container.setAttribute('at1', isAt1);\n        container.setAttribute('at2', isAt2);\n\n        return container;\n    },\n    domToMutation(xmlElement) {\n        const isAt1 = xmlElement.getAttribute('at1') === 'true';\n        const isAt2 = xmlElement.getAttribute('at2') === 'true';\n\n        this.updateAt(1, isAt1);\n        this.updateAt(2, isAt2);\n    },\n    updateAt(n, isAt) {\n        this.removeInput(`AT${n}`, true);\n        if (isAt) {\n            this.appendValueInput(`AT${n}`).setCheck('Number');\n        } else {\n            this.appendDummyInput(`AT${n}`);\n        }\n\n        const menu = new Blockly.FieldDropdown(this[`WHERE_OPTIONS_${n}`], value => {\n            const newAt = ['FROM_START', 'FROM_END'].includes(value);\n            if (newAt !== isAt) {\n                this.updateAt(n, newAt);\n                this.setFieldValue(value, `WHERE${n}`);\n                return null;\n            }\n            return undefined;\n        });\n\n        this.getInput(`AT${n}`).appendField(menu, `WHERE${n}`);\n        if (n === 1) {\n            this.moveInputBefore('AT1', 'AT2');\n        }\n\n        this.initSvg();\n        this.render(false);\n    },\n};\n\nBlockly.JavaScript.text_getSubstring = block => {\n    const text = Blockly.JavaScript.valueToCode(block, 'STRING', Blockly.JavaScript.ORDER_FUNCTION_CALL) || '\\'\\'';\n    const where1 = block.getFieldValue('WHERE1');\n    const where2 = block.getFieldValue('WHERE2');\n\n    let at1,\n        at2,\n        code;\n\n    if (where1 === 'FIRST' && where2 === 'LAST') {\n        code = text;\n    } else if (\n        text.match(/^'?\\w+'?$/) ||\n        (where1 !== 'FROM_END' && where1 !== 'LAST' && where2 !== 'FROM_END' && where2 !== 'LAST')\n    ) {\n        if (where1 === 'FROM_START') {\n            at1 = Blockly.JavaScript.getAdjusted(block, 'AT1');\n        } else if (where1 === 'FROM_END') {\n            at1 = Blockly.JavaScript.getAdjusted(block, 'AT1', 1, false, Blockly.JavaScript.ORDER_SUBTRACTION);\n            at1 = `${text}.length - ${at1}`;\n        } else if (where1 === 'FIRST') {\n            at1 = '0';\n        }\n\n        if (where2 === 'FROM_START') {\n            at2 = Blockly.JavaScript.getAdjusted(block, 'AT2');\n        } else if (where2 === 'FROM_END') {\n            at2 = Blockly.JavaScript.getAdjusted(block, 'AT2', 0, false, Blockly.JavaScript.ORDER_SUBTRACTION);\n            at2 = `${text}.length - ${at2}`;\n        } else if (where2 === 'LAST') {\n            at2 = `${text}.length`;\n        }\n    } else {\n        at1 = Blockly.JavaScript.getAdjusted(block, 'AT1');\n        at2 = Blockly.JavaScript.getAdjusted(block, 'AT2');\n\n        // binary-bot: Blockly.JavaScript.text.getIndex_ (Blockly)\n        const getIndex = (stringName, where, optAt) => {\n            if (where === 'FIRST') {\n                return '0';\n            } else if (where === 'FROM_END') {\n                return `${stringName}.length - 1 - ${optAt}`;\n            } else if (where === 'LAST') {\n                return `${stringName}.length - 1`;\n            }\n            return optAt;\n        };\n        const wherePascalCase = {\n            FIRST     : 'First',\n            LAST      : 'Last',\n            FROM_START: 'FromStart',\n            FROM_END  : 'FromEnd',\n        };\n        // eslint-disable-next-line no-underscore-dangle\n        const functionName = Blockly.JavaScript.provideFunction_(\n            `subsequence${wherePascalCase[where1]}${wherePascalCase[where2]}`,\n            [\n                // eslint-disable-next-line no-underscore-dangle\n                `function ${Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_}(\n                    sequence\n                    ${where1 === 'FROM_END' || where1 === 'FROM_START' ? ', at1' : ''}\n                    ${where2 === 'FROM_END' || where2 === 'FROM_START' ? ', at2' : ''}\n                ) {\n                    var start = ${getIndex('sequence', where1, 'at1')};\n                    var end = ${getIndex('sequence', where2, 'at2')};\n                    return sequence.slice(start, end);\n                }`,\n            ]\n        );\n\n        code = `${functionName}(\n            ${text}\n            ${where1 === 'FROM_END' || where1 === 'FROM_START' ? `, ${at1}` : ''}\n            ${where2 === 'FROM_END' || where2 === 'FROM_START' ? `, ${at2}` : ''}\n        )`;\n    }\n\n    code = `${text}.slice(${at1}, ${at2})`;\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.text_indexOf = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('in text %1 find %2 occurence of text %3'),\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'VALUE',\n                    // check: 'String', Rendering looks off when check is enabled.\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'END',\n                    options: [[translate('first'), 'FIRST'], [translate('last'), 'LAST']],\n                },\n                {\n                    type: 'input_value',\n                    name: 'FIND',\n                    // check: 'String',\n                },\n            ],\n            output         : 'String',\n            outputShape    : Blockly.OUTPUT_SHAPE_SQUARE,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Text Index of Tooltip'),\n            cateogry       : Blockly.Categories.Text,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Text Index of'),\n            'description' : translate('Text Index of Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.text_indexOf = block => {\n    const functionName = block.getFieldValue('END') === 'FIRST' ? 'indexOf' : 'lastIndexOf';\n    const substring = Blockly.JavaScript.valueToCode(block, 'FIND', Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n    const text = Blockly.JavaScript.valueToCode(block, 'VALUE', Blockly.JavaScript.ORDER_MEMBER) || '\\'\\'';\n\n    const code = `${text}.${functionName}(${substring})`;\n    if (block.workspace.options.oneBasedIndex) {\n        return [`${code} + 1`, Blockly.JavaScript.ORDER_ADDITION];\n    }\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.text_isEmpty = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('text %1 is empty'),\n            args0   : [\n                {\n                    type : 'input_value',\n                    name : 'VALUE',\n                    check: ['String'],\n                },\n            ],\n            output         : 'Boolean',\n            outputShape    : Blockly.OUTPUT_SHAPE_HEXAGONAL,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Text Is empty'),\n            category       : Blockly.Categories.Text,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Text Is empty'),\n            'description' : translate('Text Is empty'),\n        };\n    },\n};\n\nBlockly.JavaScript.text_isEmpty = block => {\n    const text = Blockly.JavaScript.valueToCode(block, 'VALUE', Blockly.JavaScript.ORDER_MEMBER) || '\\'\\'';\n    const isVariable = block.workspace.getAllVariables().findIndex(variable => variable.name === text) !== -1;\n\n    const code = isVariable ? `!${text} || !${text}.length` : `!${text}.length`;\n    return [code, Blockly.JavaScript.ORDER_LOGICAL_NOT];\n};\n","import { plusIconDark } from '../images';\nimport { translate }    from '../../../utils/lang/i18n';\n\nBlockly.Blocks.text_join = {\n    init() {\n        this.jsonInit(this.definition());\n\n        const fieldImage = new Blockly.FieldImage(plusIconDark, 25, 25, '', this.onIconClick.bind(this));\n\n        this.appendDummyInput('ADD_ICON').appendField(fieldImage);\n        this.moveInputBefore('ADD_ICON', 'STACK');\n    },\n    definition(){\n        return {\n            message0: translate('set %1 to create text with'),\n            message1: '%1',\n            args0   : [\n                {\n                    type    : 'field_variable',\n                    name    : 'VARIABLE',\n                    variable: translate('text'),\n                },\n            ],\n            args1: [\n                {\n                    type: 'input_statement',\n                    name: 'STACK',\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Text Join Tooltip'),\n            category         : Blockly.Categories.Text,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Text Join'),\n            'description' : translate('Text Join Description'),\n        };\n    },\n    onIconClick() {\n        if (!this.workspace || this.isInFlyout) {\n            return;\n        }\n\n        Blockly.Events.setGroup(true);\n\n        const textBlock = this.workspace.newBlock('text_statement');\n        textBlock.requiredParentId = this.id;\n        textBlock.setMovable(false);\n        textBlock.initSvg();\n        textBlock.render();\n\n        const shadowBlock = this.workspace.newBlock('text');\n        shadowBlock.setShadow(true);\n        shadowBlock.setFieldValue('', 'TEXT');\n        shadowBlock.initSvg();\n        shadowBlock.render();\n\n        const textInput = textBlock.getInput('TEXT');\n        textInput.connection.connect(shadowBlock.outputConnection);\n\n        const connection = this.getLastConnectionInStatement('STACK');\n        connection.connect(textBlock.previousConnection);\n\n        Blockly.Events.setGroup(false);\n\n        // TODO: Open editor and focus so user can add string right away?\n        // const inputField = shadowBlock.getField('TEXT');\n        // inputField.showEditor_();\n    },\n    enforceTextStatementType() {\n        let currentBlock = this.getInputTargetBlock('STACK');\n\n        while (currentBlock !== null) {\n            if (currentBlock.type !== 'text_statement') {\n                currentBlock.unplug(false);\n            }\n            currentBlock = currentBlock.getNextBlock();\n        }\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        if (event.type === Blockly.Events.END_DRAG) {\n            // Only allow `text_statement` type blocks\n            const blocksInStatement = this.getBlocksInStatement('STACK');\n            blocksInStatement.forEach(block => {\n                if (block.type !== 'text_statement') {\n                    Blockly.Events.disable();\n                    block.unplug();\n                    Blockly.Events.enable();\n                }\n            });\n        }\n    },\n};\n\nBlockly.JavaScript.text_join = block => {\n    // eslint-disable-next-line no-underscore-dangle\n    const varName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue('VARIABLE'),\n        Blockly.Variables.NAME_TYPE\n    );\n\n    const elements = [];\n\n    let currentBlock = block.getInputTargetBlock('STACK');\n\n    while (currentBlock !== null) {\n        const value = Blockly.JavaScript[currentBlock.type](currentBlock);\n\n        if (Array.isArray(value) && value.length === 2) {\n            elements.push(value[0]);\n        } else {\n            elements.push(value);\n        }\n\n        currentBlock = currentBlock.getNextBlock();\n    }\n\n    let code;\n\n    if (elements.length === 0) {\n        code = `${varName} = '';\\n`;\n    } else {\n        code = `${varName} = ${elements.join(' + ')};\\n`;\n    }\n\n    return code;\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.text_length = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('length of %1'),\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'VALUE',\n                },\n            ],\n            output         : 'Number',\n            outputShape    : Blockly.OUTPUT_SHAPE_ROUND,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Text Length Tooltip'),\n            category       : Blockly.Categories.Text,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Text Length'),\n            'description' : translate('Text Length Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.text_length = block => {\n    const text = Blockly.JavaScript.valueToCode(block, 'VALUE', Blockly.JavaScript.ORDER_FUNCTION_CALL) || '\\'\\'';\n\n    const code = `${text}.length`;\n    return [code, Blockly.JavaScript.ORDER_MEMBER];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.text_print = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('print %1'),\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'TEXT',\n                },\n            ],\n            colour           : Blockly.Colours.Binary.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.Binary.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Text Print Tooltip'),\n            category         : Blockly.Categories.Text,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Text Print'),\n            'description' : translate('Text Print Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.text_print = block => {\n    const msg = Blockly.JavaScript.valueToCode(block, 'TEXT', Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n    const code = `window.alert(${msg});\\n`;\n    return code;\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.text_prompt_ext = {\n    init() {\n        this.jsonInit(this.definition());\n\n        // Change shape based on selected type\n        const typeField = this.getField('TYPE');\n        typeField.setValidator(value => {\n            if (value === 'TEXT') {\n                this.setOutputShape(Blockly.OUTPUT_SHAPE_SQUARE);\n                this.setOutput(true, 'String');\n            } else if (value === 'NUMBER') {\n                this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n                this.setOutput(true, 'Number');\n            }\n            this.initSvg();\n            this.render(false);\n            return undefined;\n        });\n    },\n    definition(){\n        return {\n            message0: translate('prompt for %1 with message %2'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'TYPE',\n                    options: [[translate('string'), 'TEXT'], [translate('number'), 'NUMBER']],\n                },\n                {\n                    type: 'input_value',\n                    name: 'TEXT',\n                },\n            ],\n            output         : 'String',\n            outputShape    : Blockly.OUTPUT_SHAPE_SQUARE,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Text Prompt Tooltip'),\n            category       : Blockly.Categories.Text,\n        };\n    },\n    meta(){\n        return {\n            'trade_name' : translate('Text Prompt'),\n            'description': translate('Text Prompt Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.text_prompt_ext = block => {\n    let msg,\n        code;\n\n    if (block.getField('TEXT')) {\n        // Internal message\n        // eslint-disable-next-line no-underscore-dangle\n        msg = Blockly.JavaScript.quote_(block.getFieldValue('TEXT'));\n    } else {\n        // External message\n        msg = Blockly.JavaScript.valueToCode(block, 'TEXT', Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n    }\n\n    if (block.getFieldValue('TYPE') === 'NUMBER') {\n        code = `parseFloat(window.prompt(${msg}))`;\n    } else {\n        code = `window.prompt(${msg})`;\n    }\n\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n","import { minusIconDark } from '../images';\nimport { translate } from '../../../utils/tools';\n\nBlockly.Blocks.text_statement = {\n    init() {\n        this.requiredParentId = '';\n\n        this.jsonInit(this.definition());\n\n        const fieldImage = new Blockly.FieldImage(minusIconDark, 25, 25, '', () => this.onIconClick());\n\n        this.appendDummyInput('REMOVE_ICON').appendField(fieldImage);\n    },\n    definition(){\n        return {\n            message0: '%1',\n            args0   : [\n                {\n                    type: 'input_value',\n                    name: 'TEXT',\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessGray.colour,\n            colourSecondary  : Blockly.Colours.BinaryLessGray.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessGray.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n            tooltip          : translate('Text Statement Tooltip'),\n            category         : Blockly.Categories.Text,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Text Statement'),\n            'description' : translate('Text Statement Description'),\n        };\n    },\n    onIconClick() {\n        if (!this.workspace || this.isInFlyout) {\n            return;\n        }\n\n        this.unplug(true);\n        this.dispose();\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        const surroundParent = this.getSurroundParent();\n        if (event.type === Blockly.Events.END_DRAG) {\n            if (!this.requiredParentId && surroundParent.type === 'text_join') {\n                this.requiredParentId = surroundParent.id;\n            } else if (!surroundParent || surroundParent.id !== this.requiredParentId) {\n                Blockly.Events.disable();\n                this.unplug(false);\n\n                const parentBlock = this.workspace.getAllBlocks().find(block => block.id === this.requiredParentId);\n\n                if (parentBlock) {\n                    const parentConnection = parentBlock.getLastConnectionInStatement('STACK');\n                    parentConnection.connect(this.previousConnection);\n                } else {\n                    this.dispose();\n                }\n                Blockly.Events.enable();\n            }\n        }\n    },\n};\n\nBlockly.JavaScript.text_statement = block => {\n    const code = Blockly.JavaScript.valueToCode(block, 'TEXT') || '';\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import { translate } from '../../../utils/lang/i18n';\n\nBlockly.Blocks.text_trim = {\n    init() {\n        this.jsonInit(this.definition());\n    },\n    definition(){\n        return {\n            message0: translate('trim spaces from %1 of %2'),\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'MODE',\n                    options: [\n                        [translate('both sides'), 'BOTH'],\n                        [translate('left side'), 'LEFT'],\n                        [translate('right side'), 'RIGHT'],\n                    ],\n                },\n                {\n                    type: 'input_value',\n                    name: 'TEXT',\n                },\n            ],\n            output         : 'String',\n            outputShape    : Blockly.OUTPUT_SHAPE_SQUARE,\n            colour         : Blockly.Colours.Binary.colour,\n            colourSecondary: Blockly.Colours.Binary.colourSecondary,\n            colourTertiary : Blockly.Colours.Binary.colourTertiary,\n            tooltip        : translate('Text Trim Tooltip'),\n            category       : Blockly.Categories.Text,\n        };\n    },\n    meta(){\n        return {\n            'display_name': translate('Text Trim'),\n            'description' : translate('Text Trim Description'),\n        };\n    },\n};\n\nBlockly.JavaScript.text_trim = block => {\n    const operators = {\n        LEFT : '.replace(/^[\\\\s\\\\xa0]+/, \\'\\')',\n        RIGHT: '.replace(/[\\\\s\\\\xa0]+$/, \\'\\')',\n        BOTH : '.trim()',\n    };\n\n    const operator = operators[block.getFieldValue('MODE')];\n    const text = Blockly.JavaScript.valueToCode(block, 'TEXT', Blockly.JavaScript.ORDER_MEMBER) || '\\'\\'';\n\n    const code = `${text}${operator}`;\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n","/* eslint-disable func-names, no-underscore-dangle */\nimport config from '../../constants';\n\nBlockly.Block.prototype.getDisplayName = function() {\n    if (this.meta) {\n        const block_meta = this.meta();\n        return block_meta && block_meta.display_name;\n    }\n    return this.type;\n};\n\nBlockly.Block.prototype.getSiblings = function() {\n    const siblings = [this];\n    ['getPreviousBlock', 'getNextBlock'].forEach(functionName => {\n        let block = this[functionName]();\n        while (block !== null) {\n            const parent = this.getParent();\n            if (parent && parent.id === block.id) {\n                break;\n            }\n\n            siblings.push(block);\n            block = block[functionName]();\n        }\n    });\n    return siblings;\n};\n\nBlockly.Block.prototype.getChildByType = function(type) {\n    return this.getDescendants().find(child => child.type === type);\n};\n\nBlockly.Block.prototype.getChildFieldValue = function(childType, childField) {\n    const childBlock = this.getChildByType(childType);\n    if (childBlock) {\n        const value = childBlock.getFieldValue(childField);\n        return value;\n    }\n    return null;\n};\n\nBlockly.Block.prototype.childValueToCode = function(childType, childField) {\n    const childBlock = this.getChildByType(childType);\n    return childBlock && Blockly.JavaScript.valueToCode(childBlock, childField, Blockly.JavaScript.ORDER_ATOMIC);\n};\n\nBlockly.Block.prototype.getBlocksInStatement = function(statementInputName) {\n    const blocksInStatement = [];\n    const firstBlock = this.getInputTargetBlock(statementInputName);\n\n    if (firstBlock) {\n        return firstBlock.getSiblings();\n    }\n    return blocksInStatement;\n};\n\nBlockly.Block.prototype.getLastConnectionInStatement = function(statementInputName) {\n    const firstBlockInStack = this.getInputTargetBlock(statementInputName);\n    if (firstBlockInStack) {\n        return firstBlockInStack.lastConnectionInStack();\n    }\n    const statementInput = this.getInput(statementInputName);\n    return statementInput.connection;\n};\n\nBlockly.Block.prototype.isDescendantOf = function(type) {\n    let parentBlock = this.getParent();\n    while (parentBlock !== null) {\n        if (parentBlock.type === type) {\n            return true;\n        }\n        parentBlock = parentBlock.getParent();\n    }\n    return false;\n};\n\nBlockly.Block.prototype.getTopParent = function() {\n    let parent = this.getParent();\n    while (parent !== null) {\n        const nextParent = parent.getParent();\n        if (!nextParent) {\n            return parent;\n        }\n        parent = nextParent;\n    }\n    return null;\n};\n\nBlockly.Block.getDimensions = function(block_node) {\n    // eslint-disable-next-line\n    const options = new Blockly.Options({ media: `${__webpack_public_path__}media/` });\n    const fragment = document.createDocumentFragment();\n    const el_injection_div = document.createElement('div');\n\n    fragment.appendChild(el_injection_div);\n\n    // Create a headless workspace to calculate xmlList block dimensions\n    const svg = Blockly.createDom_(el_injection_div, options);\n    const workspace = Blockly.createMainWorkspace_(svg, options, false, false);\n\n    const block = Blockly.Xml.domToBlock(block_node, workspace);\n    const block_hw = block.getHeightWidth();\n\n    workspace.dispose();\n\n    return block_hw;\n};\nBlockly.Block.prototype.isMainBlock = function() {\n    return config.mainBlocks.some(block_type => block_type === this.type);\n};\n\nBlockly.Block.prototype.isIndependentBlock = function() {\n    const { INDEPEDENT_BLOCKS } = config;\n    return INDEPEDENT_BLOCKS.some(block_type => block_type === this.type);\n};\n","import { translate } from '../../utils/lang/i18n';\n\n/* eslint-disable func-names, no-underscore-dangle */\n\n// deriv-bot: Blockly value, Scratch resets this to 0, req for correct spacing in flyout.\nBlockly.BlockSvg.TAB_WIDTH = 8;\n\n/**\n * Set whether the block is disabled or not.\n * @param {boolean} disabled True if disabled.\n * deriv-bot: Call updateDisabled() when setDisabled is called.\n */\nBlockly.BlockSvg.prototype.setDisabled = function(disabled) {\n    if (this.disabled !== disabled) {\n        Blockly.BlockSvg.superClass_.setDisabled.call(this, disabled);\n        if (this.rendered) {\n            this.updateDisabled();\n        }\n    }\n};\n\n/**\n * Enable or disable a block.\n */\nBlockly.BlockSvg.prototype.updateDisabled = function() {\n    if (this.disabled || this.getInheritedDisabled()) {\n        const added = Blockly.utils.addClass(/** @type {!Element} */ (this.svgGroup_), 'blocklyDisabled');\n        if (added) {\n            this.svgPath_.setAttribute('fill', `url(#${this.workspace.options.disabledPatternId})`);\n        }\n    } else {\n        const removed = Blockly.utils.removeClass(/** @type {!Element} */ (this.svgGroup_), 'blocklyDisabled');\n        if (removed) {\n            this.updateColour();\n        }\n    }\n    const children = this.getChildren(false);\n    children.forEach(child => {\n        child.updateDisabled();\n    });\n};\n\n/**\n * Show the context menu for this block.\n * @param {!Event} e Mouse event.\n * @private\n * deriv-bot: Restore contextMenu options from Blockly unavailable in Scratch\n */\nBlockly.BlockSvg.prototype.showContextMenu_ = function(e) {\n    if (this.workspace.options.readOnly || !this.contextMenu) {\n        return;\n    }\n    // Save the current block in a variable for use in closures.\n    const block = this;\n    const menuOptions = [];\n\n    if (this.isDeletable() && this.isMovable() && !block.isInFlyout) {\n        menuOptions.push(Blockly.ContextMenu.blockDuplicateOption(block, e));\n\n        if (this.isEditable() && this.workspace.options.comments) {\n            menuOptions.push(Blockly.ContextMenu.blockCommentOption(block));\n        }\n\n        menuOptions.push(Blockly.ContextMenu.blockDeleteOption(block));\n    } else if (this.parentBlock_ && this.isShadow_) {\n        this.parentBlock_.showContextMenu_(e);\n        return;\n    }\n\n    // Option to collapse/expand block.\n    if (this.workspace.options.collapse) {\n        if (this.collapsed_) {\n            const expandOption = { enabled: true };\n            expandOption.text = translate('Expand Block');\n            expandOption.callback = function() {\n                block.setCollapsed(false);\n            };\n            menuOptions.push(expandOption);\n        } else {\n            const collapseOption = { enabled: true };\n            collapseOption.text = translate('Collapse Block');\n            collapseOption.callback = function() {\n                block.setCollapsed(true);\n            };\n            menuOptions.push(collapseOption);\n        }\n    }\n\n    // Option to disable/enable block.\n    if (this.workspace.options.disable) {\n        const disableOption = {\n            text   : this.disabled ? translate('Enable Block') : translate('Disable Block'),\n            enabled: !this.getInheritedDisabled(),\n            callback() {\n                const group = Blockly.Events.getGroup();\n\n                if (!group) {\n                    Blockly.Events.setGroup(true);\n                }\n\n                block.setDisabled(!block.disabled);\n\n                if (!group) {\n                    Blockly.Events.setGroup(false);\n                }\n            },\n        };\n        menuOptions.push(disableOption);\n\n        // Allow the block to add or modify menuOptions.\n        if (this.customContextMenu) {\n            this.customContextMenu(menuOptions);\n        }\n\n        Blockly.ContextMenu.show(e, menuOptions, this.RTL);\n        Blockly.ContextMenu.currentBlock = this;\n    }\n};\n","Blockly.Colours.Binary = {\n    colour         : '#dedede',\n    colourSecondary: '#e2e2e2',\n    colourTertiary : '#bababa',\n};\n\nBlockly.Colours.BinaryLessGray = {\n    colour         : '#f3f3f3',\n    colourSecondary: '#e2e2e2',\n    colourTertiary : '#bababa',\n};\n\nBlockly.Colours.BinaryPurple = {\n    colour         : '#dedede',\n    colourSecondary: '#e2e2e2',\n    colourTertiary : '#bababa',\n};\n\nBlockly.Colours.BinaryLessPurple = {\n    colour         : '#dedede',\n    colourSecondary: '#e2e2e2',\n    colourTertiary : '#bababa',\n};\n\nBlockly.Colours.BinaryProcedures = {\n    colour         : '#1876d2',\n    colourSecondary: '#0d47a1',\n    colourTertiary : '#0d47a1',\n};\n","import { translate } from '../../utils/lang/i18n';\n\n/**\n * ENUM for categories.\n * @const\n */\nBlockly.Categories = {\n    'Trade_Definition': translate('trade_parameters'),\n    'Before_Purchase' : translate('purchase_conditions'),\n    'During_Purchase' : translate('sell_conditions'),\n    'After_Purchase'  : translate('trade_results'),\n    'Mathematical'    : translate('math'),\n    'Logic'           : translate('logic'),\n    'Text'            : translate('text'),\n    'Variables'       : translate('variables'),\n    'Functions'       : translate('custom_functions'),\n    'List'            : translate('lists'),\n    'Indicators'      : translate('indicators'),\n    'Time'            : translate('time'),\n    'Tick_Analysis'   : translate('technical_analysis'),\n    'Candle'          : translate('candle'),\n    'Miscellaneous'   : translate('miscellaneous'),\n    'Loop'            : translate('loops'),\n};\n/**\n * Number of pixels the mouse must move before a drag starts.\n */\nBlockly.DRAG_RADIUS = 3;\n\n/**\n * Number of pixels the mouse must move before a drag/scroll starts from the\n * flyout.  Because the drag-intention is determined when this is reached, it is\n * larger than Blockly.DRAG_RADIUS so that the drag-direction is clearer.\n */\nBlockly.FLYOUT_DRAG_RADIUS = 1;\n","import { translate } from '../../utils/lang/i18n';\n\n/* eslint-disable func-names, no-underscore-dangle */\n\n/**\n * Construct the blocks required by the flyout for the variable category.\n * @param {!Blockly.Workspace} workspace The workspace containing variables.\n * @return {!Array.<!Element>} Array of XML block elements.\n */\nBlockly.DataCategory = function(workspace) {\n    const variableModelList = workspace.getVariablesOfType('');\n    let xmlList = [];\n    \n    // `Create Variable`-button\n    Blockly.DataCategory.addCreateButton(xmlList, workspace);\n\n    const block_types = ['variables_set', 'variables_get', 'math_change'];\n    xmlList = xmlList.concat(Blockly.DataCategory.search(variableModelList, block_types));\n\n    return xmlList;\n};\n\nBlockly.DataCategory.search = function(variableModelList){\n    const xmlList = [];\n    if (variableModelList.length > 0) {\n        const generateVariableFieldXmlString = variableModel => {\n            // The variable name may be user input, so it may contain characters that\n            // need to be escaped to create valid XML.\n            const escapedText = `<field name=\"VAR\" id=\"${variableModel.getId()}\" variabletype=\"${goog.string.htmlEscape(\n                variableModel.type\n            )}\">${goog.string.htmlEscape(variableModel.name)}</field>`;\n            return escapedText;\n        };\n\n        const firstVariable = variableModelList[0];\n\n        // Create 'Set `var` to'-block\n        if (Blockly.Blocks.variables_set) {\n            const gap = Blockly.Blocks.math_change ? 8 : 24;\n            const setBlockText = `<xml><block type=\"variables_set\" gap=\"${gap}\">${generateVariableFieldXmlString(\n                firstVariable\n            )}</block></xml>`;\n            const setBlock = Blockly.Xml.textToDom(setBlockText).firstChild;\n            xmlList.push(setBlock);\n        }\n\n        // Create 'Change `var` by `1`'-block\n        if (Blockly.Blocks.math_change) {\n            const gap = Blockly.Blocks.variables_get ? 20 : 8;\n            const changeBlockText = `<xml><block type=\"math_change\" gap=\"${gap}\">${generateVariableFieldXmlString(\n                firstVariable\n            )}<value name=\"DELTA\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></xml>`;\n            const changeBlock = Blockly.Xml.textToDom(changeBlockText).firstChild;\n            xmlList.push(changeBlock);\n        }\n\n        // Create `variable_get` block for each variable\n        if (Blockly.Blocks.variables_get) {\n            variableModelList.sort(Blockly.VariableModel.compareByName);\n\n            variableModelList.forEach(variable => {\n                const getBlockText = `<xml><block type=\"variables_get\">${generateVariableFieldXmlString(\n                    variable\n                )}</block></xml>`;\n                const getBlock = Blockly.Xml.textToDom(getBlockText).firstChild;\n                xmlList.push(getBlock);\n            });\n        }\n    }\n\n    return xmlList;\n};\n\n/**\n * Construct a create variable button and push it to the xmlList.\n * @param {!Array.<!Element>} xmlList Array of XML block elements.\n * @param {Blockly.Workspace} workspace Workspace to register callback to.\n * deriv-bot: We only use a single type of variable, so `type` arg was removed.\n */\nBlockly.DataCategory.addCreateButton = function(xmlList, workspace) {\n    const buttonXml = goog.dom.createDom('button');\n    // Set default msg, callbackKey, and callback values for type 'VARIABLE'\n    const msg = translate('Create variable');\n    const callbackKey = 'CREATE_VARIABLE';\n    const callback = function(button) {\n        const buttonWorkspace = button.getTargetWorkspace();\n        Blockly.Variables.createVariable(buttonWorkspace, null, '');\n        buttonWorkspace.toolbox_.showCategory_('Variables');\n    };\n\n    buttonXml.setAttribute('text', msg);\n    buttonXml.setAttribute('callbackKey', callbackKey);\n    workspace.registerButtonCallback(callbackKey, callback);\n    xmlList.push(buttonXml);\n};\n","/* eslint-disable func-names, no-underscore-dangle */\nBlockly.FieldDropdown.prototype.updateOptions = function(options, opt_default = null, should_trigger_event = true) {\n    Blockly.Events.disable();\n\n    const previous_value    = this.getValue();\n    const has_default_value = opt_default && options.findIndex(item => item[1] === opt_default) !== -1;\n\n    this.menuGenerator_ = options;\n\n    if (has_default_value) {\n        // Set default value if available in new options.\n        this.setValue('');\n        this.setValue(opt_default);\n    } else if (options.length > 0) {\n        // Default to first if option isn't available.\n        this.setValue('');\n        this.setValue(this.menuGenerator_[0][1]);\n    }\n\n    Blockly.Events.enable();\n\n    if (should_trigger_event) {\n        const event = new Blockly.Events.BlockChange(this.sourceBlock_, 'field', this.name, previous_value, this.getValue());\n\n        Blockly.Events.fire(event);\n    }\n};\n","/* eslint-disable func-names, no-underscore-dangle */\n/**\n * Class for an image on a block.\n * deriv-bot: Blockly implementation vs. Scratch for click handlers\n * @param {string} src The URL of the image.\n * @param {number} width Width of the image.\n * @param {number} height Height of the image.\n * @param {string=} optAlt Optional alt text for when block is collapsed.\n * @param {Function=} optOnClick Optional function to be called when the image\n *     is clicked.  If optOnClick is defined, optAlt must also be defined.\n * @param {boolean=} optFlipRtl Whether to flip the icon in RTL.\n * @extends {Blockly.Field}\n * @constructor\n */\nBlockly.FieldImage = function(src, width, height, optAlt, optOnClick, optFlipRtl) {\n    this.sourceBlock_ = null;\n\n    // Ensure height and width are numbers.  Strings are bad at math.\n    this.height_ = Number(height);\n    this.width_ = Number(width);\n    this.size_ = new goog.math.Size(this.width_, this.height_);\n    this.flipRtl_ = optFlipRtl;\n    this.tooltip_ = '';\n    this.setValue(src);\n    this.setText(optAlt);\n\n    if (typeof optOnClick === 'function') {\n        this.clickHandler_ = optOnClick;\n    }\n};\ngoog.inherits(Blockly.FieldImage, Blockly.Field);\n\n/**\n * Construct a FieldImage from a JSON arg object,\n * dereferencing any string table references.\n * @param {!Object} options A JSON object with options (src, width, height,\n *    alt, and flipRtl).\n * @return {!Blockly.FieldImage} The new field instance.\n * @package\n * @nocollapse\n */\nBlockly.FieldImage.fromJson = function(options) {\n    const src = Blockly.utils.replaceMessageReferences(options.src);\n    const width = Number(Blockly.utils.replaceMessageReferences(options.width));\n    const height = Number(Blockly.utils.replaceMessageReferences(options.height));\n    const alt = Blockly.utils.replaceMessageReferences(options.alt);\n    const flipRtl = !!options.flipRtl;\n    return new Blockly.FieldImage(src, width, height, alt, null, flipRtl);\n};\n\n/**\n * Editable fields are saved by the XML renderer, non-editable fields are not.\n */\nBlockly.FieldImage.prototype.EDITABLE = false;\n\n/**\n * Install this image on a block.\n */\nBlockly.FieldImage.prototype.init = function() {\n    if (this.fieldGroup_) {\n        // Image has already been initialized once.\n        return;\n    }\n    // Build the DOM.\n    /** @type {SVGElement} */\n    this.fieldGroup_ = Blockly.utils.createSvgElement('g', {}, null);\n    if (!this.visible_) {\n        this.fieldGroup_.style.display = 'none';\n    }\n    /** @type {SVGElement} */\n    this.imageElement_ = Blockly.utils.createSvgElement(\n        'image',\n        {\n            height: `${this.height_}px`,\n            width : `${this.width_}px`,\n        },\n        this.fieldGroup_\n    );\n    this.setValue(this.src_);\n    this.setText(this.text_);\n    this.sourceBlock_.getSvgRoot().appendChild(this.fieldGroup_);\n\n    if (this.tooltip_) {\n        this.imageElement_.tooltip = this.tooltip_;\n    } else {\n        // Configure the field to be transparent with respect to tooltips.\n        this.setTooltip(this.sourceBlock_);\n    }\n    Blockly.Tooltip.bindMouseEvents(this.imageElement_);\n\n    this.maybeAddClickHandler_();\n};\n\n/**\n * Dispose of all DOM objects belonging to this text.\n */\nBlockly.FieldImage.prototype.dispose = function() {\n    goog.dom.removeNode(this.fieldGroup_);\n    this.fieldGroup_ = null;\n    this.imageElement_ = null;\n};\n\n/**\n * Bind events for a mouse down on the image, but only if a click handler has\n * been defined.\n * @private\n */\nBlockly.FieldImage.prototype.maybeAddClickHandler_ = function() {\n    if (this.clickHandler_) {\n        this.mouseDownWrapper_ = Blockly.bindEventWithChecks_(this.fieldGroup_, 'mousedown', this, this.clickHandler_);\n        // pxtblockly & deriv-bot: if a click handler is attached to the image, change the cursor to a pointer\n        if (this.imageElement_) this.imageElement_.style.cursor = 'pointer';\n    }\n};\n\n/**\n * Change the tooltip text for this field.\n * @param {string|!Element} newTip Text for tooltip or a parent element to\n *     link to for its tooltip.\n */\nBlockly.FieldImage.prototype.setTooltip = function(newTip) {\n    this.tooltip_ = newTip;\n    if (this.imageElement_) {\n        this.imageElement_.tooltip = newTip;\n    }\n};\n\n/**\n * Get the source URL of this image.\n * @return {string} Current text.\n * @override\n */\nBlockly.FieldImage.prototype.getValue = function() {\n    return this.src_;\n};\n\n/**\n * Set the source URL of this image.\n * @param {?string} src New source.\n * @override\n */\nBlockly.FieldImage.prototype.setValue = function(src) {\n    if (src === null) {\n        // No change if null.\n        return;\n    }\n    this.src_ = src;\n    if (this.imageElement_) {\n        this.imageElement_.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', src || '');\n    }\n};\n\n/**\n * Get whether to flip this image in RTL\n * @return {boolean} True if we should flip in RTL.\n */\nBlockly.FieldImage.prototype.getFlipRtl = function() {\n    return this.flipRtl_;\n};\n\n/**\n * Set the alt text of this image.\n * @param {?string} alt New alt text.\n * @override\n */\nBlockly.FieldImage.prototype.setText = function(alt) {\n    if (alt === null) {\n        // No change if null.\n        return;\n    }\n    this.text_ = alt;\n    if (this.imageElement_) {\n        this.imageElement_.setAttribute('alt', alt || '');\n    }\n};\n\n/**\n * Images are fixed width, no need to render.\n * @private\n */\nBlockly.FieldImage.prototype.render_ = function() {\n    // NOP\n};\n\n/**\n * Images are fixed width, no need to render even if forced.\n */\nBlockly.FieldImage.prototype.forceRerender = function() {\n    // NOP\n};\n\n/**\n * Images are fixed width, no need to update.\n * @private\n */\nBlockly.FieldImage.prototype.updateWidth = function() {\n    // NOP\n};\n\n/**\n * If field click is called, and click handler defined,\n * call the handler.\n */\nBlockly.FieldImage.prototype.showEditor_ = function() {\n    if (this.clickHandler_) {\n        this.clickHandler_(this);\n    }\n};\n\nBlockly.Field.register('field_image', Blockly.FieldImage);\n","/* eslint-disable no-underscore-dangle */\n/**\n * Create a copy of this block on the workspace.\n * @param {!Blockly.BlockSvg} originalBlock The block to copy from the flyout.\n * @return {Blockly.BlockSvg} The newly created block, or null if something\n *     went wrong with deserialization.\n * @package\n */\nBlockly.Flyout.prototype.createBlock = function(event, originalBlock) {\n    Blockly.Events.disable();\n\n    const variablesBeforeCreation = this.targetWorkspace_.getAllVariables();\n\n    this.targetWorkspace_.setResizesEnabled(false);\n\n    let newBlock = null;\n\n    try {\n        newBlock = this.placeNewBlock_(event, originalBlock);\n        // Close the flyout.\n        Blockly.hideChaff();\n    } finally {\n        Blockly.Events.enable();\n    }\n  \n    const newVariables = Blockly.Variables.getAddedVariables(this.targetWorkspace_, variablesBeforeCreation);\n  \n    if (Blockly.Events.isEnabled()) {\n        Blockly.Events.setGroup(true);\n        Blockly.Events.fire(new Blockly.Events.Create(newBlock));\n        // Fire a VarCreate event for each (if any) new variable created.\n        for (let i = 0; i < newVariables.length; i++) {\n            const thisVariable = newVariables[i];\n            Blockly.Events.fire(new Blockly.Events.VarCreate(thisVariable));\n        }\n    }\n\n    if (this.autoClose) {\n        this.hide();\n    }\n\n    Blockly.derivWorkspace.toolbox_.clearSelection();\n    newBlock.isInFlyout = false;\n\n    return newBlock;\n};\n\n/**\n * Copy a block from the flyout to the workspace and position it correctly.\n * @param {!Blockly.Block} oldBlock The flyout block to copy.\n * @return {!Blockly.Block} The new block in the main workspace.\n * @private\n */\nBlockly.Flyout.prototype.placeNewBlock_ = function(event, oldBlock) {\n    const targetWorkspace = this.targetWorkspace_;\n    const svgRootOld = oldBlock.getSvgRoot();\n\n    if (!svgRootOld) {\n        throw new Error('oldBlock is not rendered.');\n    }\n  \n    // Create the new block by cloning the block in the flyout (via XML).\n    const xml = Blockly.Xml.blockToDom(oldBlock);\n    // The target workspace would normally resize during domToBlock, which will\n    // lead to weird jumps.  Save it for terminateDrag.\n    targetWorkspace.setResizesEnabled(false);\n  \n    // Using domToBlock instead of domToWorkspace means that the new block will be\n    // placed at position (0, 0) in main workspace units.\n    const block = Blockly.Xml.domToBlock(xml, targetWorkspace);\n    const svgRootNew = block.getSvgRoot();\n\n    if (!svgRootNew) {\n        throw new Error('block is not rendered.');\n    }\n  \n    // The offset in pixels between the main workspace's origin and the upper left\n    // corner of the injection div.\n    const mainOffsetPixels = targetWorkspace.getOriginOffsetInPixels();\n  \n    // The offset in pixels between the flyout workspace's origin and the upper\n    // left corner of the injection div.\n    const flyoutOffsetPixels = this.workspace_.getOriginOffsetInPixels();\n  \n    // The position of the old block in pixels relative to the flyout\n    // workspace's origin.\n    const oldBlockPosPixels = new goog.math.Coordinate(event.clientX - 50 , event.clientY - 20);\n  \n    // The position of the old block in pixels relative to the upper left corner\n    // of the injection div.\n    const oldBlockOffsetPixels = goog.math.Coordinate.sum(flyoutOffsetPixels, oldBlockPosPixels);\n  \n    // The position of the old block in pixels relative to the origin of the\n    // main workspace.\n    const finalOffsetPixels = goog.math.Coordinate.difference(oldBlockOffsetPixels, mainOffsetPixels);\n  \n    // The position of the old block in main workspace coordinates.\n    const finalOffsetMainWs = finalOffsetPixels.scale(1 / targetWorkspace.scale);\n  \n    block.moveBy(finalOffsetMainWs.x, finalOffsetMainWs.y);\n    return block;\n};\n","/* eslint-disable no-underscore-dangle */\n/**\n * Update this gesture to record whether a block is being dragged from the\n * flyout. This function should be called on a mouse/touch move event the first time the\n * drag radius is exceeded.  It should be called no more than once per gesture.\n * If a block should be dragged from the flyout this function creates the new\n * block on the main workspace and updates targetBlock_ and startWorkspace_.\n * @return {boolean} True if a block is being dragged from the flyout.\n * @private\n */\nBlockly.Gesture.prototype.updateIsDraggingFromFlyout_ = function() {\n    // Disabled blocks may not be dragged from the flyout.\n    if (this.targetBlock_.disabled) {\n        return false;\n    }\n    \n    if (!this.flyout_.isScrollable() ||\n        this.flyout_.isDragTowardWorkspace(this.currentDragDeltaXY_)) {\n        this.startWorkspace_ = this.flyout_.targetWorkspace_;\n        this.startWorkspace_.updateScreenCalculationsIfScrolled();\n\n        // Start the event group now, so that the same event group is used for block\n        // creation and block dragging.\n        if (!Blockly.Events.getGroup()) {\n            Blockly.Events.setGroup(true);\n        }\n\n        // The start block is no longer relevant, because this is a drag.\n        this.startBlock_ = null;\n        this.targetBlock_ = this.flyout_.createBlock(this.mostRecentEvent_, this.targetBlock_);\n        this.targetBlock_.select();\n        return true;\n    }\n    return false;\n};\n","/* eslint-disable func-names, no-underscore-dangle */\n/**\n * Render the icon.\n * @param {number} cursorX Horizontal offset at which to position the icon.\n * @return {number} Horizontal offset for next item to draw.\n */\nBlockly.Icon.prototype.renderIcon = function(cursorX) {\n    if (this.collapseHidden && this.block_.isCollapsed()) {\n        this.iconGroup_.setAttribute('display', 'none');\n        return cursorX;\n    }\n\n    this.iconGroup_.setAttribute('display', 'block');\n\n    let newCursorX = cursorX;\n\n    const TOP_MARGIN = 9;\n    const width = this.SIZE;\n\n    if (this.block_.RTL) {\n        newCursorX -= width;\n    }\n\n    this.iconGroup_.setAttribute('transform', `translate(${newCursorX},${TOP_MARGIN})`);\n    this.computeIconLocation();\n\n    if (this.block_.RTL) {\n        newCursorX -= Blockly.BlockSvg.SEP_SPACE_X;\n    } else {\n        newCursorX += width + Blockly.BlockSvg.SEP_SPACE_X;\n    }\n\n    return newCursorX;\n};\n","/* eslint-disable func-names, no-underscore-dangle */\nimport { translate } from '../../utils/lang/i18n';\n\n/**\n * Construct the blocks required by the flyout for the procedure category.\n * @param {!Blockly.Workspace} workspace The workspace containing procedures.\n * @return {!Array.<!Element>} Array of XML block elements.\n */\nBlockly.Procedures.flyoutCategory = function(workspace) {\n    let xmlList = [];\n\n    if (Blockly.Blocks.procedures_defnoreturn) {\n        // <block type=\"procedures_defnoreturn\" gap=\"16\">\n        //     <field name=\"NAME\">do something</field>\n        // </block>\n        const block = document.createElement('block');\n        block.setAttribute('type', 'procedures_defnoreturn');\n        block.setAttribute('gap', 16);\n\n        // TEMP\n        const nameField = document.createElement('field');\n        nameField.setAttribute('name', 'NAME');\n        nameField.appendChild(document.createTextNode(translate('do something')));\n\n        block.appendChild(nameField);\n        xmlList.push(block);\n    }\n\n    if (Blockly.Blocks.procedures_defreturn) {\n        // <block type=\"procedures_defreturn\" gap=\"16\">\n        //     <field name=\"NAME\">do something</field>\n        // </block>\n        const block = document.createElement('block');\n        block.setAttribute('type', 'procedures_defreturn');\n        block.setAttribute('gap', 16);\n\n        const nameField = document.createElement('field');\n        nameField.setAttribute('name', 'NAME');\n        nameField.appendChild(document.createTextNode(translate('do something')));\n\n        block.appendChild(nameField);\n        xmlList.push(block);\n    }\n\n    if (Blockly.Blocks.procedures_ifreturn) {\n        // <block type=\"procedures_ifreturn\" gap=\"16\"></block>\n        const block = document.createElement('block');\n        block.setAttribute('type', 'procedures_ifreturn');\n        block.setAttribute('gap', 16);\n        xmlList.push(block);\n    }\n\n    if (xmlList.length) {\n        // Add slightly larger gap between system blocks and user calls.\n        xmlList[xmlList.length - 1].setAttribute('gap', 24);\n    }\n\n    const tuple = Blockly.Procedures.allProcedures(workspace);\n    xmlList = xmlList.concat(Blockly.Procedures.populateDynamicProcedures(tuple));\n    return xmlList;\n};\n\nBlockly.Procedures.populateDynamicProcedures = function(tuple) {\n    let xmlList = [];\n\n    const populateProcedures = (procedureList, templateName) => {\n        const xml = [];\n\n        if (!procedureList){\n            return xml;\n        }\n\n        for (let i = 0; i < procedureList.length; i++) {\n            const name = procedureList[i][0];\n            const args = procedureList[i][1];\n    \n            // <block type=\"procedures_callnoreturn\" gap=\"16\">\n            //   <mutation name=\"do something\">\n            //     <arg name=\"x\"></arg>\n            //   </mutation>\n            // </block>\n            const block = document.createElement('block');\n            block.setAttribute('type', templateName);\n            block.setAttribute('gap', 16);\n\n            const mutation = document.createElement('mutation');\n            mutation.setAttribute('name', name);\n            block.appendChild(mutation);\n    \n            args.forEach(argumentName => {\n                const arg = document.createElement('arg');\n                arg.setAttribute('name', argumentName);\n                mutation.appendChild(arg);\n            });\n    \n            xml.push(block);\n        }\n\n        return xml;\n    };\n\n    xmlList = xmlList.concat(populateProcedures(tuple[0], 'procedures_callnoreturn'));\n    xmlList = xmlList.concat(populateProcedures(tuple[1], 'procedures_callreturn'));\n\n    return xmlList;\n};\n\n/**\n * Find the definition block for the named procedure.\n * @param {string} name Name of procedure.\n * @param {!Blockly.Workspace} workspace The workspace to search.\n * @return {Blockly.Block} The procedure definition block, or null not found.\n */\nBlockly.Procedures.getDefinition = function(name, workspace) {\n    // Assume that a procedure definition is a top block.\n    const blocks = workspace.getTopBlocks(false);\n    for (let i = 0; i < blocks.length; i++) {\n        if (blocks[i].getProcedureDef) {\n            const tuple = blocks[i].getProcedureDef();\n            if (tuple && Blockly.Names.equals(tuple[0], name)) {\n                return blocks[i];\n            }\n        }\n    }\n    return null;\n};\n\n// Scratch has a broken version where they return `false` if Blockly.Names.equals(procName[0], name).\n// https://github.com/LLK/scratch-blocks/pull/1930\nBlockly.Procedures.isNameUsed = function(name, workspace, optExclude) {\n    const blocks = workspace.getAllBlocks(false);\n    // Iterate through every block and check the name.\n    return blocks.some(block => {\n        if (block !== optExclude && block.getProcedureDef) {\n            const procName = block.getProcedureDef();\n            return Blockly.Names.equals(procName[0], name);\n        }\n        return false;\n    });\n};\n\n/**\n * Move the workspace based on the most recent mouse movements.\n * @param {!goog.math.Coordinate} currentDragDeltaXY How far the pointer has\n *     moved from the position at the start of the drag, in pixel coordinates.\n * @package\n */\nBlockly.WorkspaceDragger.prototype.drag = function(currentDragDeltaXY) {\n    if (this.workspace_.isFlyout) {\n        return;\n    }\n\n    const metrics = this.startDragMetrics_;\n    const newXY = goog.math.Coordinate.sum(this.startScrollXY_, currentDragDeltaXY);\n\n    // Bound the new XY based on workspace bounds.\n    let x = Math.min(newXY.x, -metrics.contentLeft);\n    let y = Math.min(newXY.y, -metrics.contentTop);\n\n    x = Math.max(x, metrics.viewWidth - metrics.contentLeft - metrics.contentWidth);\n    y = Math.max(y, metrics.viewHeight - metrics.contentTop - metrics.contentHeight);\n\n    x = -x - metrics.contentLeft;\n    y = -y - metrics.contentTop;\n\n    this.updateScroll_(x, y);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ArrowIcon } from '../../components/Icons.jsx';\nimport { flyout }    from '../../stores';\nimport { translate } from '../../utils/lang/i18n';\n\n/* eslint-disable func-names, no-underscore-dangle */\n\n/**\n * Initializes the toolbox.\n */\nBlockly.Toolbox.prototype.init = function () {\n    const workspace = this.workspace_;\n    const svg = this.workspace_.getParentSvg();\n\n    /**\n     * HTML container for the Toolbox menu.\n     * @type {Element}\n     */\n    this.HtmlDiv = goog.dom.createDom(goog.dom.TagName.DIV, 'toolbox');\n    this.HtmlDiv.setAttribute('dir', workspace.RTL ? 'RTL' : 'LTR');\n\n    // deriv-bot: Create Toolbox header\n    const el_toolbox_header = goog.dom.createDom(goog.dom.TagName.DIV, 'toolbox__header');\n    const el_toolbox_title = goog.dom.createDom(goog.dom.TagName.DIV, 'toolbox__title');\n\n    el_toolbox_title.textContent = translate('Blocks Library');\n    el_toolbox_header.appendChild(el_toolbox_title);\n    this.HtmlDiv.appendChild(el_toolbox_header);\n\n    const el_toolbox_search = goog.dom.createDom(goog.dom.TagName.INPUT, { 'id': 'search_input', 'placeholder': 'Search' });\n\n    this.HtmlDiv.appendChild(el_toolbox_search);\n\n    ['keyup', 'click'].forEach(e => {\n        el_toolbox_search.addEventListener(e, () => {\n            const toolbox = workspace.toolbox_;\n    \n            flyout.setVisibility(false);\n    \n            toolbox.setSelectedItem('search');\n        });\n    });\n\n    svg.parentNode.insertBefore(this.HtmlDiv, svg);\n\n    // Clicking on toolbox closes popups.\n    Blockly.bindEventWithChecks_(this.HtmlDiv, 'mousedown', this, function (e) {\n        // Cancel any gestures in progress.\n        this.workspace_.cancelCurrentGesture();\n\n        if (Blockly.utils.isRightButton(e) || e.target === this.HtmlDiv) {\n            // Close flyout.\n            Blockly.hideChaff(false);\n        } else {\n            // Just close popups.\n            Blockly.hideChaff(true);\n        }\n        Blockly.Touch.clearTouchIdentifier();  // Don't block future drags.\n    }, /* opt_noCaptureIdentifier */ false, /* opt_noPreventDefault */ true);\n\n    this.createFlyout_();\n    this.categoryMenu_ = new Blockly.Toolbox.CategoryMenu(this, this.HtmlDiv);\n    this.populate_(workspace.options.languageTree);\n    this.position();\n};\n\n/**\n * Fill the toolbox with categories and blocks.\n * @param {!Node} newTree DOM tree of blocks.\n * @private\n * deriv-bot: We don't want to `showAll` or `setSelectedItem` here (like in Scratch)\n */\nBlockly.Toolbox.prototype.populate_ = function (newTree) {\n    this.categoryMenu_.populate(newTree);\n};\n\n/**\n * deriv-bot: Show blocks for a specific category in flyout\n * @private\n */\nBlockly.Toolbox.prototype.showCategory_ = function (category_id) {\n    let flyout_content;\n\n    if (category_id === 'search') {\n        let search_term = document.getElementById('search_input').value;\n        const all_variables = this.flyout_.workspace_.getVariablesOfType('');\n        const all_procedures = Blockly.Procedures.allProcedures(Blockly.derivWorkspace);\n\n        if (search_term.length <= 1) {\n            flyout.setVisibility(false);\n            return;\n        }\n\n        flyout_content = {\n            type  : 'search',\n            blocks: [],\n        };\n\n        if (typeof search_term === 'string') {\n            search_term = search_term.trim().toLowerCase();\n            search_term = search_term.split(' ');\n        }\n\n        const blocks = Blockly.Blocks;\n        Object.keys(blocks).forEach(blockKey => {\n            let keywords = ` ${blockKey}`;\n            const block = blocks[blockKey];\n            const block_meta = block.meta instanceof Function && block.meta();\n            const block_definition = block.definition instanceof Function && block.definition();\n\n            if (!block_meta) {\n                return;\n            }\n\n            Object.keys(block_meta).forEach(key => {\n                const meta = block_meta[key];\n                keywords += ` ${meta}`;\n            });\n\n            Object.keys(block_definition).forEach(key => {\n                const definition = block_definition[key];\n\n                if (typeof definition === 'string') {\n                    keywords += ` ${definition}`;\n                } else if (definition instanceof Array) {\n                    definition.forEach(def => {\n                        if (def instanceof Object) {\n                            keywords += !def.type.includes('image') ? ` ${JSON.stringify(def)}` : '';\n                        } else {\n                            keywords += ` ${def}`;\n                        }\n                    });\n                }\n            });\n\n            const block_category = (block_definition && block_definition.category) ||\n                                    (block_meta && block_meta.category);\n            const category =\n                this.categoryMenu_.categories_\n                    .find(menuCategory => menuCategory.id_ === block_category);\n            let contents = category && category.getContents();\n\n            if (typeof contents === 'string') {\n                const fnToApply = this.workspace_.getToolboxCategoryCallback(contents);\n                contents = fnToApply(this.workspace_);\n            }\n\n            if (contents) {\n                search_term.forEach(term => {\n                    if (keywords.toLowerCase().includes(term)) {\n                        const blockContents = contents\n                            .filter(content => content.attributes[0].nodeValue === blockKey);\n\n                        if (blockContents.length && flyout_content.blocks.indexOf(blockContents[0]) === -1) {\n                            flyout_content.blocks.push(blockContents[0]);\n                        }\n\n                    }\n                });\n            }\n        });\n\n        const searched_variables = [];\n        all_variables.forEach(variable => {\n            search_term.forEach(term => {\n                if (variable.name.toLowerCase().includes(term)) {\n                    searched_variables.push(variable);\n                }\n            });\n        });\n\n        const variables_blocks = Blockly.DataCategory.search(searched_variables);\n        /* eslint-disable-next-line consistent-return */\n        const uniqueVarBlocks = variables_blocks.map(variableBlock => {\n            if (flyout_content.blocks.indexOf(variableBlock) === -1){\n                return variableBlock;\n            }\n        });\n        flyout_content.blocks = flyout_content.blocks.concat(uniqueVarBlocks);\n\n        const searched_procedures = {};\n        Object.keys(all_procedures).forEach(key => {\n            search_term.forEach(term => {\n                if (all_procedures[key].length && all_procedures[key][0][0].toLowerCase().includes(term)) {\n                    searched_procedures[key] = all_procedures[key];\n                }\n            });\n        });\n\n        const procedures_blocks = Blockly.Procedures.populateDynamicProcedures(searched_procedures);\n        /* eslint-disable-next-line consistent-return */\n        const uniqueProceBlocks = procedures_blocks.map(procedureBlock => {\n            if (flyout_content.blocks.indexOf(procedureBlock) === -1){\n                return procedureBlock;\n            }\n        });\n        flyout_content.blocks = flyout_content.blocks.concat(uniqueProceBlocks);\n    } else {\n        const selected_category = this.categoryMenu_.categories_.find(category => category.id_ === category_id);\n        flyout_content = selected_category.getContents();\n\n        // Dynamic categories\n        if (typeof flyout_content === 'string') {\n            const fnToApply = this.workspace_.getToolboxCategoryCallback(flyout_content);\n            flyout_content = fnToApply(this.workspace_);\n        }\n    }\n\n    flyout.setContents(flyout_content);\n};\n\n/**\n * Used to determine the css classes for the menu item for this category\n * based on its current state.\n * @private\n * @param {boolean=} selected Indication whether the category is currently selected.\n * @return {string} The css class names to be applied, space-separated.\n * deriv-bot: Custom class names\n */\nBlockly.Toolbox.Category.prototype.getMenuItemClassName_ = function (selected) {\n    const classNames = ['toolbox__item', `toolbox__category--${this.id_}`];\n\n    if (selected) {\n        classNames.push('toolbox__category--selected');\n    }\n\n    return classNames.join(' ');\n};\n\n/**\n * Opens the selected category\n * deriv-bot: Category-specific flyouts + removed opt_shouldScroll\n * @param {Blockly.Toolbox.Category} item The category to select.\n */\nBlockly.Toolbox.prototype.setSelectedItem = function (item) {\n    const category_item = item;\n    if (category_item === 'search'){\n        if (this.selectedItem_) {\n            this.selectedItem_.setSelected(false);\n        }\n        this.selectedItem_ = null;\n        this.showCategory_('search');\n        return;\n    }\n\n    if (this.selectedItem_) {\n        // They selected a different category but one was already open.  Close it.\n        this.selectedItem_.setSelected(false);\n\n        // Selecting the same category will close it.\n        if (\n            category_item &&\n            !category_item.is_category_return_ &&\n            !category_item.has_child_category_ &&\n            this.selectedItem_.id_ === item.id_\n        ) {\n            this.selectedItem_ = null;\n            if (flyout.is_visible) {\n                flyout.setVisibility(false);\n            }\n            return;\n        }\n    }\n\n    this.selectedItem_ = item;\n\n    if (!item) {\n        flyout.setVisibility(false);\n    } else {\n        const getCategoryTree = (parent_name, parent_id, colour, children) => {\n            const xml_document = document.implementation.createDocument(null, null, null);\n            const el_xml = xml_document.createElement('xml');\n            const parent_category = xml_document.createElement('category');\n\n            parent_category.setAttribute('name', parent_name);\n            parent_category.setAttribute('id', parent_id);\n            parent_category.setAttribute('is_category_return', true);\n            parent_category.setAttribute('colour', colour);\n\n            const el_separator = xml_document.createElement('sep');\n            const category_nodes = [\n                parent_category,\n                el_separator,\n                ...Array.from(children),\n            ];\n\n            category_nodes.forEach(childNode => el_xml.appendChild(childNode));\n            xml_document.appendChild(el_xml);\n            return el_xml;\n        };\n\n        if (this.selectedItem_.is_category_return_) {\n            // Go up a level if this is a return category\n            const findCategory = (category_collection) => {\n                // Finds a category based on `this.selectedItem_.id_` in the given `category_collection`\n                for (let i = 0; i < category_collection.length; i++) {\n                    const el_category = category_collection[i];\n                    const is_correct_child =\n                        el_category.tagName.toUpperCase() === 'CATEGORY' &&\n                        el_category.getAttribute('id') === this.selectedItem_.id_;\n\n                    if (is_correct_child) {\n                        return el_category;\n                    }\n\n                    const category = findCategory(el_category.children);\n                    if (category) {\n                        return category;\n                    }\n                }\n                return null;\n            };\n\n            const { initial_toolbox_xml } = this.workspace_;\n            const toolboxDom = Blockly.Xml.textToDom(initial_toolbox_xml);\n            const selected_category = findCategory(toolboxDom.children);\n\n            if (selected_category) {\n                const el_parent = selected_category.parentElement;\n\n                if (el_parent.tagName === 'xml') {\n                    flyout.setVisibility(false);\n                    this.workspace_.updateToolbox(initial_toolbox_xml);\n                } else {\n                    const newTree = getCategoryTree(\n                        el_parent.getAttribute('name'),\n                        el_parent.getAttribute('id'),\n                        el_parent.getAttribute('colour'),\n                        el_parent.children,\n                    );\n\n                    flyout.setVisibility(false);\n                    this.workspace_.updateToolbox(newTree);\n                }\n            }\n        } else if (this.selectedItem_.has_child_category_) {\n            // Show categories in toolbox that are descendants of `this.selectedItem_`\n            const newTree = getCategoryTree(\n                this.selectedItem_.name_,\n                this.selectedItem_.id_,\n                this.selectedItem_.colour_,\n                this.selectedItem_.contents_,\n            );\n\n            flyout.setVisibility(false);\n            this.workspace_.updateToolbox(newTree);\n        } else {\n            // Show blocks that belong to this category.\n            this.selectedItem_.setSelected(true);\n            this.showCategory_(this.selectedItem_.id_);\n        }\n    }\n};\n\n/**\n * Update the flyout's contents without closing it.  Should be used in response\n * to a change in one of the dynamic categories, such as variables or\n * procedures.\n * deriv-bot: Calls showAll() in Scratch, we don't want that.\n */\nBlockly.Toolbox.prototype.refreshSelection = function () {};\n\n/**\n * Create the DOM for a category in the toolbox.\n * deriv-bot: Custom class names + injection of description\n */\nBlockly.Toolbox.Category.prototype.createDom = function () {\n    const toolbox = this.parent_.parent_;\n    const el_item = goog.dom.createDom('div', this.getMenuItemClassName_());\n\n    this.item_ = el_item;\n\n    if (this.is_category_return_) {\n        const el_return_arrow = goog.dom.createDom('div', 'toolbox__category-arrow toolbox__category-arrow--back');\n        ReactDOM.render(<ArrowIcon className='arrow' />, el_return_arrow);\n        el_item.appendChild(el_return_arrow);\n    } else {\n        const el_colour = goog.dom.createDom('div', 'toolbox__category-colour');\n        el_item.appendChild(el_colour);\n    }\n\n    const el_label = goog.dom.createDom('div', 'toolbox__label', this.name_);\n    const el_toolbox_text = goog.dom.createDom('div', 'toolbox__category-text');\n\n    this.label_ = el_label;\n    el_toolbox_text.appendChild(el_label);\n\n    if (this.description_) {\n        const el_description = goog.dom.createDom('div', 'toolbox__description', this.description_);\n        el_toolbox_text.appendChild(el_description);\n    }\n\n    el_item.appendChild(el_toolbox_text);\n\n    if (this.has_child_category_) {\n        const el_category_arrow = goog.dom.createDom('div', 'toolbox__category-arrow toolbox__category-arrow--open');\n        ReactDOM.render(<ArrowIcon className='arrow' />, el_category_arrow);\n        el_item.appendChild(el_category_arrow);\n    } else if (this.iconURI_) {\n        // If category has iconURI attribute, it refers to an entry in our bot-sprite.svg\n        const el_icon = goog.dom.createDom('div', { class: 'toolbox__icon' });\n        // eslint-disable-next-line\n        el_icon.innerHTML = `<svg><use xlink:href=\"${__webpack_public_path__}bot-sprite.svg#${this.iconURI_}\"></use></svg>`;\n        el_item.appendChild(el_icon);\n    }\n\n    this.parentHtml_.appendChild(el_item);\n\n    Blockly.bindEvent_(el_item, 'mouseup', toolbox, toolbox.setSelectedItemFactory(this));\n};\n\n/**\n * Get the contents of this category.\n * @return {!Array|string} xmlList List of blocks to show, or a string with the\n * name of a custom category.\n * deriv-bot: Use this.dynamic_ rather than this.custom_ for dynamic categories\n * if we specify this.custom_, parseContents() is never called (see core/toolbox.js),\n * so we don't get extra props we require. See parseContents_\n */\nBlockly.Toolbox.Category.prototype.getContents = function () {\n    return this.custom_ || this.dynamic_ || this.contents_;\n};\n\n/**\n* Set the contents of this category from DOM.\n* @param {Node} domTree DOM tree of blocks.\n* @constructor\n* deriv-bot: Set some extra properties on the Blockly.Toolbox.Category\n*/\nBlockly.Toolbox.Category.prototype.parseContents_ = function (domTree) {\n    this.description_ = domTree.getAttribute('description');\n    this.dynamic_ = domTree.getAttribute('dynamic');\n    this.is_category_return_ = !!domTree.getAttribute('is_category_return');\n\n    domTree.childNodes.forEach(child => {\n        if (child.tagName) {\n            const tag = child.tagName.toUpperCase();\n\n            if (tag === 'CATEGORY') {\n                this.has_child_category_ = true;\n            }\n\n            switch (tag) {\n                case 'BLOCK':\n                case 'SHADOW':\n                case 'LABEL':\n                case 'BUTTON':\n                case 'SEP':\n                case 'TEXT':\n                case 'CATEGORY':\n                    this.contents_.push(child);\n                    break;\n                default:\n                    break;\n            }\n        }\n    });\n};\n\n/**\n * Set the colour of the category's background from a DOM node.\n * @param {Node} node DOM node with \"colour\" and \"secondaryColour\" attribute.\n *     Colours are a hex string or hue on a colour wheel (0-360).\n * deriv-bot: We don't need secondaryColour\n */\nBlockly.Toolbox.Category.prototype.setColour = function (node) {\n    const colour = node.getAttribute('colour');\n\n    if (goog.isString(colour)) {\n        if (colour.match(/^#[0-9a-fA-F]{6}$/)) {\n            this.colour_ = colour;\n        } else {\n            this.colour_ = Blockly.hueToRgb(colour);\n        }\n        this.hasColours_ = true;\n    } else {\n        this.colour_ = '#000000';\n    }\n};\n\n/**\n * Create the DOM for the category menu.\n * deriv-bot: Custom class names\n */\nBlockly.Toolbox.CategoryMenu.prototype.createDom = function () {\n    const className = this.parent_.horizontalLayout_ ?\n        'toolbox__horizontal-category-menu' :\n        'toolbox__category-menu';\n\n    this.table = goog.dom.createDom('div', className);\n    this.parentHtml_.appendChild(this.table);\n};\n\n/**\n * Fill the toolbox with categories and blocks by creating a new\n * {Blockly.Toolbox.Category} for every category tag in the toolbox xml.\n * @param {Node} domTree DOM tree of blocks, or null.\n */\nBlockly.Toolbox.CategoryMenu.prototype.populate = function (domTree, isSubCategory = false) {\n    if (!domTree) {\n        return;\n    }\n\n    // Remove old categories\n    if (!isSubCategory) {\n        this.dispose();\n        this.createDom();\n    }\n\n    domTree.childNodes.forEach(childNode => {\n        const is_category = () => childNode.tagName && childNode.tagName.toUpperCase() === 'CATEGORY';\n        const is_separator = () => childNode.tagName && childNode.tagName.toUpperCase() === 'SEP';\n\n        if (is_category()) {\n            const row_class = childNode.getAttribute('is_category_return') ?\n                'toolbox__category-return' :\n                'toolbox__row';\n            const el_row = goog.dom.createDom('div', { class: row_class });\n\n            // Convert xml web-class attributes to class attributes in el_row\n            const web_classes = childNode.getAttribute('web-class');\n            if (web_classes) {\n                web_classes.split(' ').forEach(className => el_row.classList.add(className));\n            }\n\n            const toolbox_category = new Blockly.Toolbox.Category(this, el_row, childNode);\n\n            const child = childNode.children;\n            /* eslint-disable consistent-return */\n            const subCategory = Object.keys(child).map(key => {\n                if (child[key].tagName === 'category') {\n                    return child[key];\n                }\n            });\n\n            if (subCategory.length) {\n                this.populate(childNode, true);\n            }\n\n            if (!isSubCategory) {\n                this.table.appendChild(el_row);\n            }\n            this.categories_.push(toolbox_category);\n        } else if (is_separator()) {\n            const el_separator = goog.dom.createDom('div', { class: 'toolbox__separator' });\n            this.table.appendChild(el_separator);\n        }\n    });\n\n    this.height_ = this.table.offsetHeight;\n};\n","/* eslint-disable func-names */\n/**\n * Find all user-created variables that are in use in the workspace.\n * For use by generators.\n * To get a list of all variables on a workspace, including unused variables,\n * call Workspace.getAllVariables.\n * deriv-bot: Required for JS generator to work.\n * @param {!Blockly.Workspace} ws The workspace to search for variables.\n * @return {!Array.<!Blockly.VariableModel>} Array of variable models.\n */\nBlockly.Variables.allUsedVarModels = function(ws) {\n    const blocks = ws.getAllBlocks(false);\n    const variableHash = Object.create(null);\n\n    // Iterate through every block and add each variable to the hash.\n    blocks.forEach(block => {\n        const blockVariables = block.getVarModels();\n        if (blockVariables) {\n            blockVariables.forEach(blockVariable => {\n                const id = blockVariable.getId();\n                if (id) {\n                    variableHash[id] = blockVariable;\n                }\n            });\n        }\n    });\n\n    // Flatten the hash into a list.\n    const variableList = [];\n    Object.keys(variableHash).forEach(id => {\n        variableList.push(variableHash[id]);\n    });\n\n    return variableList;\n};\n","Blockly.WorkspaceAudio.prototype.preload = function () {};\n","/* eslint-disable */\n\n/**\n * Scroll the workspace to center on the given block.\n * @param {?string} id ID of block center on.\n * @public\n */\nBlockly.WorkspaceSvg.prototype.centerOnBlock = function(id, hideChaff = true) {\n    if (!this.scrollbar) {\n      console.warn('Tried to scroll a non-scrollable workspace.');\n      return;\n    }\n  \n    var block = this.getBlockById(id);\n    if (!block) {\n      return;\n    }\n  \n    // XY is in workspace coordinates.\n    var xy = block.getRelativeToSurfaceXY();\n    // Height/width is in workspace units.\n    var heightWidth = block.getHeightWidth();\n  \n    // Find the enter of the block in workspace units.\n    var blockCenterY = xy.y + heightWidth.height / 2;\n  \n    // In RTL the block's position is the top right of the block, not top left.\n    var multiplier = this.RTL ? -1 : 1;\n    var blockCenterX = xy.x + (multiplier * heightWidth.width / 2);\n  \n    // Workspace scale, used to convert from workspace coordinates to pixels.\n    var scale = this.scale;\n  \n    // Center in pixels.  0, 0 is at the workspace origin.  These numbers may\n    // be negative.\n    var pixelX = blockCenterX * scale;\n    var pixelY = blockCenterY * scale;\n  \n    var metrics = this.getMetrics();\n  \n    // Scrolling to here would put the block in the top-left corner of the\n    // visible workspace.\n    var scrollToBlockX = pixelX - metrics.contentLeft;\n    var scrollToBlockY = pixelY - metrics.contentTop;\n  \n    // viewHeight and viewWidth are in pixels.\n    var halfViewWidth = metrics.viewWidth / 2;\n    var halfViewHeight = metrics.viewHeight / 2;\n  \n    // Put the block in the center of the visible workspace instead.\n    var scrollToCenterX = scrollToBlockX - halfViewWidth;\n    var scrollToCenterY = scrollToBlockY - halfViewHeight;\n  \n    if (hideChaff) {\n        Blockly.hideChaff();\n    }\n    \n    this.scrollbar.set(scrollToCenterX, scrollToCenterY);\n  };\n\n/**\n * Creates a copy of passed block_node on main workspace and positions it\n * below the lowest block on the canvas.\n * @static\n * @param {Element} block_node\n * @public\n */\nBlockly.WorkspaceSvg.prototype.addBlockNode = function(block_node) {\n    const block = Blockly.Xml.domToBlock(block_node, this);\n    const top_blocks = this.getTopBlocks(true);\n\n    if (top_blocks.length) {\n        const last_block = top_blocks[top_blocks.length - 1];\n        const last_block_xy = last_block.getRelativeToSurfaceXY();\n        const extra_spacing = (last_block.startHat_ ? Blockly.BlockSvg.START_HAT_HEIGHT : 0);\n        const y = last_block_xy.y + last_block.getHeightWidth().height + extra_spacing + 30;\n        \n        block.moveBy(last_block_xy.x, y);\n    }\n\n    this.centerOnBlock(block.id, false);\n}\n","Blockly.Xml.NODE_BLOCK  = 'BLOCK';\nBlockly.Xml.NODE_BUTTON = 'BUTTON';\nBlockly.Xml.NODE_LABEL  = 'LABEL';\nBlockly.Xml.NODE_SHADOW = 'SHADOW';\n","import './blocks';\nimport './hooks';\nimport {\n    save,\n    addLoadersFirst,\n    cleanUpOnLoad,\n    addDomAsBlock,\n    cleanBeforeExport,\n}                                     from './utils';\nimport Interpreter                    from '../services/tradeEngine/utils/interpreter';\nimport createError                    from '../utils/error';\nimport { translate }                  from '../utils/lang/i18n';\nimport { observer as globalObserver } from '../utils/observer';\n\nexport const scratchWorkspaceInit = async () => {\n    try {\n        const el_scratch_area = document.getElementById('scratch_area');\n        const el_scratch_div = document.getElementById('scratch_div');\n        const el_app_contents = document.getElementById('app_contents');\n\n        // eslint-disable-next-line\n        const toolbox_xml = await fetch(`${__webpack_public_path__}xml/toolbox.xml`).then(response => response.text());\n        // eslint-disable-next-line\n        const main_xml = await fetch(`${__webpack_public_path__}xml/main.xml`).then(response => response.text());\n\n        const workspace = Blockly.inject(el_scratch_div, {\n            grid    : { spacing: 40, length: 11, colour: '#ebebeb' },\n            media   : `${__webpack_public_path__}media/`, // eslint-disable-line\n            toolbox : toolbox_xml,\n            trashcan: true,\n            zoom    : { wheel: true },\n        });\n\n        Blockly.derivWorkspace = workspace;\n\n        // Ensure flyout closes on click in workspace.\n        const el_blockly_svg = document.querySelector('.blocklySvg');\n        document.addEventListener('click', (event) => {\n            if (el_blockly_svg.contains(event.target)) {\n                Blockly.derivWorkspace.toolbox_.clearSelection(); // eslint-disable-line\n            }\n        });\n\n        // Keep XML in memory to allow multilevel categories\n        Blockly.derivWorkspace.initial_toolbox_xml = toolbox_xml;\n        Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(main_xml), Blockly.derivWorkspace);\n\n        const onWorkspaceResize = () => {\n            let element = el_scratch_area;\n            let x = 0;\n            let y = 0;\n        \n            do {\n                x += element.offsetLeft;\n                y += element.offsetTop;\n                element = element.offsetParent;\n            } while (element);\n        \n            // Position scratch_div over scratch_area.\n            el_scratch_div.style.left   = `${x}px`;\n            el_scratch_div.style.top    = `${y}px`;\n            el_scratch_div.style.width  = `${el_app_contents.offsetWidth}px`;\n            el_scratch_div.style.height = `${el_app_contents.offsetHeight}px`;\n            \n            Blockly.svgResize(workspace);\n\n            // eslint-disable-next-line no-underscore-dangle\n            workspace.toolbox_.flyout_.position();\n            \n            // Center on first root block, if applicable.\n            const top_blocks = workspace.getTopBlocks(true);\n\n            if (top_blocks.length > 0) {\n                workspace.centerOnBlock(top_blocks[0].id);\n            }\n        };\n\n        window.addEventListener('resize', onWorkspaceResize);\n        onWorkspaceResize();\n    } catch (error) {\n        // TODO: Handle error.\n        throw error;\n    }\n};\n\nconst disableStrayBlocks = () => {\n    const top_blocks = Blockly.derivWorkspace.getTopBlocks();\n\n    top_blocks.forEach(block => {\n        if (block.isMainBlock() || !block.isIndependentBlock()) {\n            block.setDisabled(true);\n        }\n    });\n};\n\nexport const loadWorkspace = xml => {\n    Blockly.Events.setGroup('load');\n    Blockly.mainWorkspace.clear();\n\n    Blockly.Xml.domToWorkspace(xml, Blockly.mainWorkspace);\n    addLoadersFirst(xml).then(\n        () => {\n            Blockly.Events.setGroup(false);\n            globalObserver.emit('ui.log.success', translate('Blocks are loaded successfully'));\n        },\n        e => {\n            Blockly.Events.setGroup(false);\n            throw e;\n        }\n    );\n};\n\nexport const loadBlocks = (xml, dropEvent = {}) => {\n    const variables = xml.getElementsByTagName('variables');\n    if (variables.length > 0) {\n        Blockly.Xml.domToVariables(variables[0], Blockly.mainWorkspace);\n    }\n    Blockly.Events.setGroup('load');\n    addLoadersFirst(xml).then(\n        loaders => {\n            const addedBlocks = [\n                ...loaders,\n                ...Array.from(xml.children)\n                    .map(block => addDomAsBlock(block))\n                    .filter(b => b),\n            ];\n            cleanUpOnLoad(addedBlocks, dropEvent);\n            globalObserver.emit('ui.log.success', translate('Blocks are loaded successfully'));\n        },\n        e => {\n            throw e;\n        }\n    );\n};\n\nexport default class _Blockly {\n    /* eslint-disable class-methods-use-this */\n    zoomOnPlusMinus(zoomIn) {\n        const metrics = Blockly.mainWorkspace.getMetrics();\n        if (zoomIn) {\n            Blockly.mainWorkspace.zoom(metrics.viewWidth / 2, metrics.viewHeight / 2, 1);\n        } else {\n            Blockly.mainWorkspace.zoom(metrics.viewWidth / 2, metrics.viewHeight / 2, -1);\n        }\n    }\n\n    resetWorkspace() {\n        Blockly.Events.setGroup('reset');\n        Blockly.mainWorkspace.clear();\n        Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(this.blocksXmlStr), Blockly.mainWorkspace);\n        Blockly.Events.setGroup(false);\n    }\n\n    /* eslint-disable class-methods-use-this */\n    cleanUp() {\n        Blockly.Events.setGroup(true);\n        const topBlocks = Blockly.mainWorkspace.getTopBlocks(true);\n        let cursorY = 0;\n        topBlocks.forEach(block => {\n            if (block.getSvgRoot().style.display !== 'none') {\n                const xy = block.getRelativeToSurfaceXY();\n                block.moveBy(-xy.x, cursorY - xy.y);\n                block.snapToGrid();\n                cursorY =\n                    block.getRelativeToSurfaceXY().y + block.getHeightWidth().height + Blockly.BlockSvg.MIN_BLOCK_Y;\n            }\n        });\n        Blockly.Events.setGroup(false);\n        // Fire an event to allow scrollbars to resize.\n        Blockly.mainWorkspace.resizeContents();\n    }\n\n    /* eslint-disable class-methods-use-this */\n    load(blockStr = '', dropEvent = {}) {\n        let xml;\n\n        try {\n            xml = Blockly.Xml.textToDom(blockStr);\n        } catch (e) {\n            throw createError('FileLoad', translate('Unrecognized file format'));\n        }\n\n        try {\n            if (xml.hasAttribute('collection') && xml.getAttribute('collection') === 'true') {\n                loadBlocks(xml, dropEvent);\n            } else {\n                loadWorkspace(xml);\n            }\n        } catch (e) {\n            throw createError('FileLoad', translate('Unable to load the block file'));\n        }\n    }\n\n    /* eslint-disable class-methods-use-this */\n    save(arg) {\n        const { filename, collection } = arg;\n\n        const xml = Blockly.Xml.workspaceToDom(Blockly.mainWorkspace);\n        cleanBeforeExport(xml);\n\n        save(filename, collection, xml);\n    }\n\n    run(limitations = {}) {\n        disableStrayBlocks();\n\n        let code;\n        try {\n            code = `\nvar BinaryBotPrivateInit, BinaryBotPrivateStart, BinaryBotPrivateBeforePurchase, BinaryBotPrivateDuringPurchase, BinaryBotPrivateAfterPurchase;\nvar BinaryBotPrivateLastTickTime\nvar BinaryBotPrivateTickAnalysisList = [];\nfunction BinaryBotPrivateRun(f, arg) {\n if (f) return f(arg);\n return false;\n}\nfunction BinaryBotPrivateTickAnalysis() {\n var currentTickTime = Bot.getLastTick(true).epoch\n if (currentTickTime === BinaryBotPrivateLastTickTime) {\n   return\n }\n BinaryBotPrivateLastTickTime = currentTickTime\n for (var BinaryBotPrivateI = 0; BinaryBotPrivateI < BinaryBotPrivateTickAnalysisList.length; BinaryBotPrivateI++) {\n   BinaryBotPrivateRun(BinaryBotPrivateTickAnalysisList[BinaryBotPrivateI]);\n }\n}\nvar BinaryBotPrivateLimitations = ${JSON.stringify(limitations)};\n${Blockly.JavaScript.workspaceToCode(Blockly.mainWorkspace)}\nBinaryBotPrivateRun(BinaryBotPrivateInit);\nwhile(true) {\n BinaryBotPrivateTickAnalysis();\n BinaryBotPrivateRun(BinaryBotPrivateStart)\n while(watch('before')) {\n   BinaryBotPrivateTickAnalysis();\n   BinaryBotPrivateRun(BinaryBotPrivateBeforePurchase);\n }\n while(watch('during')) {\n   BinaryBotPrivateTickAnalysis();\n   BinaryBotPrivateRun(BinaryBotPrivateDuringPurchase);\n }\n BinaryBotPrivateTickAnalysis();\n if(!BinaryBotPrivateRun(BinaryBotPrivateAfterPurchase)) {\n   break;\n }\n}\n       `;\n            this.generatedJs = code;\n            if (code) {\n                this.stop(true);\n                this.interpreter = new Interpreter();\n                this.interpreter.run(code).catch(e => {\n                    globalObserver.emit('Error', e);\n                    this.stop();\n                });\n            }\n        } catch (e) {\n            globalObserver.emit('Error', e);\n            this.stop();\n        }\n    }\n\n    stop(stopBeforeStart) {\n        if (!stopBeforeStart) {\n            const $runButtons = $('#runButton, #summaryRunButton');\n            const $stopButtons = $('#stopButton, #summaryStopButton');\n            if ($runButtons.is(':visible') || $stopButtons.is(':visible')) {\n                $runButtons.show();\n                $stopButtons.hide();\n            }\n        }\n        if (this.interpreter) {\n            this.interpreter.stop();\n            this.interpreter = null;\n        }\n    }\n\n    /* eslint-disable class-methods-use-this */\n    undo() {\n        Blockly.Events.setGroup('undo');\n        Blockly.mainWorkspace.undo();\n        Blockly.Events.setGroup(false);\n    }\n\n    /* eslint-disable class-methods-use-this */\n    redo() {\n        Blockly.mainWorkspace.undo(true);\n    }\n\n    /* eslint-disable class-methods-use-this */\n    hasStarted() {\n        return this.interpreter && this.interpreter.hasStarted();\n    }\n    /* eslint-enable */\n}\n","import filesaver                         from 'file-saver';\nimport { oppositesToDropdownOptions }    from './utils';\nimport config                            from '../constants';\nimport { translate }                     from '../utils/lang/i18n';\n\nlet purchase_choices = [[translate('Click to select'), '']];\n\nexport const saveAs = ({ data, filename, type }) => {\n    const blob = new Blob([data], { type });\n    filesaver.saveAs(blob, filename);\n};\n\nexport const getPurchaseChoices = () => purchase_choices;\n\nconst getPurchaseDropdownOptions = (contract_type, opposite_name) => {\n    const { [opposite_name]: trade_types } = config.opposites;\n    let temp_purchase_choices = [];\n\n    if (trade_types) {\n        temp_purchase_choices.push(...trade_types.filter(trade_type => {\n            return contract_type === 'both' || contract_type === Object.keys(trade_type)[0];\n        }));\n    }\n\n    if (temp_purchase_choices.length === 0) {\n        temp_purchase_choices = trade_types;\n    }\n\n    return oppositesToDropdownOptions(temp_purchase_choices);\n};\n\nexport const updatePurchaseChoices = (contract_type, opposite_name) => {\n    Blockly.Events.disable();\n\n    purchase_choices = getPurchaseDropdownOptions(contract_type, opposite_name);\n\n    const purchase_blocks = Blockly.derivWorkspace.getAllBlocks().filter(block => {\n        return ['purchase', 'payout', 'ask_price'].includes(block.type);\n    });\n\n    purchase_blocks.forEach(purchase_block => {\n        const purchase_list_field = purchase_block.getField('PURCHASE_LIST');\n        const selected_value = purchase_list_field.getValue();\n\n        purchase_list_field.updateOptions(purchase_choices, selected_value, false);\n    });\n\n    Blockly.Events.enable();\n};\n\nexport const expectValue = (block, field) => {\n    const value = Blockly.JavaScript.valueToCode(block, field, Blockly.JavaScript.ORDER_ATOMIC);\n    if (!value) {\n        throw Error(translate(`${field} cannot be empty`));\n    }\n    return value;\n};\n","import { saveAs }    from './shared';\nimport config        from '../constants';\nimport { translate } from '../utils/lang/i18n';\n\nexport const isMainBlock = blockType => config.mainBlocks.indexOf(blockType) >= 0;\n\nexport const oppositesToDropdownOptions = opposite_name => {\n    return opposite_name.map(contract_type => {\n        // i.e. [['CALL', translate('Rise')]] becomes [[translate('Rise'), 'CALL']];\n        return Object.entries(contract_type)[0].reverse();\n    });\n};\n\nexport const cleanUpOnLoad = (blocksToClean, dropEvent) => {\n    const { clientX = 0, clientY = 0 } = dropEvent || {};\n    const blocklyMetrics = Blockly.mainWorkspace.getMetrics();\n    const scaleCancellation = 1 / Blockly.mainWorkspace.scale;\n    const blocklyLeft = blocklyMetrics.absoluteLeft - blocklyMetrics.viewLeft;\n    const blocklyTop = document.body.offsetHeight - blocklyMetrics.viewHeight - blocklyMetrics.viewTop;\n    const cursorX = clientX ? (clientX - blocklyLeft) * scaleCancellation : 0;\n    let cursorY = clientY ? (clientY - blocklyTop) * scaleCancellation : 0;\n    blocksToClean.forEach(block => {\n        block.moveBy(cursorX, cursorY);\n        block.snapToGrid();\n        cursorY += block.getHeightWidth().height + Blockly.BlockSvg.MIN_BLOCK_Y;\n    });\n    // Fire an event to allow scrollbars to resize.\n    Blockly.mainWorkspace.resizeContents();\n};\n\nexport const setBlockTextColor = block => {\n    Blockly.Events.recordUndo = false;\n    if (block.inputList instanceof Array) {\n        Array.from(block.inputList).forEach(inp =>\n            inp.fieldRow.forEach(field => {\n                if (field instanceof Blockly.FieldLabel) {\n                    const svgElement = field.getSvgRoot();\n                    if (svgElement) {\n                        svgElement.style.setProperty('fill', 'white', 'important');\n                    }\n                }\n            })\n        );\n    }\n    const field = block.getField();\n    if (field) {\n        const svgElement = field.getSvgRoot();\n        if (svgElement) {\n            svgElement.style.setProperty('fill', 'white', 'important');\n        }\n    }\n    Blockly.Events.recordUndo = true;\n};\n\nexport const getBlockByType = type => Blockly.mainWorkspace.getAllBlocks().find(block => type === block.type);\n\nexport const getTopBlocksByType = type => Blockly.mainWorkspace.getTopBlocks().filter(block => type === block.type);\n\nexport const save = (filename = 'deriv-bot', collection = false, xmlDom) => {\n    xmlDom.setAttribute('collection', collection ? 'true' : 'false');\n    const data = Blockly.Xml.domToPrettyText(xmlDom);\n    saveAs({ data, type: 'text/xml;charset=utf-8', filename: `${filename}.xml` });\n};\n\nconst isProcedure = blockType => ['procedures_defreturn', 'procedures_defnoreturn'].indexOf(blockType) >= 0;\n\n// dummy event to recover deleted blocks loaded by loader\nclass DeleteStray extends Blockly.Events.Abstract {\n    constructor(block) {\n        super(block);\n        this.run(true);\n    }\n\n    run(redo) {\n        const { recordUndo } = Blockly.Events;\n        Blockly.Events.recordUndo = false;\n        const sourceBlock = Blockly.mainWorkspace.getBlockById(this.blockId);\n        if (!sourceBlock) {\n            return;\n        }\n        if (redo) {\n            sourceBlock.setFieldValue(`${sourceBlock.getFieldValue('NAME')} (deleted)`, 'NAME');\n            sourceBlock.setDisabled(true);\n        } else {\n            sourceBlock.setFieldValue(sourceBlock.getFieldValue('NAME').replace(' (deleted)', ''), 'NAME');\n            sourceBlock.setDisabled(false);\n        }\n        Blockly.Events.recordUndo = recordUndo;\n    }\n}\nDeleteStray.prototype.type = 'deletestray';\n\nexport const deleteBlocksLoadedBy = (id, eventGroup = true) => {\n    Blockly.Events.setGroup(eventGroup);\n    Blockly.mainWorkspace.getTopBlocks().forEach(block => {\n        if (block.loaderId === id) {\n            if (isProcedure(block.type)) {\n                if (block.getFieldValue('NAME').indexOf('deleted') < 0) {\n                    Blockly.Events.fire(new DeleteStray(block));\n                }\n            } else {\n                block.dispose();\n            }\n        }\n    });\n    Blockly.Events.setGroup(false);\n};\n\nexport const addDomAsBlock = blockXml => {\n    if (blockXml.tagName === 'variables') {\n        return Blockly.Xml.domToVariables(blockXml, Blockly.mainWorkspace);\n    }\n    const blockType = blockXml.getAttribute('type');\n    if (isMainBlock(blockType)) {\n        Blockly.mainWorkspace\n            .getTopBlocks()\n            .filter(b => b.type === blockType)\n            .forEach(b => b.dispose());\n    }\n    return Blockly.Xml.domToBlock(blockXml, Blockly.mainWorkspace);\n};\n\nconst addDomAsBlockFromHeader = (blockXml /* , header = null */) => {\n    // const oldVars = [...Blockly.mainWorkspace.variableList];\n    const block = Blockly.Xml.domToBlock(blockXml, Blockly.mainWorkspace);\n    /* Blockly.mainWorkspace.variableList = Blockly.mainWorkspace.variableList.filter(v => {\n        if (oldVars.indexOf(v) >= 0) {\n            return true;\n        }\n        header.loadedVariables.push(v);\n        return false;\n    });\n    replaceDeletedBlock(block);\n    Blockly.Events.fire(new Hide(block, header)); */\n    return block;\n};\n\nconst processLoaders = (xml, header = null) => {\n    const promises = [];\n    Array.from(xml.children).forEach(block => {\n        if (block.getAttribute('type') === 'loader') {\n            block.remove();\n\n            const loader = header\n                ? addDomAsBlockFromHeader(block, header)\n                : Blockly.Xml.domToBlock(block, Blockly.mainWorkspace);\n\n            promises.push(loadRemote(loader)); // eslint-disable-line no-use-before-define\n        }\n    });\n    return promises;\n};\n\nexport const addLoadersFirst = (xml, header = null) =>\n    new Promise((resolve, reject) => {\n        const promises = processLoaders(xml, header);\n        if (promises.length) {\n            Promise.all(promises).then(resolve, reject);\n        } else {\n            resolve([]);\n        }\n    });\n\nconst loadBlocksFromHeader = (blockStr = '', header) =>\n    new Promise((resolve, reject) => {\n        let xml;\n        try {\n            xml = Blockly.Xml.textToDom(blockStr);\n        } catch (e) {\n            reject(translate('Unrecognized file format.'));\n        }\n        try {\n            if (xml.hasAttribute('collection') && xml.getAttribute('collection') === 'true') {\n                const { recordUndo } = Blockly.Events;\n                Blockly.Events.recordUndo = false;\n                addLoadersFirst(xml, header).then(\n                    () => {\n                        Array.from(xml.children)\n                            .filter(\n                                block =>\n                                    block.getAttribute('type') === 'tick_analysis' ||\n                                    isProcedure(block.getAttribute('type'))\n                            )\n                            .forEach(block => addDomAsBlockFromHeader(block, header));\n\n                        Blockly.Events.recordUndo = recordUndo;\n                        resolve();\n                    },\n                    e => {\n                        Blockly.Events.recordUndo = recordUndo;\n                        reject(e);\n                    }\n                );\n            } else {\n                reject(translate('Remote blocks to load must be a collection.'));\n            }\n        } catch (e) {\n            reject(translate('Unable to load the block file.'));\n        }\n    });\n\nexport const loadRemote = blockObj =>\n    new Promise((resolve, reject) => {\n        let url = blockObj.getFieldValue('URL');\n        if (url.indexOf('http') !== 0) {\n            url = `http://${url}`;\n        }\n        if (!url.match(/[^/]*\\.[a-zA-Z]{3}$/) && url.slice(-1)[0] !== '/') {\n            reject(translate('Target must be an xml file'));\n        } else {\n            if (url.slice(-1)[0] === '/') {\n                url += 'index.xml';\n            }\n            let isNew = true;\n            getTopBlocksByType('loader').forEach(block => {\n                if (block.id !== blockObj.id && block.url === url) {\n                    isNew = false;\n                }\n            });\n            if (!isNew) {\n                blockObj.setDisabled(true);\n                reject(translate('This url is already loaded'));\n            } else {\n                $.ajax({\n                    type: 'GET',\n                    url,\n                })\n                    .fail(e => {\n                        if (e.status) {\n                            reject(\n                                Error(\n                                    `${translate('An error occurred while trying to load the url')}: ${e.status} ${\n                                        e.statusText\n                                    }`\n                                )\n                            );\n                        } else {\n                            reject(\n                                Error(\n                                    translate(\n                                        'Make sure \\'Access-Control-Allow-Origin\\' exists in the response from the server'\n                                    )\n                                )\n                            );\n                        }\n                        deleteBlocksLoadedBy(blockObj.id);\n                    })\n                    .done(xml => {\n                        loadBlocksFromHeader(xml, blockObj).then(() => {\n                            blockObj.setDisabled(false);\n                            blockObj.url = url; // eslint-disable-line no-param-reassign\n                            resolve(blockObj);\n                        }, reject);\n                    });\n            }\n        }\n    });\n\nexport const cleanBeforeExport = xml => {\n    Array.from(xml.children).forEach(blockDom => {\n        const blockId = blockDom.getAttribute('id');\n        if (!blockId) return;\n        const block = Blockly.mainWorkspace.getBlockById(blockId);\n        if ('loaderId' in block) {\n            blockDom.remove();\n        }\n    });\n};\n","/* eslint-disable no-underscore-dangle */\nimport { observable, action } from 'mobx';\nimport { translate } from '../utils/lang/i18n';\n\nexport default class FlyoutStore {\n    block_listeners = [];\n    block_workspaces = [];\n    flyout_min_width = 400;\n\n    @observable flyout_content = [];\n    @observable flyout_width = this.flyout_min_width;\n    @observable is_visible = false;\n\n    /**\n     * Parses XML contents passed by Blockly.Toolbox. Supports all default\n     * Blockly.Flyout elements i.e. <block>, <label>, <button> in their\n     * original format, e.g. <label text=\"Hello World\" />\n     * @param {Element[]} xml_list list of XML nodes\n     * @memberof FlyoutStore\n     */\n    @action.bound setContents(xml_list) {\n        let processed_xml = xml_list;\n        this.block_listeners.forEach(listener => Blockly.unbindEvent_(listener));\n        this.block_workspaces.forEach(workspace => workspace.dispose());\n        this.block_listeners = [];\n        this.block_workspaces = [];\n\n        if (xml_list.type === 'search') {\n            const blocks = xml_list.blocks;\n            const no_result = !blocks.length;\n\n            processed_xml = [];\n\n            if (no_result) {\n                const label = document.createElement('label');\n                label.setAttribute('text', translate('No Block Found'));\n\n                processed_xml.push(label);\n            } else {\n                const label = document.createElement('label');\n                label.setAttribute('text', translate('Result(s)'));\n\n                processed_xml.push(label);\n            }\n\n            processed_xml = processed_xml.concat(blocks);\n        }\n\n        this.flyout_content = observable([]);\n        this.flyout_content.push(...processed_xml);\n        this.setFlyoutWidth(processed_xml);\n        this.setVisibility(true);\n    }\n\n    /**\n     * Sets whether the flyout is visible or not.\n     * @param {boolean} is_visible\n     * @memberof FlyoutStore\n     */\n    @action.bound setVisibility(is_visible) {\n        this.is_visible = is_visible;\n\n        if (!is_visible) {\n            this.flyout_content = observable([]);\n        }\n    }\n\n    /**\n     * Intialises a workspace unique to the passed block_node\n     * @param {Element} el_block_workspace Element where Blockly.Workspace will be mounted on\n     * @param {Element} block_node DOM of a Blockly.Block\n     * @memberof FlyoutStore\n     */\n    @action.bound initBlockWorkspace(el_block_workspace, block_node) {\n        const workspace = Blockly.inject(el_block_workspace, {\n            css   : false,\n            media: `${__webpack_public_path__}media/`, // eslint-disable-line\n            move  : { scrollbars: false, drag: true, wheel: false },\n            sounds: false,\n        });\n\n        workspace.isFlyout = true;\n        workspace.targetWorkspace = Blockly.derivWorkspace;\n\n        const block = Blockly.Xml.domToBlock(block_node, workspace);\n\n        block.isInFlyout = true;\n\n        // Some blocks have hats, consider their height.\n        const extra_spacing = (block.startHat_ ? Blockly.BlockSvg.START_HAT_HEIGHT : 0);\n        const block_workspace_height = Number.parseInt(block_node.getAttribute('height')) + extra_spacing + 10;\n\n        // Update block workspace widths to accommodate block widths.\n        el_block_workspace.style.height = `${block_workspace_height}px`;\n        el_block_workspace.style.width = `${this.flyout_width - 55}px`;\n\n        // Move block away from side so it's displayed completely.\n        const dx = 1;\n        const dy = 5 + extra_spacing;\n\n        block.moveBy(dx, dy);\n\n        // Use original Blockly flyout functionality to create block on drag.\n        const blockly_flyout = Blockly.derivWorkspace.toolbox_.flyout_;\n\n        this.block_listeners.push(\n            Blockly.bindEventWithChecks_(block.getSvgRoot(), 'mousedown', null, (event) => {\n                blockly_flyout.blockMouseDown_(block)(event);\n            })\n        );\n\n        this.block_workspaces.push(workspace);\n        this.block_workspaces.forEach(Blockly.svgResize);\n    }\n\n    /**\n     * Walks through xmlList and finds width of the longest block while setting\n     * height and width (in workspace pixels) attributes on each of the block nodes.\n     * @param {Element[]} xmlList\n     * @memberof FlyoutStore\n     */\n    @action.bound setFlyoutWidth(xmlList) {\n        let longest_block_width = 0;\n\n        xmlList.forEach((node) => {\n            const tag_name = node.tagName.toUpperCase();\n\n            if (tag_name === Blockly.Xml.NODE_BLOCK) {\n                const block_hw = Blockly.Block.getDimensions(node);\n\n                node.setAttribute('width', block_hw.width);\n                node.setAttribute('height', block_hw.height);\n                longest_block_width = Math.max(longest_block_width, block_hw.width);\n            }\n        });\n\n        this.flyout_width = Math.max(this.flyout_min_width, longest_block_width + 60);\n    }\n}\n"],"sourceRoot":""}