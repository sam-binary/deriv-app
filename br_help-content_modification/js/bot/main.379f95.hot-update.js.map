{"version":3,"sources":["webpack://deriv-bot/./src/scratch/blocks/Binary/Trade Definition/trade_definition_market.js","webpack://deriv-bot/./src/services/api/helpers/active-symbols.js","webpack://deriv-bot/./src/services/api/helpers/index.js","webpack://deriv-bot/./src/services/api/helpers/server-time.js"],"names":["Blockly","Blocks","trade_definition_market","init","jsonInit","message0","args0","type","name","options","colour","Colours","BinaryLessPurple","colourSecondary","Binary","colourTertiary","previousStatement","nextStatement","setMovable","setDeletable","onchange","event","workspace","isInFlyout","isDragging","enforceLimitations","active_symbols","ApiHelpers","instance","market_field","getField","submarket_field","Events","CREATE","ids","includes","id","retrieveActiveSymbols","then","markets","getMarketDropdownOptions","updateOptions","CHANGE","submarkets","getSubmarketDropdownOptions","getValue","symbol_field","symbols","getSymbolDropdownOptions","isDescendantOf","disable","unplug","top_blocks","getTopBlocks","trade_definition_block","find","block","connection","getLastConnectionInStatement","connect","previousConnection","dispose","enable","disabled","setDisabled","ActiveSymbols","ws","trading_times","disabled_markets","disabled_symbols","disabled_submarkets","init_promise","PendingPromise","is_initialised","processed_symbols","initialise","activeSymbols","processActiveSymbols","onMarketOpenCloseChanged","changes","Object","keys","forEach","symbol_name","symbol_obj","exchange_is_open","resolve","reduce","symbol","market","submarket","isExistingValue","object","prop","findIndex","a","display_name","market_display_name","submarket_display_name","pip_size","pip","length","is_active","is_trading_suspended","market_options","market_name","is_closed","every","submarket_option","symbol_options","symbol_option","isMarketOpened","push","config","NOT_AVAILABLE_DROPDOWN_OPTIONS","submarket_options","market_obj","submarket_name","accumulator","root_store","server_time","ServerTime","TradingTimes","contracts_for","ContractsFor","setInstance","singleton","clock_started","clearInterval","getTimeInterval","requestTime","setInterval","bind","client_time_at_request","getUTCEpoch","Date","sendRequest","time","time_response","processTimeResponse","response","error","client_time_at_response","server_time_at_response","updateTime","updateTimeInterval","getEpoch","Error","getLocalDate","getLocalDateByEpoch","epoch","date","getTime","getTimezoneOffset","getUTCDate","utc_date","toISOString","substring"],"mappings":"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","file":"main.379f95.hot-update.js","sourcesContent":["import ApiHelpers from '../../../../services/api/helpers';\n\nBlockly.Blocks.trade_definition_market = {\n    init() {\n        this.jsonInit({\n            message0: 'Market: %1 Submarket: %2 Symbol: %3',\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'MARKET_LIST',\n                    options: [['', '']],\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'SUBMARKET_LIST',\n                    options: [['', '']],\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'SYMBOL_LIST',\n                    options: [['', '']],\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessPurple.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessPurple.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        this.enforceLimitations();\n\n        const { active_symbols } = ApiHelpers.instance;\n        const market_field       = this.getField('MARKET_LIST');\n        const submarket_field    = this.getField('SUBMARKET_LIST');\n\n        if (event.type === Blockly.Events.CREATE && event.ids.includes(this.id)) {\n            active_symbols.retrieveActiveSymbols().then(() => {\n                const markets = active_symbols.getMarketDropdownOptions();\n                market_field.updateOptions(markets, null, true);\n            });\n        } else if (event.type === Blockly.Events.CHANGE) {\n            if (event.name === 'MARKET_LIST') {\n                active_symbols.retrieveActiveSymbols().then(() => {\n                    const submarkets = active_symbols.getSubmarketDropdownOptions(market_field.getValue());\n                    submarket_field.updateOptions(submarkets, null, true);\n                });\n            } else if (event.name === 'SUBMARKET_LIST') {\n                const symbol_field = this.getField('SYMBOL_LIST');\n\n                active_symbols.retrieveActiveSymbols().then(() => {\n                    const symbols = active_symbols.getSymbolDropdownOptions(submarket_field.getValue());\n                    symbol_field.updateOptions(symbols, null, true);\n                });\n            }\n        }\n    },\n    enforceLimitations() {\n        if (!this.isDescendantOf('trade_definition')) {\n            Blockly.Events.disable();\n\n            this.unplug(false); // Unplug without reconnecting siblings\n\n            const top_blocks = this.workspace.getTopBlocks();\n            const trade_definition_block = top_blocks.find(block => block.type === 'trade_definition');\n\n            // Reconnect self to trade definition block.\n            if (trade_definition_block) {\n                const connection = trade_definition_block.getLastConnectionInStatement('TRADE_OPTIONS');\n                connection.connect(this.previousConnection);\n            } else {\n                this.dispose();\n            }\n\n            Blockly.Events.enable();\n        }\n\n        // These blocks cannot be disabled.\n        if (this.disabled) {\n            this.setDisabled(false);\n        }\n    },\n};\n\nBlockly.JavaScript.trade_definition_market = () => {};\n","import PendingPromise from '../../../utils/pending-promise';\nimport config         from '../../../constants';\n\nexport default class ActiveSymbols {\n    constructor(ws, trading_times) {\n        this.active_symbols      = {};\n        this.disabled_markets    = [];\n        this.disabled_symbols    = ['frxGBPNOK', 'frxUSDNOK', 'frxUSDNEK', 'frxUSDSEK']; // These are only forward-starting.\n        this.disabled_submarkets = ['energy']; // These are only forward-starting.\n        this.init_promise        = new PendingPromise();\n        this.is_initialised      = false;\n        this.processed_symbols   = {};\n        this.trading_times       = trading_times;\n        this.ws                  = ws;\n    }\n\n    async retrieveActiveSymbols() {\n        await this.trading_times.initialise();\n\n        if (this.is_initialised) {\n            await this.init_promise;\n            return this.active_symbols;\n        }\n\n        this.is_initialised = true;\n\n        const { active_symbols } = await this.ws.activeSymbols();\n\n        this.active_symbols = active_symbols;\n        this.processed_symbols = this.processActiveSymbols();\n        this.trading_times.onMarketOpenCloseChanged = (changes) => {\n            Object.keys(changes).forEach(symbol_name => {\n                const symbol_obj = this.active_symbols[symbol_name];\n    \n                if (symbol_obj) {\n                    symbol_obj.exchange_is_open = changes[symbol_name];\n                }\n            });\n    \n            this.changes = changes;\n            this.processActiveSymbols();\n        };\n\n        this.init_promise.resolve();\n        \n        return this.active_symbols;\n    }\n\n    processActiveSymbols() {\n        return this.active_symbols.reduce((processed_symbols, symbol) => {\n            if (\n                this.disabled_markets.includes(symbol.market) ||\n                this.disabled_symbols.includes(symbol.symbol) ||\n                this.disabled_submarkets.includes(symbol.submarket)\n            ) {\n                return processed_symbols;\n            }\n\n            const isExistingValue = (object, prop) => Object.keys(object).findIndex(a => a === symbol[prop]) !== -1;\n\n            if (!isExistingValue(processed_symbols, 'market')) {\n                processed_symbols[symbol.market] = {\n                    display_name: symbol.market_display_name,\n                    submarkets  : {},\n                };\n            }\n\n            const { submarkets } = processed_symbols[symbol.market];\n\n            if (!isExistingValue(submarkets, 'submarket')) {\n                submarkets[symbol.submarket] = {\n                    display_name: symbol.submarket_display_name,\n                    symbols     : {},\n                };\n            }\n\n            const { symbols } = submarkets[symbol.submarket];\n\n            if (!isExistingValue(symbols, 'symbol')) {\n                symbols[symbol.symbol] = {\n                    display_name: symbol.display_name,\n                    pip_size    : `${symbol.pip}`.length - 2,\n                    is_active   : (!symbol.is_trading_suspended && symbol.exchange_is_open),\n                };\n            }\n\n            return processed_symbols;\n        }, {});\n    }\n\n    getMarketDropdownOptions() {\n        const market_options = [];\n        \n        Object.keys(this.processed_symbols).forEach(market_name => {\n            const submarkets = this.getSubmarketDropdownOptions(market_name);\n            const is_closed = submarkets.every(submarket_option => {\n                const symbol_options = this.getSymbolDropdownOptions(submarket_option[1]);\n                return symbol_options.every(symbol_option => !this.trading_times.isMarketOpened(symbol_option[1]));\n            });\n\n            if (!is_closed) {\n                const market = this.processed_symbols[market_name];\n                market_options.push([market.display_name, market_name]);\n            }\n        });\n\n        return (market_options.length === 0 ? config.NOT_AVAILABLE_DROPDOWN_OPTIONS : market_options);\n    }\n\n    getSubmarketDropdownOptions(market) {\n        const submarket_options = [];\n        const market_obj        = this.processed_symbols[market];\n\n        if (market_obj) {\n            const { submarkets } = market_obj;\n\n            Object.keys(submarkets).forEach(submarket_name => {\n                const symbols   = this.getSymbolDropdownOptions(submarket_name);\n                const is_closed = symbols.every(symbol_option => !this.trading_times.isMarketOpened(symbol_option[1]));\n\n                if (!is_closed) {\n                    submarket_options.push([submarkets[submarket_name].display_name, submarket_name]);\n                }\n            });\n        }\n\n        return (submarket_options.length === 0 ? config.NOT_AVAILABLE_DROPDOWN_OPTIONS : submarket_options);\n    }\n\n    getSymbolDropdownOptions(submarket) {\n        const symbol_options = Object.keys(this.processed_symbols).reduce((accumulator, market_name) => {\n            const { submarkets } = this.processed_symbols[market_name];\n\n            Object.keys(submarkets).forEach(submarket_name => {\n                if (submarket_name === submarket) {\n                    const { symbols } = submarkets[submarket_name];\n\n                    Object.keys(symbols).forEach(symbol_name => {\n                        if (this.trading_times.isMarketOpened(symbol_name)) {\n                            accumulator.push([symbols[symbol_name].display_name, symbol_name]);\n                        }\n                    });\n                }\n            });\n\n            return accumulator;\n        }, []);\n\n        return (symbol_options.length === 0 ? config.NOT_AVAILABLE_DROPDOWN_OPTIONS : symbol_options);\n    }\n}\n","import ServerTime    from './server-time';\nimport TradingTimes  from './trading-times';\nimport ContractsFor  from './contracts-for';\nimport ActiveSymbols from './active-symbols';\n\nclass ApiHelpers {\n    static singleton = null;\n\n    constructor(root_store) {\n        this.root_store     = root_store;\n        this.server_time    = new ServerTime(this.root_store.ws);\n        this.trading_times  = new TradingTimes(this.root_store.ws, this.server_time);\n        this.contracts_for  = new ContractsFor(this.root_store.ws, this.server_time);\n        this.active_symbols = new ActiveSymbols(this.root_store.ws, this.trading_times);\n    }\n\n    static setInstance(root_store) {\n        if (!this.singleton) {\n            this.singleton = new ApiHelpers(root_store);\n        }\n    }\n\n    static get instance() {\n        return this.singleton;\n    }\n}\n\nexport default ApiHelpers;\n","import PendingPromise from '../../../utils/pending-promise';\n\nexport default class ServerTime {\n    constructor(ws) {\n        this.clock_started         = false;\n        this.init_promise          = new PendingPromise();\n        this.ws                    = ws;\n        this.init();\n    }\n\n    async init() {\n        if (!this.clock_started) {\n            this.clock_started = true;\n            clearInterval(this.getTimeInterval);\n            await this.requestTime();\n            this.getTimeInterval = setInterval(this.requestTime.bind(this), 30000);\n        }\n\n        return this.init_promise;\n    }\n\n    async requestTime() {\n        this.client_time_at_request = this.getUTCEpoch(new Date());\n        const time_response = await this.ws.sendRequest({ time: 1 });\n        this.processTimeResponse(time_response);\n        this.init_promise.resolve();\n    }\n\n    processTimeResponse(response) {\n        if (response.error) {\n            this.clock_started = false;\n        }\n\n        if (!this.clock_started) {\n            this.init();\n            return;\n        }\n\n        const server_time             = response.time;\n        const client_time_at_response = this.getUTCEpoch(new Date());\n        this.server_time_at_response  = server_time + ((client_time_at_response - this.client_time_at_request) / 2);\n\n        const updateTime = () => {\n            this.server_time_at_response += 1;\n        };\n\n        clearInterval(this.updateTimeInterval);\n        this.updateTimeInterval = setInterval(updateTime, 1000);\n    }\n\n    getEpoch() {\n        if (this.server_time_at_response) {\n            return this.server_time_at_response;\n        }\n\n        throw new Error('Server time is undefined');\n    }\n\n    getLocalDate() {\n        return this.getLocalDateByEpoch(this.getEpoch());\n    }\n    \n    // eslint-disable-next-line class-methods-use-this\n    getLocalDateByEpoch(epoch) {\n        return new Date(epoch * 1000);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getUTCEpoch(date) {\n        return (date.getTime() / 1000) - (date.getTimezoneOffset() * 60);\n    }\n    \n    // eslint-disable-next-line class-methods-use-this\n    getUTCDate(epoch) {\n        const utc_date = new Date(epoch * 1000).toISOString();\n\n        return utc_date.substring(0, 19);\n    }\n}\n"],"sourceRoot":""}