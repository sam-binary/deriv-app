{"version":3,"sources":["webpack://deriv-bot/./src/scratch/blocks/Binary/Trade Definition/trade_definition_market.js"],"names":["Blockly","Blocks","trade_definition_market","init","jsonInit","message0","args0","type","name","options","colour","Colours","BinaryLessPurple","colourSecondary","Binary","colourTertiary","previousStatement","nextStatement","setMovable","setDeletable","onchange","event","workspace","isInFlyout","isDragging","enforceLimitations","active_symbols","ApiHelpers","instance","market_field","getField","submarket_field","Events","CREATE","ids","includes","id","console","log","JSON","stringify","retrieveActiveSymbols","then","markets","getMarketDropdownOptions","updateOptions","CHANGE","submarkets","getSubmarketDropdownOptions","getValue","symbol_field","symbols","getSymbolDropdownOptions","isDescendantOf","disable","unplug","top_blocks","getTopBlocks","trade_definition_block","find","block","connection","getLastConnectionInStatement","connect","previousConnection","dispose","enable","disabled","setDisabled"],"mappings":"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","file":"main.2e567f.hot-update.js","sourcesContent":["import ApiHelpers from '../../../../services/api/helpers';\n\nBlockly.Blocks.trade_definition_market = {\n    init() {\n        this.jsonInit({\n            message0: 'Market: %1 Submarket: %2 Symbol: %3',\n            args0   : [\n                {\n                    type   : 'field_dropdown',\n                    name   : 'MARKET_LIST',\n                    options: [['', '']],\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'SUBMARKET_LIST',\n                    options: [['', '']],\n                },\n                {\n                    type   : 'field_dropdown',\n                    name   : 'SYMBOL_LIST',\n                    options: [['', '']],\n                },\n            ],\n            colour           : Blockly.Colours.BinaryLessPurple.colour,\n            colourSecondary  : Blockly.Colours.Binary.colourSecondary,\n            colourTertiary   : Blockly.Colours.BinaryLessPurple.colourTertiary,\n            previousStatement: null,\n            nextStatement    : null,\n        });\n\n        this.setMovable(false);\n        this.setDeletable(false);\n    },\n    onchange(event) {\n        if (!this.workspace || this.isInFlyout || this.workspace.isDragging()) {\n            return;\n        }\n\n        this.enforceLimitations();\n\n        const { active_symbols } = ApiHelpers.instance;\n        const market_field       = this.getField('MARKET_LIST');\n        const submarket_field    = this.getField('SUBMARKET_LIST');\n\n        if (event.type === Blockly.Events.CREATE && event.ids.includes(this.id)) {\n            console.log(JSON.stringify(active_symbols)); // eslint-disable-line\n            active_symbols.retrieveActiveSymbols().then(() => {\n                const markets = active_symbols.getMarketDropdownOptions();\n                console.log(markets); // eslint-disable-line\n                market_field.updateOptions(markets, null, true);\n            });\n        } else if (event.type === Blockly.Events.CHANGE) {\n            if (event.name === 'MARKET_LIST') {\n                active_symbols.retrieveActiveSymbols().then(() => {\n                    const submarkets = active_symbols.getSubmarketDropdownOptions(market_field.getValue());\n                    submarket_field.updateOptions(submarkets, null, true);\n                });\n            } else if (event.name === 'SUBMARKET_LIST') {\n                const symbol_field = this.getField('SYMBOL_LIST');\n\n                active_symbols.retrieveActiveSymbols().then(() => {\n                    const symbols = active_symbols.getSymbolDropdownOptions(submarket_field.getValue());\n                    symbol_field.updateOptions(symbols, null, true);\n                });\n            }\n        }\n    },\n    enforceLimitations() {\n        if (!this.isDescendantOf('trade_definition')) {\n            Blockly.Events.disable();\n\n            this.unplug(false); // Unplug without reconnecting siblings\n\n            const top_blocks = this.workspace.getTopBlocks();\n            const trade_definition_block = top_blocks.find(block => block.type === 'trade_definition');\n\n            // Reconnect self to trade definition block.\n            if (trade_definition_block) {\n                const connection = trade_definition_block.getLastConnectionInStatement('TRADE_OPTIONS');\n                connection.connect(this.previousConnection);\n            } else {\n                this.dispose();\n            }\n\n            Blockly.Events.enable();\n        }\n\n        // These blocks cannot be disabled.\n        if (this.disabled) {\n            this.setDisabled(false);\n        }\n    },\n};\n\nBlockly.JavaScript.trade_definition_market = () => {};\n"],"sourceRoot":""}