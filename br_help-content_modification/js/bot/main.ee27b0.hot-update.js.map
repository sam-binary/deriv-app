{"version":3,"sources":["webpack://deriv-bot/./src/components/flyout.jsx"],"names":["Flyout","is_help_content","block_nodes","flyout_content","flyout_width","is_visible","showHelpContent","width","Object","keys","map","key","index","nodes","node","tag_name","tagName","toUpperCase","Blockly","Xml","NODE_BLOCK","block_type","getAttribute","flyout_block_key","Block","isDynamic","Math","random","help_config","NODE_LABEL","NODE_BUTTON","callback_key","callback","derivWorkspace","getButtonCallback","button","flyout_button","targetWorkspace_","getTargetWorkspace","propTypes","PropTypes","array","number","bool","func","connect","flyout"],"mappings":"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","file":"main.ee27b0.hot-update.js","sourcesContent":["import React                from 'react';\nimport PropTypes            from 'prop-types';\nimport FlyoutBlockGroup     from './flyout-block-group.jsx';\nimport HelpBase             from '../scratch/help-content/flyout-help-base.jsx';\nimport { help_config }      from '../scratch/help-content/help-content.config';\nimport { connect }          from '../stores/connect';\nimport                           '../assets/sass/scratch/flyout.scss';\n\nconst Flyout = ({\n    is_help_content,\n    block_nodes,\n    flyout_content,\n    flyout_width,\n    is_visible,\n    showHelpContent,\n}) => {\n    return (\n        <div\n            className={`flyout${!is_visible ? ' hidden' : ''}${is_help_content ? ' flyout__help' : ' flyout__content'}`}\n            style={{ width: `${flyout_width}px` }}\n        >\n            {\n                is_help_content ?\n                    <HelpBase block_nodes={block_nodes} /> :\n                    Object.keys(flyout_content).map((key, index) => {\n                        const nodes = flyout_content[key];\n                        const node = nodes[0];\n                        const tag_name = node.tagName.toUpperCase();\n\n                        switch (tag_name) {\n                            case Blockly.Xml.NODE_BLOCK: {\n                                const block_type = node.getAttribute('type');\n                                let flyout_block_key = `${block_type} ${index}`;\n                                if (Blockly.Block.isDynamic(block_type) || is_help_content) {\n                                    flyout_block_key = `${block_type} ${Math.random()}`;\n                                }\n\n                                return (\n                                    <FlyoutBlockGroup\n                                        key={flyout_block_key}\n                                        id={`flyout__item-workspace--${index}`}\n                                        block_nodes={nodes}\n                                        onInfoClick={\n                                            help_config[block_type]\n                                            && (() => showHelpContent(nodes))\n                                        }\n                                    />\n                                );\n                            }\n                            case Blockly.Xml.NODE_LABEL:\n                                return (\n                                    <div\n                                        key={node.getAttribute('text') + index}\n                                        className='flyout__item-label'\n                                    >\n                                        {node.getAttribute('text')}\n                                    </div>\n                                );\n                            case Blockly.Xml.NODE_BUTTON: {\n                                const callback_key = node.getAttribute('callbackKey');\n                                const callback = Blockly.derivWorkspace.getButtonCallback(callback_key) || (() => { });\n\n                                return (\n                                    <button\n                                        key={`${callback_key}${index}`}\n                                        className='flyout__button flyout__button-new'\n                                        onClick={(button) => {\n                                            const flyout_button = button;\n\n                                            // Workaround for not having a flyout workspace.\n                                            // eslint-disable-next-line no-underscore-dangle\n                                            flyout_button.targetWorkspace_ = Blockly.derivWorkspace;\n                                            // eslint-disable-next-line no-underscore-dangle\n                                            flyout_button.getTargetWorkspace = () => flyout_button.targetWorkspace_;\n\n                                            callback(flyout_button);\n                                        }}\n                                    >\n                                        {node.getAttribute('text')}\n                                    </button>\n                                );\n                            }\n                            default:\n                                return null;\n                        }\n                    })\n            }\n        </div>\n    );\n};\n\nFlyout.propTypes = {\n    block_nodes    : PropTypes.array,\n    flyout_content : PropTypes.array,\n    flyout_width   : PropTypes.number,\n    is_help_content: PropTypes.bool,\n    is_visible     : PropTypes.bool,\n    showHelpContent: PropTypes.func,\n};\n\nexport default connect(({ flyout }) => ({\n    is_help_content: flyout.is_help_content,\n    block_nodes    : flyout.block_nodes,\n    flyout_content : flyout.flyout_content,\n    flyout_width   : flyout.flyout_width,\n    is_visible     : flyout.is_visible,\n    showHelpContent: flyout.showHelpContent,\n}))(Flyout);\n\n"],"sourceRoot":""}