{"version":3,"sources":["webpack://deriv-bot/./src/components/toolbar.jsx"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B;AACU;;AAEa;AACR;;;AAGM;AACP;;;AAGK;AACN;;AAEc;AACT;AACD;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,UAAU,mEAAmE;AAC7E;AACA;AACA,kBAAkB,0DAA0D;AAC5E,kBAAkB,wDAAwD;AAC1E,kBAAkB,oDAAoD;AACtE,kBAAkB,sEAAsE;AACxF,kBAAkB,kBAAkB;AACpC,kBAAkB,gDAAgD;AAClE,kBAAkB,gDAAgD;AAClE,kBAAkB,kBAAkB;AACpC,kBAAkB,uDAAuD;AACzE,kBAAkB,0DAA0D;AAC5E,kBAAkB,gDAAgD;AAClE;AACA,UAAU;AACV;;AAEA,SAAS,4CAAK;AACd;AACA;AACA,GAAG,EAAE,4CAAK,eAAe,kEAAM;AAC/B;AACA,eAAe,iDAAU;AACzB;AACA;AACA,GAAG,EAAE,4CAAK,eAAe,oDAAS,SAAS,4CAAK;AAChD,eAAe,iDAAU;AACzB,GAAG,EAAE,+DAAS,aAAa,4CAAK;AAChC;AACA,GAAG,EAAE,4CAAK,eAAe,gEAAI;AAC7B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,WAAW,4CAAK,eAAe,iEAAK;AACpC;AACA;AACA;AACA,aAAa,+DAAS;AACtB,mBAAmB,+DAAS;AAC5B;AACA;AACA;AACA,qCAAqC,4CAAK,eAAe,oDAAS,UAAU,4CAAK,eAAe,sDAAW;AAC3G,KAAK;AACL,GAAG,IAAI,4CAAK;AACZ;AACA,GAAG,EAAE,4CAAK,eAAe,gEAAI;AAC7B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,WAAW,4CAAK,eAAe,iEAAK;AACpC;AACA;AACA;AACA;AACA,aAAa,+DAAS;AACtB,qBAAqB,4CAAK,eAAe,sDAAW;AACpD,KAAK;AACL,GAAG,IAAI,4CAAK;AACZ;AACA,GAAG,EAAE,4CAAK;AACV;AACA;AACA,GAAG,mBAAmB,4CAAK;AAC3B;AACA;AACA,GAAG,mBAAmB,4CAAK;AAC3B;AACA;AACA,GAAG,aAAa,4CAAK;AACrB;AACA;AACA,GAAG,aAAa,4CAAK;AACrB;AACA;AACA,GAAG,aAAa,4CAAK;AACrB;AACA;AACA,GAAG,qCAAqC,4CAAK;AAC7C;AACA;AACA,GAAG,mBAAmB,4CAAK;AAC3B;AACA;AACA,GAAG;AACH;;AAEe,8HAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,UAAU,E","file":"main.2ee101.hot-update.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport Button from 'deriv-components/lib/button';\nimport 'deriv-components/lib/button.css';\n        \n\nimport Input from 'deriv-components/lib/input';\nimport 'deriv-components/lib/input.css';\n        \n\nimport Form from 'deriv-components/lib/form';\nimport 'deriv-components/lib/form.css';\n        \nimport { ArrowIcon, TradeActive } from './Icons.jsx';\nimport { connect } from '../stores/connect';\nimport { translate } from '../utils/tools';\nvar initial_search_value = {\n  search: ''\n};\nvar initial_botname_value = {\n  botname: 'Untitled Bot'\n};\n\nvar Toolbar = function Toolbar(props) {\n  var onStartClick = props.onStartClick,\n      onSearch = props.onSearch,\n      onSearchBlur = props.onSearchBlur,\n      isSearchFocus = props.isSearchFocus,\n      onBotnameTyped = props.onBotnameTyped,\n      onResetClick = props.onResetClick,\n      onBrowseClick = props.onBrowseClick,\n      onSaveClick = props.onSaveClick,\n      onUndoClick = props.onUndoClick,\n      onRedoClick = props.onRedoClick,\n      onZoomInClick = props.onZoomInClick,\n      onZoomOutClick = props.onZoomOutClick,\n      onSortClick = props.onSortClick; // const toolbar_element = [\n  //     { id: 'start', type: 'button', text: 'Start', action: onStartClick },\n  //     {\n  //         id      : 'toolbar-action', type    : 'button-group', children: [\n  //             { id: 'reset-button', text: 'reset', action: onResetClick },\n  //             { id: 'load-xml', text: 'browse', action: onBrowseClick },\n  //             { id: 'save-xml', text: 'save', action: onSaveClick },\n  //             { id: 'integration', text: 'google drive', action: onGoogleDriveClick },\n  //             { type: 'divider' },\n  //             { id: 'undo', text: 'undo', action: onUndoClick },\n  //             { id: 'redo', text: 'redo', action: onRedoClick },\n  //             { type: 'divider' },\n  //             { id: 'zoomIn', text: 'zoom in', action: onZoomInClick },\n  //             { id: 'zoomOut', text: 'zoom out', action: onZoomOutClick },\n  //             { id: 'sort', text: 'sort', action: onSortClick },\n  //         ],\n  //     },\n  // ];\n\n  return React.createElement(\"div\", {\n    id: \"toolbar\",\n    className: \"toolbar\"\n  }, React.createElement(Button, {\n    id: 'start',\n    className: classNames('toolbar__btn', 'btn--primary', 'btn--icon'),\n    has_effect: true,\n    onClick: onStartClick\n  }, React.createElement(ArrowIcon, null), React.createElement(\"span\", {\n    className: classNames('btn--icon-text')\n  }, translate('Start'))), React.createElement(\"div\", {\n    className: \"toolbar__form\"\n  }, React.createElement(Form, {\n    initialValues: initial_search_value,\n    onSubmit: function onSubmit(values) {\n      return onSearch(values);\n    }\n  }, function (_ref) {\n    var submitForm = _ref.submitForm;\n    return React.createElement(Input, {\n      className: \"toolbar__form-field\",\n      type: \"text\",\n      name: \"search\",\n      label: translate('Search block...'),\n      placeholder: translate('Search block...'),\n      onKeyUp: submitForm,\n      onFocus: submitForm,\n      onBlur: onSearchBlur,\n      trailing_icon: isSearchFocus ? React.createElement(ArrowIcon, null) : React.createElement(TradeActive, null)\n    });\n  })), React.createElement(\"div\", {\n    className: \"toolbar__form\"\n  }, React.createElement(Form, {\n    initialValues: initial_botname_value,\n    onSubmit: function onSubmit(values) {\n      return onBotnameTyped(values);\n    }\n  }, function (_ref2) {\n    var submitForm = _ref2.submitForm;\n    return React.createElement(Input, {\n      className: \"toolbar__form-field\",\n      type: \"text\",\n      name: \"botname\",\n      onKeyUp: submitForm,\n      label: translate('Bot name...'),\n      trailing_icon: React.createElement(TradeActive, null)\n    });\n  })), React.createElement(\"div\", {\n    className: \"toolbar__btn-group\"\n  }, React.createElement(\"button\", {\n    className: \"toolbar__btn-icon\",\n    onClick: onSaveClick\n  }, \"\\uD83D\\uDCBE\"), React.createElement(\"button\", {\n    className: \"toolbar__btn-icon\",\n    onClick: onBrowseClick\n  }, \"\\uD83D\\uDCC2\"), React.createElement(\"button\", {\n    className: \"toolbar__btn-icon\",\n    onClick: onRedoClick\n  }, \"\\u21B6\"), React.createElement(\"button\", {\n    className: \"toolbar__btn-icon\",\n    onClick: onUndoClick\n  }, \"\\u21B7\"), React.createElement(\"button\", {\n    className: \"toolbar__btn-icon\",\n    onClick: onResetClick\n  }, \"\\u2613\"), React.createElement(\"button\", {\n    className: \"toolbar__btn-icon\",\n    onClick: onSortClick\n  }, \"\\uD83E\\uDDDF\\u200D\\u2640\\uFE0F\"), React.createElement(\"button\", {\n    className: \"toolbar__btn-icon\",\n    onClick: onZoomInClick\n  }, \"\\uD83D\\uDD0E\"), React.createElement(\"button\", {\n    className: \"toolbar__btn-icon\",\n    onClick: onZoomOutClick\n  }, \"\\uD83D\\uDD0D\")));\n};\n\nexport default connect(function (_ref3) {\n  var toolbar = _ref3.toolbar;\n  return {\n    isSearchFocus: toolbar.isSearchFocus,\n    onStartClick: toolbar.onStartClick,\n    onSearch: toolbar.onSearch,\n    onSearchBlur: toolbar.onSearchBlur,\n    onBotnameTyped: toolbar.onBotnameTyped,\n    onResetClick: toolbar.onResetClick,\n    onBrowseClick: toolbar.onBrowseClick,\n    onSaveClick: toolbar.onSaveClick,\n    onGoogleDriveClick: toolbar.onGoogleDriveClick,\n    onUndoClick: toolbar.onUndoClick,\n    onRedoClick: toolbar.onRedoClick,\n    handleFileChange: toolbar.handleFileChange,\n    onConfirmSave: toolbar.onConfirmSave,\n    onZoomInClick: toolbar.onZoomInClick,\n    onZoomOutClick: toolbar.onZoomOutClick,\n    onSortClick: toolbar.onSortClick\n  };\n})(Toolbar);"],"sourceRoot":""}