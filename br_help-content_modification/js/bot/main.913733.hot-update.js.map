{"version":3,"sources":["webpack://deriv-bot/./src/services/api/helpers/active-symbols.js"],"names":["ActiveSymbols","ws","trading_times","console","log","active_symbols","disabled_markets","disabled_symbols","disabled_submarkets","init_promise","PendingPromise","is_initialised","processed_symbols","retrieveActiveSymbols","initialise","activeSymbols","processActiveSymbols","onMarketOpenCloseChanged","changes","Object","keys","forEach","symbol_name","symbol_obj","exchange_is_open","resolve","reduce","symbol","includes","market","submarket","isExistingValue","object","prop","findIndex","a","display_name","market_display_name","submarkets","submarket_display_name","symbols","pip_size","pip","length","is_active","is_trading_suspended","getMarketDropdownOptions","market_options","market_name","getSubmarketDropdownOptions","is_closed","every","submarket_option","symbol_options","getSymbolDropdownOptions","symbol_option","isMarketOpened","push","config","NOT_AVAILABLE_DROPDOWN_OPTIONS","submarket_options","market_obj","submarket_name","accumulator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;IAEqBA,a;;;AACjB,yBAAYC,EAAZ,EAAgBC,aAAhB,EAA+B;AAC3BC,WAAO,CAACC,GAAR,CAAY,2BAAZ,EAD2B,CACe;;AAC1C,SAAKC,cAAL,GAA2B,EAA3B;AACA,SAAKC,gBAAL,GAA2B,EAA3B;AACA,SAAKC,gBAAL,GAA2B,CAAC,WAAD,EAAc,WAAd,EAA2B,WAA3B,EAAwC,WAAxC,CAA3B,CAJ2B,CAIsD;;AACjF,SAAKC,mBAAL,GAA2B,CAAC,QAAD,CAA3B,CAL2B,CAKY;;AACvC,SAAKC,YAAL,GAA2B,IAAIC,8DAAJ,EAA3B;AACA,SAAKC,cAAL,GAA2B,KAA3B;AACA,SAAKC,iBAAL,GAA2B,EAA3B;AACA,SAAKV,aAAL,GAA2BA,aAA3B;AACA,SAAKD,EAAL,GAA2BA,EAA3B;AACH;;;;SAEKY,qB;;;;;4BAAN;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACIV,qBAAO,CAACC,GAAR,CAAY,KAAKF,aAAjB,EADJ,CACqC;;AADrC;AAAA,qBAEU,KAAKA,aAAL,CAAmBY,UAAnB,EAFV;;AAAA;AAIIX,qBAAO,CAACC,GAAR,CAAY,KAAKO,cAAjB,EAJJ,CAIsC;;AAJtC,mBAKQ,KAAKA,cALb;AAAA;AAAA;AAAA;;AAMQR,qBAAO,CAACC,GAAR,CAAY,KAAKK,YAAjB,EANR,CAMwC;;AANxC;AAAA,qBAOc,KAAKA,YAPnB;;AAAA;AAAA,+CAQe,KAAKJ,cARpB;;AAAA;AAWI,mBAAKM,cAAL,GAAsB,IAAtB;AAXJ;AAAA,qBAaqC,KAAKV,EAAL,CAAQc,aAAR,EAbrC;;AAAA;AAAA;AAaYV,4BAbZ,QAaYA,cAbZ;AAeI,mBAAKA,cAAL,GAAsBA,cAAtB;AACA,mBAAKO,iBAAL,GAAyB,KAAKI,oBAAL,EAAzB;;AACA,mBAAKd,aAAL,CAAmBe,wBAAnB,GAA8C,UAACC,OAAD,EAAa;AACvDC,sBAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,OAArB,CAA6B,UAAAC,WAAW,EAAI;AACxC,sBAAMC,UAAU,GAAG,KAAI,CAAClB,cAAL,CAAoBiB,WAApB,CAAnB;;AAEA,sBAAIC,UAAJ,EAAgB;AACZA,8BAAU,CAACC,gBAAX,GAA8BN,OAAO,CAACI,WAAD,CAArC;AACH;AACJ,iBAND;AAQA,qBAAI,CAACJ,OAAL,GAAeA,OAAf;;AACA,qBAAI,CAACF,oBAAL;AACH,eAXD;;AAaA,mBAAKP,YAAL,CAAkBgB,OAAlB;AA9BJ,+CAgCW,KAAKpB,cAhChB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;;SAmCAW,oB,GAAA,gCAAuB;AAAA;;AACnB,WAAO,KAAKX,cAAL,CAAoBqB,MAApB,CAA2B,UAACd,iBAAD,EAAoBe,MAApB,EAA+B;AAC7D,UACI,MAAI,CAACrB,gBAAL,CAAsBsB,QAAtB,CAA+BD,MAAM,CAACE,MAAtC,KACA,MAAI,CAACtB,gBAAL,CAAsBqB,QAAtB,CAA+BD,MAAM,CAACA,MAAtC,CADA,IAEA,MAAI,CAACnB,mBAAL,CAAyBoB,QAAzB,CAAkCD,MAAM,CAACG,SAAzC,CAHJ,EAIE;AACE,eAAOlB,iBAAP;AACH;;AAED,UAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASC,IAAT;AAAA,eAAkBd,MAAM,CAACC,IAAP,CAAYY,MAAZ,EAAoBE,SAApB,CAA8B,UAAAC,CAAC;AAAA,iBAAIA,CAAC,KAAKR,MAAM,CAACM,IAAD,CAAhB;AAAA,SAA/B,MAA2D,CAAC,CAA9E;AAAA,OAAxB;;AAEA,UAAI,CAACF,eAAe,CAACnB,iBAAD,EAAoB,QAApB,CAApB,EAAmD;AAC/CA,yBAAiB,CAACe,MAAM,CAACE,MAAR,CAAjB,GAAmC;AAC/BO,sBAAY,EAAET,MAAM,CAACU,mBADU;AAE/BC,oBAAU,EAAI;AAFiB,SAAnC;AAIH;;AAhB4D,UAkBrDA,UAlBqD,GAkBtC1B,iBAAiB,CAACe,MAAM,CAACE,MAAR,CAlBqB,CAkBrDS,UAlBqD;;AAoB7D,UAAI,CAACP,eAAe,CAACO,UAAD,EAAa,WAAb,CAApB,EAA+C;AAC3CA,kBAAU,CAACX,MAAM,CAACG,SAAR,CAAV,GAA+B;AAC3BM,sBAAY,EAAET,MAAM,CAACY,sBADM;AAE3BC,iBAAO,EAAO;AAFa,SAA/B;AAIH;;AAzB4D,UA2BrDA,OA3BqD,GA2BzCF,UAAU,CAACX,MAAM,CAACG,SAAR,CA3B+B,CA2BrDU,OA3BqD;;AA6B7D,UAAI,CAACT,eAAe,CAACS,OAAD,EAAU,QAAV,CAApB,EAAyC;AACrCA,eAAO,CAACb,MAAM,CAACA,MAAR,CAAP,GAAyB;AACrBS,sBAAY,EAAET,MAAM,CAACS,YADA;AAErBK,kBAAQ,EAAM,MAAGd,MAAM,CAACe,GAAV,EAAgBC,MAAhB,GAAyB,CAFlB;AAGrBC,mBAAS,EAAM,CAACjB,MAAM,CAACkB,oBAAR,IAAgClB,MAAM,CAACH;AAHjC,SAAzB;AAKH;;AAED,aAAOZ,iBAAP;AACH,KAtCM,EAsCJ,EAtCI,CAAP;AAuCH,G;;SAEDkC,wB,GAAA,oCAA2B;AAAA;;AACvB,QAAMC,cAAc,GAAG,EAAvB;AAEA5B,UAAM,CAACC,IAAP,CAAY,KAAKR,iBAAjB,EAAoCS,OAApC,CAA4C,UAAA2B,WAAW,EAAI;AACvD,UAAMV,UAAU,GAAG,MAAI,CAACW,2BAAL,CAAiCD,WAAjC,CAAnB;;AACA,UAAME,SAAS,GAAGZ,UAAU,CAACa,KAAX,CAAiB,UAAAC,gBAAgB,EAAI;AACnD,YAAMC,cAAc,GAAG,MAAI,CAACC,wBAAL,CAA8BF,gBAAgB,CAAC,CAAD,CAA9C,CAAvB;;AACA,eAAOC,cAAc,CAACF,KAAf,CAAqB,UAAAI,aAAa;AAAA,iBAAI,CAAC,MAAI,CAACrD,aAAL,CAAmBsD,cAAnB,CAAkCD,aAAa,CAAC,CAAD,CAA/C,CAAL;AAAA,SAAlC,CAAP;AACH,OAHiB,CAAlB;;AAKA,UAAI,CAACL,SAAL,EAAgB;AACZ,YAAMrB,MAAM,GAAG,MAAI,CAACjB,iBAAL,CAAuBoC,WAAvB,CAAf;AACAD,sBAAc,CAACU,IAAf,CAAoB,CAAC5B,MAAM,CAACO,YAAR,EAAsBY,WAAtB,CAApB;AACH;AACJ,KAXD;AAaA,WAAQD,cAAc,CAACJ,MAAf,KAA0B,CAA1B,GAA8Be,mDAAM,CAACC,8BAArC,GAAsEZ,cAA9E;AACH,G;;SAEDE,2B,GAAA,qCAA4BpB,MAA5B,EAAoC;AAAA;;AAChC,QAAM+B,iBAAiB,GAAG,EAA1B;AACA,QAAMC,UAAU,GAAU,KAAKjD,iBAAL,CAAuBiB,MAAvB,CAA1B;;AAEA,QAAIgC,UAAJ,EAAgB;AAAA,UACJvB,UADI,GACWuB,UADX,CACJvB,UADI;AAGZnB,YAAM,CAACC,IAAP,CAAYkB,UAAZ,EAAwBjB,OAAxB,CAAgC,UAAAyC,cAAc,EAAI;AAC9C,YAAMtB,OAAO,GAAK,MAAI,CAACc,wBAAL,CAA8BQ,cAA9B,CAAlB;;AACA,YAAMZ,SAAS,GAAGV,OAAO,CAACW,KAAR,CAAc,UAAAI,aAAa;AAAA,iBAAI,CAAC,MAAI,CAACrD,aAAL,CAAmBsD,cAAnB,CAAkCD,aAAa,CAAC,CAAD,CAA/C,CAAL;AAAA,SAA3B,CAAlB;;AAEA,YAAI,CAACL,SAAL,EAAgB;AACZU,2BAAiB,CAACH,IAAlB,CAAuB,CAACnB,UAAU,CAACwB,cAAD,CAAV,CAA2B1B,YAA5B,EAA0C0B,cAA1C,CAAvB;AACH;AACJ,OAPD;AAQH;;AAED,WAAQF,iBAAiB,CAACjB,MAAlB,KAA6B,CAA7B,GAAiCe,mDAAM,CAACC,8BAAxC,GAAyEC,iBAAjF;AACH,G;;SAEDN,wB,GAAA,kCAAyBxB,SAAzB,EAAoC;AAAA;;AAChC,QAAMuB,cAAc,GAAGlC,MAAM,CAACC,IAAP,CAAY,KAAKR,iBAAjB,EAAoCc,MAApC,CAA2C,UAACqC,WAAD,EAAcf,WAAd,EAA8B;AAAA,UACpFV,UADoF,GACrE,MAAI,CAAC1B,iBAAL,CAAuBoC,WAAvB,CADqE,CACpFV,UADoF;AAG5FnB,YAAM,CAACC,IAAP,CAAYkB,UAAZ,EAAwBjB,OAAxB,CAAgC,UAAAyC,cAAc,EAAI;AAC9C,YAAIA,cAAc,KAAKhC,SAAvB,EAAkC;AAAA,cACtBU,OADsB,GACVF,UAAU,CAACwB,cAAD,CADA,CACtBtB,OADsB;AAG9BrB,gBAAM,CAACC,IAAP,CAAYoB,OAAZ,EAAqBnB,OAArB,CAA6B,UAAAC,WAAW,EAAI;AACxC,gBAAI,MAAI,CAACpB,aAAL,CAAmBsD,cAAnB,CAAkClC,WAAlC,CAAJ,EAAoD;AAChDyC,yBAAW,CAACN,IAAZ,CAAiB,CAACjB,OAAO,CAAClB,WAAD,CAAP,CAAqBc,YAAtB,EAAoCd,WAApC,CAAjB;AACH;AACJ,WAJD;AAKH;AACJ,OAVD;AAYA,aAAOyC,WAAP;AACH,KAhBsB,EAgBpB,EAhBoB,CAAvB;AAkBA,WAAQV,cAAc,CAACV,MAAf,KAA0B,CAA1B,GAA8Be,mDAAM,CAACC,8BAArC,GAAsEN,cAA9E;AACH,G","file":"main.913733.hot-update.js","sourcesContent":["import PendingPromise from '../../../utils/pending-promise';\nimport config         from '../../../constants';\n\nexport default class ActiveSymbols {\n    constructor(ws, trading_times) {\n        console.log(\"ACTIVE SYMBOL CONSTRUCTOR\"); // eslint-disable-line\n        this.active_symbols      = {};\n        this.disabled_markets    = [];\n        this.disabled_symbols    = ['frxGBPNOK', 'frxUSDNOK', 'frxUSDNEK', 'frxUSDSEK']; // These are only forward-starting.\n        this.disabled_submarkets = ['energy']; // These are only forward-starting.\n        this.init_promise        = new PendingPromise();\n        this.is_initialised      = false;\n        this.processed_symbols   = {};\n        this.trading_times       = trading_times;\n        this.ws                  = ws;\n    }\n\n    async retrieveActiveSymbols() {\n        console.log(this.trading_times); // eslint-disable-line\n        await this.trading_times.initialise();\n\n        console.log(this.is_initialised); // eslint-disable-line\n        if (this.is_initialised) {\n            console.log(this.init_promise); // eslint-disable-line\n            await this.init_promise;\n            return this.active_symbols;\n        }\n\n        this.is_initialised = true;\n\n        const { active_symbols } = await this.ws.activeSymbols();\n\n        this.active_symbols = active_symbols;\n        this.processed_symbols = this.processActiveSymbols();\n        this.trading_times.onMarketOpenCloseChanged = (changes) => {\n            Object.keys(changes).forEach(symbol_name => {\n                const symbol_obj = this.active_symbols[symbol_name];\n    \n                if (symbol_obj) {\n                    symbol_obj.exchange_is_open = changes[symbol_name];\n                }\n            });\n    \n            this.changes = changes;\n            this.processActiveSymbols();\n        };\n\n        this.init_promise.resolve();\n        \n        return this.active_symbols;\n    }\n\n    processActiveSymbols() {\n        return this.active_symbols.reduce((processed_symbols, symbol) => {\n            if (\n                this.disabled_markets.includes(symbol.market) ||\n                this.disabled_symbols.includes(symbol.symbol) ||\n                this.disabled_submarkets.includes(symbol.submarket)\n            ) {\n                return processed_symbols;\n            }\n\n            const isExistingValue = (object, prop) => Object.keys(object).findIndex(a => a === symbol[prop]) !== -1;\n\n            if (!isExistingValue(processed_symbols, 'market')) {\n                processed_symbols[symbol.market] = {\n                    display_name: symbol.market_display_name,\n                    submarkets  : {},\n                };\n            }\n\n            const { submarkets } = processed_symbols[symbol.market];\n\n            if (!isExistingValue(submarkets, 'submarket')) {\n                submarkets[symbol.submarket] = {\n                    display_name: symbol.submarket_display_name,\n                    symbols     : {},\n                };\n            }\n\n            const { symbols } = submarkets[symbol.submarket];\n\n            if (!isExistingValue(symbols, 'symbol')) {\n                symbols[symbol.symbol] = {\n                    display_name: symbol.display_name,\n                    pip_size    : `${symbol.pip}`.length - 2,\n                    is_active   : (!symbol.is_trading_suspended && symbol.exchange_is_open),\n                };\n            }\n\n            return processed_symbols;\n        }, {});\n    }\n\n    getMarketDropdownOptions() {\n        const market_options = [];\n        \n        Object.keys(this.processed_symbols).forEach(market_name => {\n            const submarkets = this.getSubmarketDropdownOptions(market_name);\n            const is_closed = submarkets.every(submarket_option => {\n                const symbol_options = this.getSymbolDropdownOptions(submarket_option[1]);\n                return symbol_options.every(symbol_option => !this.trading_times.isMarketOpened(symbol_option[1]));\n            });\n\n            if (!is_closed) {\n                const market = this.processed_symbols[market_name];\n                market_options.push([market.display_name, market_name]);\n            }\n        });\n\n        return (market_options.length === 0 ? config.NOT_AVAILABLE_DROPDOWN_OPTIONS : market_options);\n    }\n\n    getSubmarketDropdownOptions(market) {\n        const submarket_options = [];\n        const market_obj        = this.processed_symbols[market];\n\n        if (market_obj) {\n            const { submarkets } = market_obj;\n\n            Object.keys(submarkets).forEach(submarket_name => {\n                const symbols   = this.getSymbolDropdownOptions(submarket_name);\n                const is_closed = symbols.every(symbol_option => !this.trading_times.isMarketOpened(symbol_option[1]));\n\n                if (!is_closed) {\n                    submarket_options.push([submarkets[submarket_name].display_name, submarket_name]);\n                }\n            });\n        }\n\n        return (submarket_options.length === 0 ? config.NOT_AVAILABLE_DROPDOWN_OPTIONS : submarket_options);\n    }\n\n    getSymbolDropdownOptions(submarket) {\n        const symbol_options = Object.keys(this.processed_symbols).reduce((accumulator, market_name) => {\n            const { submarkets } = this.processed_symbols[market_name];\n\n            Object.keys(submarkets).forEach(submarket_name => {\n                if (submarket_name === submarket) {\n                    const { symbols } = submarkets[submarket_name];\n\n                    Object.keys(symbols).forEach(symbol_name => {\n                        if (this.trading_times.isMarketOpened(symbol_name)) {\n                            accumulator.push([symbols[symbol_name].display_name, symbol_name]);\n                        }\n                    });\n                }\n            });\n\n            return accumulator;\n        }, []);\n\n        return (symbol_options.length === 0 ? config.NOT_AVAILABLE_DROPDOWN_OPTIONS : symbol_options);\n    }\n}\n"],"sourceRoot":""}