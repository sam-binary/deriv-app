{"version":3,"sources":["webpack://deriv-bot/./src/scratch/hooks/toolbox.js"],"names":["Blockly","Toolbox","prototype","init","workspace","workspace_","svg","getParentSvg","HtmlDiv","goog","dom","createDom","TagName","DIV","setAttribute","RTL","el_toolbox_header","el_toolbox_title","textContent","translate","appendChild","el_toolbox_search","INPUT","forEach","e","addEventListener","toolbox","toolbox_","flyout","setVisibility","setSelectedItem","parentNode","insertBefore","bindEventWithChecks_","cancelCurrentGesture","utils","isRightButton","target","hideChaff","Touch","clearTouchIdentifier","createFlyout_","categoryMenu_","CategoryMenu","populate_","options","languageTree","position","newTree","populate","showCategory_","category_id","flyout_content","search_term","document","getElementById","value","all_variables","flyout_","getVariablesOfType","all_procedures","Procedures","allProcedures","derivWorkspace","length","type","blocks","trim","toLowerCase","split","Blocks","Object","keys","blockKey","keywords","block","block_meta","meta","Function","block_definition","definition","key","Array","def","includes","JSON","stringify","block_category","category","categories_","find","menuCategory","id_","contents","getContents","fnToApply","getToolboxCategoryCallback","term","blockContents","filter","content","attributes","nodeValue","indexOf","push","searched_variables","variable","name","variables_blocks","DataCategory","search","uniqueVarBlocks","map","variableBlock","concat","searched_procedures","procedures_blocks","populateDynamicProcedures","uniqueProceBlocks","procedureBlock","selected_category","getCategoryContents","setContents","xml_list","Category","getMenuItemClassName_","selected","classNames","join","item","should_close_on_same_category","category_item","selectedItem_","setSelected","is_category_return_","has_child_category_","is_visible","getCategoryTree","parent_name","parent_id","colour","children","xml_document","implementation","createDocument","el_xml","createElement","parent_category","el_separator","category_nodes","from","childNode","findCategory","category_collection","i","el_category","is_correct_child","tagName","toUpperCase","getAttribute","initial_toolbox_xml","toolboxDom","Xml","textToDom","el_parent","parentElement","updateToolbox","name_","colour_","contents_","refreshSelection","parent_","el_item","item_","el_return_arrow","ReactDOM","render","el_colour","el_label","el_toolbox_text","label_","description_","el_description","el_category_arrow","iconURI_","el_icon","class","innerHTML","__webpack_public_path__","parentHtml_","bindEvent_","setSelectedItemFactory","custom_","dynamic_","parseContents_","domTree","childNodes","child","tag","setColour","node","isString","match","hueToRgb","hasColours_","className","horizontalLayout_","table","isSubCategory","dispose","is_category","is_separator","row_class","el_row","web_classes","classList","add","toolbox_category","subCategory","height_","offsetHeight","refreshCategory","getSelectedItem"],"mappings":"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","file":"main.95035c.hot-update.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Arrow1Icon } from '../../components/Icons.jsx';\nimport { flyout }    from '../../stores';\nimport { translate } from '../../utils/lang/i18n';\n\n/* eslint-disable func-names, no-underscore-dangle */\n\n/**\n * Initializes the toolbox.\n */\nBlockly.Toolbox.prototype.init = function () {\n    const workspace = this.workspace_;\n    const svg = this.workspace_.getParentSvg();\n\n    /**\n     * HTML container for the Toolbox menu.\n     * @type {Element}\n     */\n    this.HtmlDiv = goog.dom.createDom(goog.dom.TagName.DIV, 'toolbox');\n    this.HtmlDiv.setAttribute('dir', workspace.RTL ? 'RTL' : 'LTR');\n\n    // deriv-bot: Create Toolbox header\n    const el_toolbox_header = goog.dom.createDom(goog.dom.TagName.DIV, 'toolbox__header');\n    const el_toolbox_title = goog.dom.createDom(goog.dom.TagName.DIV, 'toolbox__title');\n\n    el_toolbox_title.textContent = translate('Blocks Library');\n    el_toolbox_header.appendChild(el_toolbox_title);\n    this.HtmlDiv.appendChild(el_toolbox_header);\n\n    const el_toolbox_search = goog.dom.createDom(goog.dom.TagName.INPUT, { 'id': 'search_input', 'placeholder': 'Search' });\n\n    this.HtmlDiv.appendChild(el_toolbox_search);\n\n    ['keyup', 'click'].forEach(e => {\n        el_toolbox_search.addEventListener(e, () => {\n            const toolbox = workspace.toolbox_;\n    \n            flyout.setVisibility(false);\n    \n            toolbox.setSelectedItem('search');\n        });\n    });\n\n    svg.parentNode.insertBefore(this.HtmlDiv, svg);\n\n    // Clicking on toolbox closes popups.\n    Blockly.bindEventWithChecks_(this.HtmlDiv, 'mousedown', this, function (e) {\n        // Cancel any gestures in progress.\n        this.workspace_.cancelCurrentGesture();\n\n        if (Blockly.utils.isRightButton(e) || e.target === this.HtmlDiv) {\n            // Close flyout.\n            Blockly.hideChaff(false);\n        } else {\n            // Just close popups.\n            Blockly.hideChaff(true);\n        }\n        Blockly.Touch.clearTouchIdentifier();  // Don't block future drags.\n    }, /* opt_noCaptureIdentifier */ false, /* opt_noPreventDefault */ true);\n\n    this.createFlyout_();\n    this.categoryMenu_ = new Blockly.Toolbox.CategoryMenu(this, this.HtmlDiv);\n    this.populate_(workspace.options.languageTree);\n    this.position();\n};\n\n/**\n * Fill the toolbox with categories and blocks.\n * @param {!Node} newTree DOM tree of blocks.\n * @private\n * deriv-bot: We don't want to `showAll` or `setSelectedItem` here (like in Scratch)\n */\nBlockly.Toolbox.prototype.populate_ = function (newTree) {\n    this.categoryMenu_.populate(newTree);\n};\n\n/**\n * deriv-bot: Show blocks for a specific category in flyout\n * @private\n */\nBlockly.Toolbox.prototype.showCategory_ = function (category_id) {\n    let flyout_content;\n\n    if (category_id === 'search') {\n        let search_term = document.getElementById('search_input').value;\n        const all_variables = this.flyout_.workspace_.getVariablesOfType('');\n        const all_procedures = Blockly.Procedures.allProcedures(Blockly.derivWorkspace);\n\n        if (search_term.length <= 1) {\n            flyout.setVisibility(false);\n            return;\n        }\n\n        flyout_content = {\n            type  : 'search',\n            blocks: [],\n        };\n\n        if (typeof search_term === 'string') {\n            search_term = search_term.trim().toLowerCase();\n            search_term = search_term.split(' ');\n        }\n\n        const blocks = Blockly.Blocks;\n        Object.keys(blocks).forEach(blockKey => {\n            let keywords = ` ${blockKey}`;\n            const block = blocks[blockKey];\n            const block_meta = block.meta instanceof Function && block.meta();\n            const block_definition = block.definition instanceof Function && block.definition();\n\n            if (!block_meta) {\n                return;\n            }\n\n            Object.keys(block_meta).forEach(key => {\n                const meta = block_meta[key];\n                keywords += ` ${meta}`;\n            });\n\n            Object.keys(block_definition).forEach(key => {\n                const definition = block_definition[key];\n\n                if (typeof definition === 'string') {\n                    keywords += ` ${definition}`;\n                } else if (definition instanceof Array) {\n                    definition.forEach(def => {\n                        if (def instanceof Object) {\n                            keywords += !def.type.includes('image') ? ` ${JSON.stringify(def)}` : '';\n                        } else {\n                            keywords += ` ${def}`;\n                        }\n                    });\n                }\n            });\n\n            const block_category = (block_definition && block_definition.category) ||\n                                    (block_meta && block_meta.category);\n            const category =\n                this.categoryMenu_.categories_\n                    .find(menuCategory => menuCategory.id_ === block_category);\n            let contents = category && category.getContents();\n\n            if (typeof contents === 'string') {\n                const fnToApply = this.workspace_.getToolboxCategoryCallback(contents);\n                contents = fnToApply(this.workspace_);\n            }\n\n            if (contents) {\n                search_term.forEach(term => {\n                    if (keywords.toLowerCase().includes(term)) {\n                        const blockContents = contents\n                            .filter(content => content.attributes[0].nodeValue === blockKey);\n\n                        if (blockContents.length && flyout_content.blocks.indexOf(blockContents[0]) === -1) {\n                            flyout_content.blocks.push(blockContents[0]);\n                        }\n\n                    }\n                });\n            }\n        });\n\n        const searched_variables = [];\n        all_variables.forEach(variable => {\n            search_term.forEach(term => {\n                if (variable.name.toLowerCase().includes(term)) {\n                    searched_variables.push(variable);\n                }\n            });\n        });\n\n        const variables_blocks = Blockly.DataCategory.search(searched_variables);\n        /* eslint-disable-next-line consistent-return */\n        const uniqueVarBlocks = variables_blocks.map(variableBlock => {\n            if (flyout_content.blocks.indexOf(variableBlock) === -1){\n                return variableBlock;\n            }\n        });\n        flyout_content.blocks = flyout_content.blocks.concat(uniqueVarBlocks);\n\n        const searched_procedures = {};\n        Object.keys(all_procedures).forEach(key => {\n            search_term.forEach(term => {\n                if (all_procedures[key].length && all_procedures[key][0][0].toLowerCase().includes(term)) {\n                    searched_procedures[key] = all_procedures[key];\n                }\n            });\n        });\n\n        const procedures_blocks = Blockly.Procedures.populateDynamicProcedures(searched_procedures);\n        /* eslint-disable-next-line consistent-return */\n        const uniqueProceBlocks = procedures_blocks.map(procedureBlock => {\n            if (flyout_content.blocks.indexOf(procedureBlock) === -1){\n                return procedureBlock;\n            }\n        });\n        flyout_content.blocks = flyout_content.blocks.concat(uniqueProceBlocks);\n    } else {\n        const selected_category = this.categoryMenu_.categories_.find(category => category.id_ === category_id);\n        flyout_content = this.getCategoryContents(selected_category);\n    }\n\n    flyout.setContents(flyout_content);\n};\n\nBlockly.Toolbox.prototype.getCategoryContents = function(selected_category) {\n    let xml_list = selected_category.getContents();\n\n    // Dynamic categories\n    if (typeof xml_list === 'string') {\n        const fnToApply = this.workspace_.getToolboxCategoryCallback(xml_list);\n        xml_list = fnToApply(this.workspace_);\n    }\n\n    return xml_list;\n};\n\n/**\n * Used to determine the css classes for the menu item for this category\n * based on its current state.\n * @private\n * @param {boolean=} selected Indication whether the category is currently selected.\n * @return {string} The css class names to be applied, space-separated.\n * deriv-bot: Custom class names\n */\nBlockly.Toolbox.Category.prototype.getMenuItemClassName_ = function (selected) {\n    const classNames = ['toolbox__item', `toolbox__category--${this.id_}`];\n\n    if (selected) {\n        classNames.push('toolbox__category--selected');\n    }\n\n    return classNames.join(' ');\n};\n\n/**\n * Opens the selected category\n * deriv-bot: Category-specific flyouts + removed opt_shouldScroll\n * @param {Blockly.Toolbox.Category} item The category to select.\n * @param {boolean} should_close_on_same_category Close when select the same category\n */\nBlockly.Toolbox.prototype.setSelectedItem = function (item, should_close_on_same_category = true) {\n    const category_item = item;\n    if (category_item === 'search'){\n        if (this.selectedItem_) {\n            this.selectedItem_.setSelected(false);\n        }\n        this.selectedItem_ = null;\n        this.showCategory_('search');\n        return;\n    }\n\n    if (this.selectedItem_) {\n        // They selected a different category but one was already open.  Close it.\n        this.selectedItem_.setSelected(false);\n\n        // Selecting the same category will close it.\n        if (\n            item &&\n            !item.is_category_return_ &&\n            !item.has_child_category_ &&\n            this.selectedItem_.id_ === item.id_ &&\n            should_close_on_same_category\n        ) {\n            this.selectedItem_ = null;\n            if (flyout.is_visible) {\n                flyout.setVisibility(false);\n            }\n            return;\n        }\n    }\n\n    this.selectedItem_ = item;\n\n    if (!item) {\n        flyout.setVisibility(false);\n    } else {\n        const getCategoryTree = (parent_name, parent_id, colour, children) => {\n            const xml_document = document.implementation.createDocument(null, null, null);\n            const el_xml = xml_document.createElement('xml');\n            const parent_category = xml_document.createElement('category');\n\n            parent_category.setAttribute('name', parent_name);\n            parent_category.setAttribute('id', parent_id);\n            parent_category.setAttribute('is_category_return', true);\n            parent_category.setAttribute('colour', colour);\n\n            const el_separator = xml_document.createElement('sep');\n            const category_nodes = [\n                parent_category,\n                el_separator,\n                ...Array.from(children),\n            ];\n\n            category_nodes.forEach(childNode => el_xml.appendChild(childNode));\n            xml_document.appendChild(el_xml);\n            return el_xml;\n        };\n\n        if (this.selectedItem_.is_category_return_) {\n            // Go up a level if this is a return category\n            const findCategory = (category_collection) => {\n                // Finds a category based on `this.selectedItem_.id_` in the given `category_collection`\n                for (let i = 0; i < category_collection.length; i++) {\n                    const el_category = category_collection[i];\n                    const is_correct_child =\n                        el_category.tagName.toUpperCase() === 'CATEGORY' &&\n                        el_category.getAttribute('id') === this.selectedItem_.id_;\n\n                    if (is_correct_child) {\n                        return el_category;\n                    }\n\n                    const category = findCategory(el_category.children);\n                    if (category) {\n                        return category;\n                    }\n                }\n                return null;\n            };\n\n            const { initial_toolbox_xml } = this.workspace_;\n            const toolboxDom = Blockly.Xml.textToDom(initial_toolbox_xml);\n            const selected_category = findCategory(toolboxDom.children);\n\n            if (selected_category) {\n                const el_parent = selected_category.parentElement;\n\n                if (el_parent.tagName === 'xml') {\n                    flyout.setVisibility(false);\n                    this.workspace_.updateToolbox(initial_toolbox_xml);\n                } else {\n                    const newTree = getCategoryTree(\n                        el_parent.getAttribute('name'),\n                        el_parent.getAttribute('id'),\n                        el_parent.getAttribute('colour'),\n                        el_parent.children,\n                    );\n\n                    flyout.setVisibility(false);\n                    this.workspace_.updateToolbox(newTree);\n                }\n            }\n        } else if (this.selectedItem_.has_child_category_) {\n            // Show categories in toolbox that are descendants of `this.selectedItem_`\n            const newTree = getCategoryTree(\n                this.selectedItem_.name_,\n                this.selectedItem_.id_,\n                this.selectedItem_.colour_,\n                this.selectedItem_.contents_,\n            );\n\n            flyout.setVisibility(false);\n            this.workspace_.updateToolbox(newTree);\n        } else {\n            // Show blocks that belong to this category.\n            this.selectedItem_.setSelected(true);\n            this.showCategory_(this.selectedItem_.id_);\n        }\n    }\n};\n\n/**\n * Update the flyout's contents without closing it.  Should be used in response\n * to a change in one of the dynamic categories, such as variables or\n * procedures.\n * deriv-bot: Calls showAll() in Scratch, we don't want that.\n */\nBlockly.Toolbox.prototype.refreshSelection = function () {};\n\n/**\n * Create the DOM for a category in the toolbox.\n * deriv-bot: Custom class names + injection of description\n */\nBlockly.Toolbox.Category.prototype.createDom = function () {\n    const toolbox = this.parent_.parent_;\n    const el_item = goog.dom.createDom('div', this.getMenuItemClassName_());\n\n    this.item_ = el_item;\n\n    if (this.is_category_return_) {\n        const el_return_arrow = goog.dom.createDom('div', 'toolbox__category-arrow toolbox__category-arrow--back');\n        ReactDOM.render(<Arrow1Icon className='arrow' />, el_return_arrow);\n        el_item.appendChild(el_return_arrow);\n    } else {\n        const el_colour = goog.dom.createDom('div', 'toolbox__category-colour');\n        el_item.appendChild(el_colour);\n    }\n\n    const el_label = goog.dom.createDom('div', 'toolbox__label', this.name_);\n    const el_toolbox_text = goog.dom.createDom('div', 'toolbox__category-text');\n\n    this.label_ = el_label;\n    el_toolbox_text.appendChild(el_label);\n\n    if (this.description_) {\n        const el_description = goog.dom.createDom('div', 'toolbox__description', this.description_);\n        el_toolbox_text.appendChild(el_description);\n    }\n\n    el_item.appendChild(el_toolbox_text);\n\n    if (this.has_child_category_) {\n        const el_category_arrow = goog.dom.createDom('div', 'toolbox__category-arrow toolbox__category-arrow--open');\n        ReactDOM.render(<Arrow1Icon className='arrow' />, el_category_arrow);\n        el_item.appendChild(el_category_arrow);\n    } else if (this.iconURI_) {\n        // If category has iconURI attribute, it refers to an entry in our bot-sprite.svg\n        const el_icon = goog.dom.createDom('div', { class: 'toolbox__icon' });\n        // eslint-disable-next-line\n        el_icon.innerHTML = `<svg><use xlink:href=\"${__webpack_public_path__}bot-sprite.svg#${this.iconURI_}\"></use></svg>`;\n        el_item.appendChild(el_icon);\n    }\n\n    this.parentHtml_.appendChild(el_item);\n\n    Blockly.bindEvent_(el_item, 'mouseup', toolbox, toolbox.setSelectedItemFactory(this));\n};\n\n/**\n * Get the contents of this category.\n * @return {!Array|string} xmlList List of blocks to show, or a string with the\n * name of a custom category.\n * deriv-bot: Use this.dynamic_ rather than this.custom_ for dynamic categories\n * if we specify this.custom_, parseContents() is never called (see core/toolbox.js),\n * so we don't get extra props we require. See parseContents_\n */\nBlockly.Toolbox.Category.prototype.getContents = function () {\n    return this.custom_ || this.dynamic_ || this.contents_;\n};\n\n/**\n* Set the contents of this category from DOM.\n* @param {Node} domTree DOM tree of blocks.\n* @constructor\n* deriv-bot: Set some extra properties on the Blockly.Toolbox.Category\n*/\nBlockly.Toolbox.Category.prototype.parseContents_ = function (domTree) {\n    this.description_ = domTree.getAttribute('description');\n    this.dynamic_ = domTree.getAttribute('dynamic');\n    this.is_category_return_ = !!domTree.getAttribute('is_category_return');\n\n    domTree.childNodes.forEach(child => {\n        if (child.tagName) {\n            const tag = child.tagName.toUpperCase();\n\n            if (tag === 'CATEGORY') {\n                this.has_child_category_ = true;\n            }\n\n            switch (tag) {\n                case 'BLOCK':\n                case 'SHADOW':\n                case 'LABEL':\n                case 'BUTTON':\n                case 'SEP':\n                case 'TEXT':\n                case 'CATEGORY':\n                    this.contents_.push(child);\n                    break;\n                default:\n                    break;\n            }\n        }\n    });\n};\n\n/**\n * Set the colour of the category's background from a DOM node.\n * @param {Node} node DOM node with \"colour\" and \"secondaryColour\" attribute.\n *     Colours are a hex string or hue on a colour wheel (0-360).\n * deriv-bot: We don't need secondaryColour\n */\nBlockly.Toolbox.Category.prototype.setColour = function (node) {\n    const colour = node.getAttribute('colour');\n\n    if (goog.isString(colour)) {\n        if (colour.match(/^#[0-9a-fA-F]{6}$/)) {\n            this.colour_ = colour;\n        } else {\n            this.colour_ = Blockly.hueToRgb(colour);\n        }\n        this.hasColours_ = true;\n    } else {\n        this.colour_ = '#000000';\n    }\n};\n\n/**\n * Create the DOM for the category menu.\n * deriv-bot: Custom class names\n */\nBlockly.Toolbox.CategoryMenu.prototype.createDom = function () {\n    const className = this.parent_.horizontalLayout_ ?\n        'toolbox__horizontal-category-menu' :\n        'toolbox__category-menu';\n\n    this.table = goog.dom.createDom('div', className);\n    this.parentHtml_.appendChild(this.table);\n};\n\n/**\n * Fill the toolbox with categories and blocks by creating a new\n * {Blockly.Toolbox.Category} for every category tag in the toolbox xml.\n * @param {Node} domTree DOM tree of blocks, or null.\n */\nBlockly.Toolbox.CategoryMenu.prototype.populate = function (domTree, isSubCategory = false) {\n    if (!domTree) {\n        return;\n    }\n\n    // Remove old categories\n    if (!isSubCategory) {\n        this.dispose();\n        this.createDom();\n    }\n\n    domTree.childNodes.forEach(childNode => {\n        const is_category = () => childNode.tagName && childNode.tagName.toUpperCase() === 'CATEGORY';\n        const is_separator = () => childNode.tagName && childNode.tagName.toUpperCase() === 'SEP';\n\n        if (is_category()) {\n            const row_class = childNode.getAttribute('is_category_return') ?\n                'toolbox__category-return' :\n                'toolbox__row';\n            const el_row = goog.dom.createDom('div', { class: row_class });\n\n            // Convert xml web-class attributes to class attributes in el_row\n            const web_classes = childNode.getAttribute('web-class');\n            if (web_classes) {\n                web_classes.split(' ').forEach(className => el_row.classList.add(className));\n            }\n\n            const toolbox_category = new Blockly.Toolbox.Category(this, el_row, childNode);\n\n            const child = childNode.children;\n            /* eslint-disable consistent-return */\n            const subCategory = Object.keys(child).map(key => {\n                if (child[key].tagName === 'category') {\n                    return child[key];\n                }\n            });\n\n            if (subCategory.length) {\n                this.populate(childNode, true);\n            }\n\n            if (!isSubCategory) {\n                this.table.appendChild(el_row);\n            }\n            this.categories_.push(toolbox_category);\n        } else if (is_separator()) {\n            const el_separator = goog.dom.createDom('div', { class: 'toolbox__separator' });\n            this.table.appendChild(el_separator);\n        }\n    });\n\n    this.height_ = this.table.offsetHeight;\n};\n\nBlockly.Toolbox.prototype.refreshCategory = function() {\n    const category = this.getSelectedItem();\n\n    this.setSelectedItem(category, false);\n};\n"],"sourceRoot":""}