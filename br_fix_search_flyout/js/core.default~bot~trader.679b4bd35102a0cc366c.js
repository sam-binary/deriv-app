(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~bot~trader"],{

/***/ "../../components/lib/radio-group.css":
/*!**********************************************************************************************!*\
  !*** /Users/samyong/Documents/Source_code/deriv-app/packages/components/lib/radio-group.css ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvcmFkaW8tZ3JvdXAuY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy9Vc2Vycy9zYW15b25nL0RvY3VtZW50cy9Tb3VyY2VfY29kZS9kZXJpdi1hcHAvcGFja2FnZXMvY29tcG9uZW50cy9saWIvcmFkaW8tZ3JvdXAuY3NzP2M1NGQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../components/lib/radio-group.css\n");

/***/ }),

/***/ "../../components/lib/radio-group.js":
/*!*********************************************************************************************!*\
  !*** /Users/samyong/Documents/Source_code/deriv-app/packages/components/lib/radio-group.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,t){ true?module.exports=t(__webpack_require__(/*! prop-types */ \"../../components/node_modules/prop-types/index.js\"),__webpack_require__(/*! react */ \"../node_modules/react/index.js\"),__webpack_require__(/*! classnames */ \"../../components/node_modules/classnames/index.js\")):undefined}(window,(function(__WEBPACK_EXTERNAL_MODULE__0__,__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__2__){return function(e){var t={};function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var n in e)r.d(o,n,function(t){return e[t]}.bind(null,n));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=51)}({0:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__0__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJwcm9wLXR5cGVzXCI/MzgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzBfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n\")},1:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__1__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18xX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///1\\n\")},2:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__2__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCI/YWFhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzJfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n\")},39:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvcmFkaW8tZ3JvdXAvcmFkaW8tZ3JvdXAuc2Nzcz9lYjc3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE1NzU5NjE1NTcxMDVcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtaG90LWxvYWRlci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImZpbGVNYXBcIjpcIntmaWxlTmFtZX1cIn0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7O1xuICAgIH1cbiAgIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGdDQUtBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///39\\n\")},51:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(0);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\\n\\n// CONCATENATED MODULE: ./src/components/radio-group/radio.jsx\\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\\n\\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n\\n\\n\\n\\nvar radio_Radio =\\n/*#__PURE__*/\\nfunction (_React$Component) {\\n  _inherits(Radio, _React$Component);\\n\\n  function Radio(props) {\\n    var _this;\\n\\n    _classCallCheck(this, Radio);\\n\\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Radio).call(this, props));\\n\\n    _this.onChange = function (e) {\\n      _this.setState({\\n        checked: e.target.checked\\n      });\\n\\n      _this.props.onChange(e);\\n    };\\n\\n    _this.state = {\\n      checked: props.defaultChecked\\n    };\\n    return _this;\\n  }\\n  /*\\n  * We use componentDidUpdate here to tell the Radio component to update itself\\n  * when it\\'s no longer selected\\n  * This is because we\\'re handling the state of what\\'s selected in RadioGroup with the defaultChecked prop\\n   */\\n\\n\\n  _createClass(Radio, [{\\n    key: \"componentDidUpdate\",\\n    value: function componentDidUpdate(prevProps) {\\n      if (this.props.defaultChecked === prevProps.defaultChecked) {\\n        return;\\n      }\\n\\n      this.setState({\\n        checked: this.props.defaultChecked\\n      });\\n    }\\n  }, {\\n    key: \"render\",\\n    value: function render() {\\n      var _this$props = this.props,\\n          className = _this$props.className,\\n          classNameLabel = _this$props.classNameLabel,\\n          id = _this$props.id,\\n          children = _this$props.children,\\n          onChange = _this$props.onChange,\\n          otherProps = _objectWithoutProperties(_this$props, [\"className\", \"classNameLabel\", \"id\", \"children\", \"onChange\"]);\\n\\n      return external_react_default.a.createElement(\"label\", {\\n        htmlFor: id,\\n        className: external_classnames_default()(\\'dc-radio-group__item\\', className)\\n      }, external_react_default.a.createElement(\"input\", _extends({\\n        className: \"dc-radio-group__input\",\\n        type: \"radio\",\\n        id: id,\\n        onChange: this.onChange\\n      }, otherProps)), external_react_default.a.createElement(\"span\", {\\n        className: external_classnames_default()(\\'dc-radio-group__circle\\', {\\n          \\'dc-radio-group__circle--selected\\': this.state.checked\\n        })\\n      }), external_react_default.a.createElement(\"span\", {\\n        className: external_classnames_default()(\\'dc-radio-group__label\\', classNameLabel)\\n      }, children));\\n    }\\n  }]);\\n\\n  return Radio;\\n}(external_react_default.a.Component);\\n\\nradio_Radio.propTypes = {\\n  children: external_prop_types_default.a.node,\\n  id: external_prop_types_default.a.string,\\n  onClick: external_prop_types_default.a.func,\\n  selected: external_prop_types_default.a.bool,\\n  value: external_prop_types_default.a.bool\\n};\\n/* harmony default export */ var radio_group_radio = (radio_Radio);\\n// CONCATENATED MODULE: ./src/components/radio-group/radio-group.jsx\\nfunction radio_group_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { radio_group_typeof = function _typeof(obj) { return typeof obj; }; } else { radio_group_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return radio_group_typeof(obj); }\\n\\nfunction radio_group_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction radio_group_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction radio_group_createClass(Constructor, protoProps, staticProps) { if (protoProps) radio_group_defineProperties(Constructor.prototype, protoProps); if (staticProps) radio_group_defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction radio_group_possibleConstructorReturn(self, call) { if (call && (radio_group_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return radio_group_assertThisInitialized(self); }\\n\\nfunction radio_group_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction radio_group_getPrototypeOf(o) { radio_group_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return radio_group_getPrototypeOf(o); }\\n\\nfunction radio_group_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) radio_group_setPrototypeOf(subClass, superClass); }\\n\\nfunction radio_group_setPrototypeOf(o, p) { radio_group_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return radio_group_setPrototypeOf(o, p); }\\n\\n\\n\\n\\n\\n\\nvar radio_group_RadioGroup =\\n/*#__PURE__*/\\nfunction (_React$PureComponent) {\\n  radio_group_inherits(RadioGroup, _React$PureComponent);\\n\\n  function RadioGroup() {\\n    radio_group_classCallCheck(this, RadioGroup);\\n\\n    return radio_group_possibleConstructorReturn(this, radio_group_getPrototypeOf(RadioGroup).apply(this, arguments));\\n  }\\n\\n  radio_group_createClass(RadioGroup, [{\\n    key: \"render\",\\n    value: function render() {\\n      var _this = this;\\n\\n      var _this$props = this.props,\\n          selected = _this$props.selected,\\n          items = _this$props.items,\\n          className = _this$props.className;\\n      return external_react_default.a.createElement(\"div\", {\\n        className: external_classnames_default()(\\'dc-radio-group\\', className)\\n      }, items.map(function (item, idx) {\\n        return external_react_default.a.createElement(radio_group_radio, {\\n          key: idx,\\n          id: item.id,\\n          value: item.value,\\n          defaultChecked: item.value === selected,\\n          onChange: _this.props.onToggle,\\n          className: item.className,\\n          name: _this.props.name,\\n          disabled: item.disabled\\n        }, item.label);\\n      }));\\n    }\\n  }]);\\n\\n  return RadioGroup;\\n}(external_react_default.a.PureComponent);\\n\\nradio_group_RadioGroup.propTypes = {\\n  items: external_prop_types_default.a.arrayOf(external_prop_types_default.a.shape({\\n    label: external_prop_types_default.a.node.isRequired,\\n    value: external_prop_types_default.a.bool.isRequired\\n  })),\\n  onToggle: external_prop_types_default.a.func,\\n  selected: external_prop_types_default.a.bool\\n};\\n/* harmony default export */ var radio_group = (radio_group_RadioGroup);\\n// EXTERNAL MODULE: ./src/components/radio-group/radio-group.scss\\nvar radio_group_radio_group = __webpack_require__(39);\\n\\n// CONCATENATED MODULE: ./src/components/radio-group/index.js\\n\\n\\n/* harmony default export */ var components_radio_group = __webpack_exports__[\"default\"] = (radio_group);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvcmFkaW8tZ3JvdXAvcmFkaW8uanN4PzU2MzIiLCJ3ZWJwYWNrOi8vZGVyaXYtY29tcG9uZW50LltuYW1lXS8uL3NyYy9jb21wb25lbnRzL3JhZGlvLWdyb3VwL3JhZGlvLWdyb3VwLmpzeD9jMmQzIiwid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vLi9zcmMvY29tcG9uZW50cy9yYWRpby1ncm91cC9pbmRleC5qcz82NGE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyAgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgICAgICBmcm9tICdyZWFjdCc7XG5cbmNsYXNzIFJhZGlvIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGNoZWNrZWQ6IHByb3BzLmRlZmF1bHRDaGVja2VkLFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8qXG4gICAgKiBXZSB1c2UgY29tcG9uZW50RGlkVXBkYXRlIGhlcmUgdG8gdGVsbCB0aGUgUmFkaW8gY29tcG9uZW50IHRvIHVwZGF0ZSBpdHNlbGZcbiAgICAqIHdoZW4gaXQncyBubyBsb25nZXIgc2VsZWN0ZWRcbiAgICAqIFRoaXMgaXMgYmVjYXVzZSB3ZSdyZSBoYW5kbGluZyB0aGUgc3RhdGUgb2Ygd2hhdCdzIHNlbGVjdGVkIGluIFJhZGlvR3JvdXAgd2l0aCB0aGUgZGVmYXVsdENoZWNrZWQgcHJvcFxuICAgICAqL1xuICAgIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuZGVmYXVsdENoZWNrZWQgPT09IHByZXZQcm9wcy5kZWZhdWx0Q2hlY2tlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGNoZWNrZWQ6IHRoaXMucHJvcHMuZGVmYXVsdENoZWNrZWQgfSk7XG4gICAgfVxuXG4gICAgb25DaGFuZ2UgPSAoZSkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgY2hlY2tlZDogZS50YXJnZXQuY2hlY2tlZCB9KTtcbiAgICAgICAgdGhpcy5wcm9wcy5vbkNoYW5nZShlKTtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgICAgICBjbGFzc05hbWVMYWJlbCxcbiAgICAgICAgICAgIGlkLFxuICAgICAgICAgICAgY2hpbGRyZW4sXG4gICAgICAgICAgICBvbkNoYW5nZSwgLy8gVGhpcyBuZWVkcyB0byBiZSBoZXJlIHNvIGl0J3Mgbm90IGluY2x1ZGVkIGluIGBvdGhlclByb3BzYFxuICAgICAgICAgICAgLi4ub3RoZXJQcm9wc1xuICAgICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9e2lkfSBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ2RjLXJhZGlvLWdyb3VwX19pdGVtJywgY2xhc3NOYW1lKX0+XG4gICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nZGMtcmFkaW8tZ3JvdXBfX2lucHV0J1xuICAgICAgICAgICAgICAgICAgICB0eXBlPSdyYWRpbydcbiAgICAgICAgICAgICAgICAgICAgaWQ9eyBpZCB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5vbkNoYW5nZSB9XG4gICAgICAgICAgICAgICAgICAgIHsgLi4ub3RoZXJQcm9wcyB9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9eyBjbGFzc05hbWVzKCdkYy1yYWRpby1ncm91cF9fY2lyY2xlJywge1xuICAgICAgICAgICAgICAgICAgICAgICAgJ2RjLXJhZGlvLWdyb3VwX19jaXJjbGUtLXNlbGVjdGVkJzogdGhpcy5zdGF0ZS5jaGVja2VkLFxuICAgICAgICAgICAgICAgICAgICB9KSB9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ2RjLXJhZGlvLWdyb3VwX19sYWJlbCcsIGNsYXNzTmFtZUxhYmVsKX0+XG4gICAgICAgICAgICAgICAgICAgIHsgY2hpbGRyZW4gfVxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5SYWRpby5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGlkICAgICAgOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIG9uQ2xpY2sgOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzZWxlY3RlZDogUHJvcFR5cGVzLmJvb2wsXG4gICAgdmFsdWUgICA6IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgUmFkaW87XG4iLCJpbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0ICAgICAgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJhZGlvICAgICAgZnJvbSAnLi9yYWRpby5qc3gnO1xuXG5jbGFzcyBSYWRpb0dyb3VwIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IHNlbGVjdGVkLCBpdGVtcywgY2xhc3NOYW1lIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9eyBjbGFzc05hbWVzKCdkYy1yYWRpby1ncm91cCcsIGNsYXNzTmFtZSkgfT5cbiAgICAgICAgICAgICAgICB7aXRlbXMubWFwKChpdGVtLCBpZHgpID0+IChcbiAgICAgICAgICAgICAgICAgICAgPFJhZGlvXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2lkeH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlkPXtpdGVtLmlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2l0ZW0udmFsdWV9XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q2hlY2tlZD17aXRlbS52YWx1ZSA9PT0gc2VsZWN0ZWR9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5wcm9wcy5vblRvZ2dsZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17aXRlbS5jbGFzc05hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lPXt0aGlzLnByb3BzLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17aXRlbS5kaXNhYmxlZH1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAge2l0ZW0ubGFiZWx9XG4gICAgICAgICAgICAgICAgICAgIDwvUmFkaW8+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cblJhZGlvR3JvdXAucHJvcFR5cGVzID0ge1xuICAgIGl0ZW1zOiBQcm9wVHlwZXMuYXJyYXlPZihcbiAgICAgICAgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgICAgIGxhYmVsOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxuICAgICAgICAgICAgdmFsdWU6IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWQsXG4gICAgICAgIH0pXG4gICAgKSxcbiAgICBvblRvZ2dsZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2VsZWN0ZWQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgUmFkaW9Hcm91cDtcbiIsImltcG9ydCBSYWRpb0dyb3VwIGZyb20gJy4vcmFkaW8tZ3JvdXAuanN4JztcbmltcG9ydCAgICAgICAgICAgICAgICAgJy4vcmFkaW8tZ3JvdXAuc2Nzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IFJhZGlvR3JvdXA7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBQ0E7QUFBQTtBQUNBO0FBREE7QUFDQTtBQUFBO0FBQ0E7QUFGQTtBQXNCQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQXRCQTtBQUNBO0FBREE7QUFIQTtBQU1BO0FBRUE7Ozs7Ozs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTs7O0FBT0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBU0E7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBUUE7QUFDQTtBQURBO0FBREE7QUFLQTtBQUFBO0FBS0E7Ozs7QUF4REE7QUFDQTtBQTBEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQTtBQVFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3ZFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVJBO0FBREE7QUFnQkE7Ozs7QUFyQkE7QUFDQTtBQXVCQTtBQUNBO0FBRUE7QUFDQTtBQUZBO0FBS0E7QUFDQTtBQVJBO0FBV0E7Ozs7O0FDeENBO0FBQ0E7QUFFQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///51\\n')}}).default}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../components/lib/radio-group.js\n");

/***/ }),

/***/ "../../components/lib/tabs.css":
/*!***************************************************************************************!*\
  !*** /Users/samyong/Documents/Source_code/deriv-app/packages/components/lib/tabs.css ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvdGFicy5jc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3NhbXlvbmcvRG9jdW1lbnRzL1NvdXJjZV9jb2RlL2Rlcml2LWFwcC9wYWNrYWdlcy9jb21wb25lbnRzL2xpYi90YWJzLmNzcz81MjFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../components/lib/tabs.css\n");

/***/ }),

/***/ "../../components/lib/tabs.js":
/*!**************************************************************************************!*\
  !*** /Users/samyong/Documents/Source_code/deriv-app/packages/components/lib/tabs.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,t){ true?module.exports=t(__webpack_require__(/*! prop-types */ \"../../components/node_modules/prop-types/index.js\"),__webpack_require__(/*! react */ \"../node_modules/react/index.js\"),__webpack_require__(/*! classnames */ \"../../components/node_modules/classnames/index.js\")):undefined}(window,(function(__WEBPACK_EXTERNAL_MODULE__0__,__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__2__){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=50)}({0:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__0__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJwcm9wLXR5cGVzXCI/MzgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzBfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n\")},1:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__1__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18xX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///1\\n\")},2:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__2__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCI/YWFhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzJfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n\")},41:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvdGFicy90YWJzLnNjc3M/ZDJmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNTc1OTYxNTU3MjMxXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWhvdC1sb2FkZXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJmaWxlTWFwXCI6XCJ7ZmlsZU5hbWV9XCJ9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpOztcbiAgICB9XG4gICJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxnQ0FLQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///41\\n\")},50:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(0);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// CONCATENATED MODULE: ./src/components/tabs/tab.jsx\\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n\\n\\n\\n\\nvar tab_Tab =\\n/*#__PURE__*/\\nfunction (_Component) {\\n  _inherits(Tab, _Component);\\n\\n  function Tab() {\\n    var _getPrototypeOf2;\\n\\n    var _this;\\n\\n    _classCallCheck(this, Tab);\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tab)).call.apply(_getPrototypeOf2, [this].concat(args)));\\n\\n    _this.onClick = function () {\\n      var onClick = _this.props.onClick;\\n      onClick();\\n    };\\n\\n    return _this;\\n  }\\n\\n  _createClass(Tab, [{\\n    key: \"render\",\\n    value: function render() {\\n      var _this$props = this.props,\\n          is_active = _this$props.is_active,\\n          label = _this$props.label;\\n      return external_react_default.a.createElement(\"li\", {\\n        className: external_classnames_default()(\\'dc-tabs__item\\', {\\n          \\'dc-tabs__active\\': is_active\\n        }),\\n        onClick: this.onClick\\n      }, label);\\n    }\\n  }]);\\n\\n  return Tab;\\n}(external_react_[\"Component\"]);\\n\\ntab_Tab.propTypes = {\\n  className: external_prop_types_default.a.string,\\n  is_active: external_prop_types_default.a.bool,\\n  label: external_prop_types_default.a.string,\\n  onClick: external_prop_types_default.a.func\\n};\\n/* harmony default export */ var tab = (tab_Tab);\\n// CONCATENATED MODULE: ./src/components/tabs/tabs.jsx\\nfunction tabs_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { tabs_typeof = function _typeof(obj) { return typeof obj; }; } else { tabs_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return tabs_typeof(obj); }\\n\\nfunction tabs_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction tabs_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction tabs_createClass(Constructor, protoProps, staticProps) { if (protoProps) tabs_defineProperties(Constructor.prototype, protoProps); if (staticProps) tabs_defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction tabs_possibleConstructorReturn(self, call) { if (call && (tabs_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return tabs_assertThisInitialized(self); }\\n\\nfunction tabs_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction tabs_getPrototypeOf(o) { tabs_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return tabs_getPrototypeOf(o); }\\n\\nfunction tabs_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) tabs_setPrototypeOf(subClass, superClass); }\\n\\nfunction tabs_setPrototypeOf(o, p) { tabs_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return tabs_setPrototypeOf(o, p); }\\n\\n\\n\\n\\n\\nvar tabs_Tabs =\\n/*#__PURE__*/\\nfunction (_Component) {\\n  tabs_inherits(Tabs, _Component);\\n\\n  function Tabs(props) {\\n    var _this;\\n\\n    tabs_classCallCheck(this, Tabs);\\n\\n    _this = tabs_possibleConstructorReturn(this, tabs_getPrototypeOf(Tabs).call(this, props));\\n\\n    _this.onClickTabItem = function (index) {\\n      _this.setState({\\n        active_index: index\\n      });\\n\\n      if (typeof _this.props.onClickTabItem === \\'function\\') {\\n        _this.props.onClickTabItem(index);\\n      }\\n    };\\n\\n    _this.state = {\\n      active_index: props.active_index || 0\\n    };\\n    return _this;\\n  }\\n\\n  tabs_createClass(Tabs, [{\\n    key: \"componentDidUpdate\",\\n    value: function componentDidUpdate(prev_props, prev_state) {\\n      if (this.props.active_index && prev_state.active_index !== this.props.active_index) {\\n        this.setState({\\n          active_index: this.props.active_index || 0\\n        });\\n      }\\n    }\\n  }, {\\n    key: \"render\",\\n    value: function render() {\\n      var _this2 = this;\\n\\n      var children = this.props.children;\\n      var active_index = this.state.active_index;\\n      var tab_width = (100 / children.length).toFixed(2);\\n      return external_react_default.a.createElement(\"div\", {\\n        className: \"dc-tabs\",\\n        style: {\\n          \\'--tab-width\\': \"\".concat(tab_width, \"%\")\\n        }\\n      }, external_react_default.a.createElement(\"ul\", {\\n        className: \"dc-tabs__list\"\\n      }, children.map(function (child, index) {\\n        var label = child.props.label;\\n        return external_react_default.a.createElement(tab, {\\n          is_active: index === active_index,\\n          key: label,\\n          label: label,\\n          onClick: function onClick() {\\n            return _this2.onClickTabItem(index);\\n          }\\n        });\\n      }), external_react_default.a.createElement(\"span\", {\\n        className: \"dc-tabs__active-line\"\\n      })), external_react_default.a.createElement(\"div\", {\\n        className: \"dc-tabs__content\"\\n      }, children.map(function (child, index) {\\n        if (index !== active_index) {\\n          return undefined;\\n        }\\n\\n        return child.props.children;\\n      })));\\n    }\\n  }]);\\n\\n  return Tabs;\\n}(external_react_[\"Component\"]);\\n\\ntabs_Tabs.propTypes = {\\n  children: external_prop_types_default.a.instanceOf(Array)\\n};\\n/* harmony default export */ var tabs = (tabs_Tabs);\\n// EXTERNAL MODULE: ./src/components/tabs/tabs.scss\\nvar tabs_tabs = __webpack_require__(41);\\n\\n// CONCATENATED MODULE: ./src/components/tabs/index.js\\n\\n\\n/* harmony default export */ var components_tabs = __webpack_exports__[\"default\"] = (tabs);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvdGFicy90YWIuanN4PzFkOGUiLCJ3ZWJwYWNrOi8vZGVyaXYtY29tcG9uZW50LltuYW1lXS8uL3NyYy9jb21wb25lbnRzL3RhYnMvdGFicy5qc3g/MTQxMyIsIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvdGFicy9pbmRleC5qcz9lOTFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGFzc05hbWVzICAgICAgICAgICBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzICAgICAgICAgICAgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNsYXNzIFRhYiBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgb25DbGljayA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyBvbkNsaWNrIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBvbkNsaWNrKCk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBpc19hY3RpdmUsXG4gICAgICAgICAgICBsYWJlbCxcbiAgICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxsaVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnZGMtdGFic19faXRlbScsXG4gICAgICAgICAgICAgICAgICAgIHsgJ2RjLXRhYnNfX2FjdGl2ZSc6IGlzX2FjdGl2ZSB9XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLm9uQ2xpY2t9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge2xhYmVsfVxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cblRhYi5wcm9wVHlwZXMgPSB7XG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGlzX2FjdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgbGFiZWwgICAgOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIG9uQ2xpY2sgIDogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBUYWI7XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyAgICAgICAgICAgIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFRhYiAgICAgICAgICAgICAgICAgIGZyb20gJy4vdGFiLmpzeCc7XG5cbmNsYXNzIFRhYnMgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICB0aGlzLnN0YXRlID0geyBhY3RpdmVfaW5kZXg6IHByb3BzLmFjdGl2ZV9pbmRleCB8fCAwIH07XG4gICAgfVxuXG4gICAgb25DbGlja1RhYkl0ZW0gPSBpbmRleCA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBhY3RpdmVfaW5kZXg6IGluZGV4IH0pO1xuXG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5wcm9wcy5vbkNsaWNrVGFiSXRlbSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vbkNsaWNrVGFiSXRlbShpbmRleCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZfcHJvcHMsIHByZXZfc3RhdGUpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuYWN0aXZlX2luZGV4ICYmIHByZXZfc3RhdGUuYWN0aXZlX2luZGV4ICE9PSB0aGlzLnByb3BzLmFjdGl2ZV9pbmRleCkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGFjdGl2ZV9pbmRleDogdGhpcy5wcm9wcy5hY3RpdmVfaW5kZXggfHwgMCB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBjaGlsZHJlbiB9ICAgICA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgYWN0aXZlX2luZGV4IH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBjb25zdCB0YWJfd2lkdGggICAgICAgID0gKDEwMCAvIGNoaWxkcmVuLmxlbmd0aCkudG9GaXhlZCgyKTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RjLXRhYnMnIHN0eWxlPXt7ICctLXRhYi13aWR0aCc6IGAke3RhYl93aWR0aH0lYCB9fT5cbiAgICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPSdkYy10YWJzX19saXN0Jz5cbiAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVuLm1hcCgoY2hpbGQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB7IGxhYmVsIH0gPSBjaGlsZC5wcm9wcztcblxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGFiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2FjdGl2ZT17aW5kZXggPT09IGFjdGl2ZV9pbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtsYWJlbH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2xhYmVsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB0aGlzLm9uQ2xpY2tUYWJJdGVtKGluZGV4KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0nZGMtdGFic19fYWN0aXZlLWxpbmUnIC8+XG4gICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZGMtdGFic19fY29udGVudCc+XG4gICAgICAgICAgICAgICAgICAgIHtjaGlsZHJlbi5tYXAoKGNoaWxkLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluZGV4ICE9PSBhY3RpdmVfaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkLnByb3BzLmNoaWxkcmVuO1xuICAgICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuVGFicy5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5pbnN0YW5jZU9mKEFycmF5KSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFRhYnM7XG4iLCJpbXBvcnQgVGFicyBmcm9tICcuL3RhYnMuanN4JztcbmltcG9ydCAnLi90YWJzLnNjc3MnO1xuXG5leHBvcnQgZGVmYXVsdCBUYWJzO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBOzs7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQU1BO0FBRUE7QUFDQTtBQUFBO0FBRUE7QUFKQTtBQVNBOzs7O0FBdEJBO0FBQ0E7QUF3QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBT0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDcENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBQ0E7QUFBQTtBQUNBO0FBREE7QUFDQTtBQUFBO0FBQ0E7QUFGQTtBQU9BO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVZBO0FBQUE7QUFBQTtBQUhBO0FBSUE7QUFDQTs7O0FBU0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7OztBQUVBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFHQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBSkE7QUFPQTtBQUNBO0FBQUE7QUFFQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBSUE7Ozs7QUFyREE7QUFDQTtBQXVEQTtBQUNBO0FBREE7QUFJQTs7Ozs7QUNoRUE7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///50\\n')}}).default}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../components/lib/tabs.js\n");

/***/ }),

/***/ "../../components/lib/underlying-icon.css":
/*!**************************************************************************************************!*\
  !*** /Users/samyong/Documents/Source_code/deriv-app/packages/components/lib/underlying-icon.css ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvdW5kZXJseWluZy1pY29uLmNzcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMvc2FteW9uZy9Eb2N1bWVudHMvU291cmNlX2NvZGUvZGVyaXYtYXBwL3BhY2thZ2VzL2NvbXBvbmVudHMvbGliL3VuZGVybHlpbmctaWNvbi5jc3M/NGYwYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../components/lib/underlying-icon.css\n");

/***/ }),

/***/ "../../components/lib/underlying-icon.js":
/*!*************************************************************************************************!*\
  !*** /Users/samyong/Documents/Source_code/deriv-app/packages/components/lib/underlying-icon.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,n){ true?module.exports=n(__webpack_require__(/*! react */ \"../node_modules/react/index.js\"),__webpack_require__(/*! classnames */ \"../../components/node_modules/classnames/index.js\")):undefined}(window,(function(__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__2__){return function(e){var n={};function c(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,c),r.l=!0,r.exports}return c.m=e,c.c=n,c.d=function(e,n,i){c.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},c.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},c.t=function(e,n){if(1&n&&(e=c(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(c.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var r in e)c.d(i,r,function(n){return e[n]}.bind(null,r));return i},c.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return c.d(n,\"a\",n),n},c.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},c.p=\"\",c(c.s=55)}({1:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__1__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18xX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///1\\n\")},2:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__2__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCI/YWFhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzJfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n\")},43:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvdW5kZXJseWluZy1pY29uL3VuZGVybHlpbmctaWNvbi5zY3NzPzAxNTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTU3NTk2MTU1NzQxOFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1ob3QtbG9hZGVyL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wiZmlsZU1hcFwiOlwie2ZpbGVOYW1lfVwifSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTs7XG4gICAgfVxuICAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsZ0NBS0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///43\\n\")},55:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\\n\\n// CONCATENATED MODULE: ./src/components/underlying-icon/underlying-icon.jsx\\n\\n\\n\\nvar underlying_icon_UnderlyingIcon = function UnderlyingIcon(_ref) {\\n  var market = _ref.market;\\n  return external_react_default.a.createElement(\"div\", {\\n    className: external_classnames_default()(\\'icons-underlying\\', \"icons-underlying__ic-\".concat(market ? market.toUpperCase() : \\'unknown\\'))\\n  });\\n};\\n\\n/* harmony default export */ var underlying_icon = (underlying_icon_UnderlyingIcon);\\n// EXTERNAL MODULE: ./src/components/underlying-icon/underlying-icon.scss\\nvar underlying_icon_underlying_icon = __webpack_require__(43);\\n\\n// CONCATENATED MODULE: ./src/components/underlying-icon/index.js\\n\\n\\n/* harmony default export */ var components_underlying_icon = __webpack_exports__[\"default\"] = (underlying_icon);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvdW5kZXJseWluZy1pY29uL3VuZGVybHlpbmctaWNvbi5qc3g/NzdjMSIsIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvdW5kZXJseWluZy1pY29uL2luZGV4LmpzPzgxYmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUmVhY3QgICAgICBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IFVuZGVybHlpbmdJY29uID0gKHsgbWFya2V0IH0pID0+IChcbiAgICA8ZGl2XG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcbiAgICAgICAgICAgICdpY29ucy11bmRlcmx5aW5nJyxcbiAgICAgICAgICAgIGBpY29ucy11bmRlcmx5aW5nX19pYy0ke21hcmtldCA/IG1hcmtldC50b1VwcGVyQ2FzZSgpIDogJ3Vua25vd24nfWBcbiAgICAgICAgKX1cbiAgICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgVW5kZXJseWluZ0ljb247XG4iLCJpbXBvcnQgVW5kZXJseWluZ0ljb24gZnJvbSAnLi91bmRlcmx5aW5nLWljb24uanN4JztcbmltcG9ydCAgICAgICAgICAgICAgICAgICAgICcuL3VuZGVybHlpbmctaWNvbi5zY3NzJztcblxuZXhwb3J0IGRlZmF1bHQgVW5kZXJseWluZ0ljb247XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFEQTtBQURBO0FBQ0E7QUFRQTs7Ozs7QUNaQTtBQUNBO0FBRUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///55\\n')}}).default}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../components/lib/underlying-icon.js\n");

/***/ })

}]);