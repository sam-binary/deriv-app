{"version":3,"sources":["webpack://deriv-bot/../components/lib/drawer.css","webpack://deriv-bot/./src/assets/sass/scratch/flyout.scss","webpack://deriv-bot/./src/assets/sass/scratch/workspace.scss","webpack://deriv-bot/./src/assets/sass/scratch/toolbox.scss","webpack://deriv-bot/./src/assets/sass/scratch/toolbar.scss","webpack://deriv-bot/../components/lib/button.css","webpack://deriv-bot/../components/lib/input.css","webpack://deriv-bot/../components/lib/checkbox.css","webpack://deriv-bot/../components/lib/modal.css","webpack://deriv-bot/./src/assets/sass/app.scss"],"names":[],"mappings":";AA4pBA,WAAW,iBAAiB,CAAC,OAAO,CAAC,uBAAuB,CAAC,WAAW,CAAC,yBAAyB,CAAC,UAAU,CAAC,qBAAqB,CAAC,8BAA8B,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,kBAAkB,CAAC,sBAAsB,YAAY,CAAC,qBAAqB,CAAC,kBAAkB,CAAC,WAAW,CAAC,mBAAmB,gBAAgB,CAAC,eAAe,CAAC,eAAe,CAAC,gBAAgB,CAAC,iCAAiC,+BAA+B,CAAC,gCAAgC,+BAA+B,CAAC,oBAAoB,WAAW,CAAC,aAAa,CAAC,mBAAmB,gBAAgB,CAAC,eAAe,CAAC,eAAe,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,iCAAiC,4BAA4B,CAAC,gCAAgC,4BAA4B,CAAC,mBAAmB,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,cAAc,CAAC,iCAAiC,wBAAwB,CAAC,gCAAgC,wBAAwB,CAAC,yBAAyB,SAAS,CAAC,+BAA+B,WAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC,sBAAsB,CAAC,YAAY,CAAC,wBAAwB,iBAAiB,CAAC,SAAS,CAAC,UAAU,CAAC,sCAAsC,wBAAwB,CAAC,qCAAqC,wBAAwB,CAAC,6DAA6D,UAAU,CAAC,iBAAiB,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,+BAA+B,OAAO,CAAC,8BAA8B,OAAO,CAAC,iBAAiB,4BAA4B,CAAC,UAAU;;ACAxpD,QAKI,iBAAkB,CAClB,UAAW,CACX,qBA9oBuB,CA+oBvB,4BAA6B,CAC7B,SAAU,CACV,kBAAmB,CACnB,YAAa,CACb,aAAc,CACd,gBAXqB,CAYrB,eAAgB,CAChB,sCAlpB4C,CAmpB5C,eAAgB,CAEhB,iBACI,aAAc,CACjB,gBAEG,MAAO,CACV,yBAEG,kBAvBiB,CAsBpB,uCAIO,mCAAoC,CAJ3C,kDAOO,sBAAuB,CAC1B,gBAGD,WAAY,CACZ,iBAvoBW,CAwoBX,gBAlCqB,CAmCrB,cAAe,CACf,cAAe,CACf,gBAAiB,CACjB,iBAAkB,CAClB,mBAAoB,CACpB,gBAAiB,CACjB,qBAAsB,CACtB,iBAAkB,CAElB,oBACI,UAAW,CACX,cAAe,CACf,sCArrBoC,CAsrBpC,kBAjDa,CAkDhB,oBAEG,wBA/rBe,CAgsBf,UA9rBe,CA+rBlB,qBAEG,iBAAkB,CAClB,4BAA6B,CAC7B,UAntBe,CAgtBlB,2BAMO,YAAa,CAChB,8CAID,eAAgB,CAChB,qBAzsBoC,CA0sBpC,wBApsByB,CAqsB5B,iCAIG,kBAAmB,CACtB,qBAEG,YAAa,CACb,eA7Ea,CA8Eb,kBAAmB,CACtB,oBAEG,gBAAiB,CACpB,sBAEG,gBAAiB,CACjB,YAAa,CACb,wBAAyB,CAC5B,mBAEG,cAAe,CACf,aAxuBe,CAyuBf,iBAAkB,CACrB,0BAEG,eAAgB,CAChB,iBAAkB,CACrB,eAGD,UAAW,CACX,WAAY,CACZ,mBAAoB,CACvB,eAEG,UAAW,CACX,WAAY,CACZ,mBAAoB,CACvB,cAEG,SAAU,CAEV,qBACI,iBAAkB,CAClB,YAAa,CACb,wBAlvByB,CAmvB5B,sBAEG,aAAc,CACd,eAAgB,CAChB,0BAA2B,CAH9B,oCAMO,iBAAkB,CACrB,oBAGD,iBAAkB,CAClB,cAAe,CACf,gBAAiB,CACpB,qBAEG,gBAAiB,CACjB,mBAAoB,CACpB,8BArwByB;;ACooBrC,aACI,iBAAkB,CACrB,aAGG,oBAAqB,CACxB,+BAGG,YAAa;;ACEjB,SAOI,qBALuB,CAMvB,wBAL0B,CAM1B,YAAa,CACb,qBAAsB,CACtB,4BAA6B,CAC7B,eAAgB,CAChB,iBAAkB,CAClB,gBAAiB,CACjB,SAAU,CACV,WAAY,CAEZ,iBApjBA,YAb+B,CAa/B,iBAb+B,CAokB3B,iBAAkB,CAClB,gBAAiB,CACjB,eAAgB,CAChB,wBApBsB,CAqBtB,iBAAkB,CACrB,eAEG,YAAa,CACb,kBAAmB,CACtB,yBAEG,YAAa,CACb,WAAY,CAEZ,+BACI,gBA/BoB,CAgCpB,SAnCe,CAoCf,uBAAwB,CAC3B,+BAEG,iBApCoB,CAqCpB,wBAAyB,CAC5B,0BAGD,SAAU,CACV,aAAc,CACjB,qDAKe,wBArES,CAsEZ,qDAMG,wBA5ES,CAmEhB,+DAEO,wBApEY,CAqEf,+DAMG,wBA3EY,CAkEnB,kEAEO,wBAnEY,CAoEf,kEAMG,wBA1EY,CAiEnB,8DAEO,wBAlEY,CAmEf,8DAMG,wBAzEY,CAgEnB,4DAEO,wBAjEY,CAkEf,4DAMG,wBAxEY,CA+DnB,iEAEO,wBAhEY,CAiEf,iEAMG,wBAvEY,CA8DnB,sDAEO,wBA/DY,CAgEf,sDAMG,wBAtEY,CA6DnB,mDAEO,wBA9DY,CA+Df,mDAMG,wBArEY,CA4DnB,mDAEO,wBA7DY,CA8Df,mDAMG,wBApEY,CA2DnB,oDAEO,wBA5DY,CA6Df,oDAMG,wBAnEY,CA0DnB,oDAEO,wBA3DY,CA4Df,oDAMG,wBAlEY,CAyDnB,+DAEO,wBA1DY,CA2Df,+DAMG,wBAjEY,CAwDnB,wDAEO,wBAzDY,CA0Df,wDAMG,wBAhEY,CAuDnB,oDAEO,wBAxDY,CAyDf,oDAMG,wBA/DY,CAgEf,wBAMT,YAAa,CACb,qBAAsB,CACtB,WAAY,CACZ,YAAa,CACb,eAAgB,CAChB,iBAAkB,CACrB,0BAEG,cAAe,CACf,UA1EmB,CA2EnB,iBAAkB,CAHrB,0CAMO,iBAAyC,CAC5C,wBAGD,iBAAkB,CAClB,WAhFwB,CAiFxB,UAAW,CACd,sBAEG,eAAgB,CACnB,eAEG,YAAa,CACb,iBAAkB,CAClB,iBAzFwB,CAsF3B,mBAMO,WAAY,CACZ,UAAW,CACd,gBAGD,gBAAiB,CACjB,eAAgB,CACnB,cAEG,cAAe,CACf,4BAxGsB,CAsGzB,2BAKO,+BA3GkB,CAsGzB,iFAYmB,gFAA0F,CAZ7G,qEAgBe,sCAA8C,CAC9C,sCAAuC,CAjBtD,2FAYmB,8EAA0F,CAZ7G,+EAgBe,oCAA8C,CAC9C,sCAAuC,CAjBtD,8FAYmB,8EAA0F,CAZ7G,kFAgBe,oCAA8C,CAC9C,sCAAuC,CAjBtD,0FAYmB,gFAA0F,CAZ7G,8EAgBe,sCAA8C,CAC9C,sCAAuC,CAjBtD,wFAYmB,8EAA0F,CAZ7G,4EAgBe,oCAA8C,CAC9C,sCAAuC,CAjBtD,6FAYmB,+EAA0F,CAZ7G,iFAgBe,qCAA8C,CAC9C,sCAAuC,CAjBtD,kFAYmB,+EAA0F,CAZ7G,sEAgBe,qCAA8C,CAC9C,sCAAuC,CAjBtD,+EAYmB,8EAA0F,CAZ7G,mEAgBe,oCAA8C,CAC9C,sCAAuC,CAjBtD,+EAYmB,6EAA0F,CAZ7G,mEAgBe,mCAA8C,CAC9C,sCAAuC,CAjBtD,gFAYmB,+EAA0F,CAZ7G,oEAgBe,qCAA8C,CAC9C,sCAAuC,CAjBtD,gFAYmB,8EAA0F,CAZ7G,oEAgBe,oCAA8C,CAC9C,sCAAuC,CAjBtD,2FAYmB,8EAA0F,CAZ7G,+EAgBe,oCAA8C,CAC9C,sCAAuC,CAjBtD,oFAYmB,6EAA0F,CAZ7G,wEAgBe,mCAA8C,CAC9C,sCAAuC,CAjBtD,gFAYmB,+EAA0F,CAZ7G,oEAgBe,qCAA8C,CAC9C,sCAAuC,CAC1C,oBAKT,cAAe,CACf,4BA9HsB,CAH9B,uBAoIQ,YAAa,CACb,iBAAkB,CAClB,wBAAuB,CACvB,UAAW,CACX,cAAe,CACf,eAAgB;;AC1JxB,SAGI,YAAa,CACb,cAAe,CACf,6BAA8B,CAE9B,kBACI,YAAa,CACb,cAAe,CAFlB,oBAKO,iBAAkB,CAClB,UAAW,CANlB,kEAUO,wBAAgD,CAVvD,iCAaO,UAlBoB,CAmBvB,mBAIG,cAAe,CACf,WAAY,CACf,gBAGD,YAAa,CACb,iBAloBW,CAmoBX,uCA5pB+C,CA8pB9C,sBAEO,iBAAkB,CAClB,YAAa,CAChB,eAIL,SAAU,CACV,cAAe,CAEf,qBACI,eAAgB,CAChB,gBAAiB,CACpB,qBAQD,WAAY,CACf,kCAGO,uBAAwB,CA/b5B,gDAkcQ,oBA5rBqB,CA0P7B,+CAkcQ,iBAtsBW,CA4QlB,mCAtJL,6BAnB6C,CA0mBxC,+BAIG,YAAa,CACb,sBAAuB,CAC1B,kCAIG,gBAAiB,CACpB,yBAQD,gBAAiB,CACjB,iBA7rBW,CA8rBX,iBAAkB,CAClB,cAAe,CA7mBnB,YAb+B,CA2J3B,uCAmeI,oBA7tByB,CA0P7B,sCAmeI,iBAvuBe,CA4QlB,8BArHD,eA9C2B,CAiD3B,qBAvJwC,CA0JxC,eAoNU,CAjNV,mBA2kBmD,CAxkBnD,eAsNS,CAnNT,gBAwNU,CA8WT,qCAtnBL,iBAb+B,CA8C3B,eA9C2B,CAiD3B,qBAvJwC,CA0JxC,eAsNU,CAnNV,mBA+kByD,CA5kBzD,eAsNS,CAhNT,eAsNS,CA3HT,+CA+eQ,oBAzuBqB,CA0P7B,8CA+eQ,oBAzuBqB,CA0P7B,oEAofY,aA9uBiB,CA0P7B,mEAofY,aA9uBiB,CA0P7B,iEAyfY,oBAnvBiB,CA0P7B,gEAyfY,oBAnvBiB,CAkQ5B,0BAtJL,UAb+B,CA2pB3B,iBAAkB,CACrB,qBA/oBD,cAnB6C,CAqqB5C,qBAjnBG,eA9C2B,CAiD3B,qBAvJwC,CA0JxC,eAsNU,CAnNV,yBA0mByD,CAvmBzD,iBAqNW,CA5MX,gBAoNU,CA2YV,gBAAiB,CArpBrB,cAnB6C,CA0qB5C,6BAKG,cAAe,CA5pBnB,cAb+B,CA2J3B,2CA4gBI,aArxBe,CAyQnB,0CA4gBI,aArxBe;;AC4oB3B,KAAK,cAAc,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,cAAc,CAAC,kBAAkB,CAAC,eAAe,CAAC,YAAY,CAAC,QAAQ,CAAC,iBAAiB,CAAC,YAAY,CAAC,eAAe,CAAC,qDAAqD,CAAC,SAAS,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,WAAW,eAAe,CAAC,qBAAqB,CAAC,eAAe,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,eAAe,CAAC,WAAW,eAAe,CAAC,eAAe,CAAC,YAAY,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,2BAA2B,oBAAoB,CAAC,yBAAyB,UAAU,CAAC,sBAAsB,eAAe,CAAC,4CAA4C,gCAAgC,CAAC,6CAA6C,eAAe,CAAC,sDAAsD,mBAAmB,CAAC,qBAAqB,kBAAkB,CAAC,2CAA2C,kBAAkB,CAAC,4CAA4C,kBAAkB,CAAC,qDAAqD,sBAAsB,CAAC,+CAA+C,2BAA2B,CAAC,kBAAkB,CAAC,qEAAqE,sBAAsB,CAAC,gBAAgB,sBAAsB,CAAC,mCAAmC,UAAU,CAAC,8CAA8C,gCAAgC,CAAC,+CAA+C,UAAU,CAAC,wDAAwD,mBAAmB,CAAC,uBAAuB,wBAAwB,CAAC,kCAAkC,aAAa,CAAC,6CAA6C,wBAAwB,CAAC,aAAa,CAAC,8BAA8B,CAAC,8CAA8C,wBAAwB,CAAC,aAAa,CAAC,uDAAuD,sBAAsB,CAAC,mDAAmD,2BAA2B,CAAC,mBAAmB,CAAC,iCAAiC,CAAC,6BAA6B,CAAC,WAAW,eAAe,CAAC,sBAAsB,aAAa,CAAC,iCAAiC,kBAAkB,CAAC,uCAAuC,aAAa,CAAC,2CAA2C,sBAAsB,CAAC,yCAAyC,iCAAiC,CAAC,4CAA4C,CAAC,6BAA6B,CAAC,+DAA+D,iCAAiC,CAAC,gBAAgB,iCAAiC,CAAC,mCAAmC,CAAC,aAAa,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,2BAA2B,aAAa,CAAC,qCAAqC,UAAU,CAAC,iBAAiB,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,WAAW,CAAC,2BAA2B,CAAC,4BAA4B,CAAC,aAAa,CAAC,wBAAwB,GAAG,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC,gBAAgB;;ACAvlG,gBAAgB,iBAAiB,CAAC,QAAQ,CAAC,0BAA0B,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,6BAA6B,CAAE,MAEvI,sBAAc,CAAS,wBAAgB,CAAS,wBAAgB,CAAS,wBAAgB,CAAS,sBAAc,CAAS,oBAAY,CAAS,sBAAc,CAAS,sBAAc,CAAS,sBAAc,CAAS,uBAAe,CAAS,uBAAe,CAAS,uBAAe,CAAS,uBAAe,CAAS,uBAAe,CAAS,qBAAa,CAAS,sBAAc,CAAS,qBAAa,CAAS,uBAAe,CAAS,sBAAe,CAAQ,qBAAc,CAAQ,oBAAe,CAAM,qBAAc,CAAQ,qBAAc,CAAQ,sBAAe,CAAQ,uBAAgB,CAAQ,0BAAkB,CAAS,2BAAmB,CAAS,0BAAkB,CAAS,uBAAe,CAAS,0BAAkB,CAAS,mBAAmB,gCAAa,CAAoB,kCAAe,CAAoB,mCAAe,CAAqB,oBAAoB,gCAAa,CAAoB,oCAAe,CAAsB,oCAAe,CAAsB,UAAU,iBAAiB,CAAC,UAAU,CAAC,iBAAiB,CAAC,oCAAoC,CAAC,YAAY,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,uBAAuB,+BAA+B,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,CAAC,4BAA4B,CAAC,mBAAmB,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,8BAA8B,SAAS,CAAC,wBAAwB,CAAC,mDAAmD,WAAW,CAAC,uBAAuB,YAAY,CAAC,+BAA+B,iDAAiD,CAAC,wBAAwB,CAAC,aAAa,CAAC,6CAA6C,qBAAqB,CAAC,4CAA4C,wBAAwB,CAAC,oCAAoC,WAAW,CAAC,0EAA0E,iDAAiD,CAAC,yBAAyB,CAAC,aAAa,CAAC,wFAAwF,qBAAqB,CAAC,uFAAuF,wBAAwB,CAAC,kHAAkH,uBAAuB,CAAC,QAAQ,CAAC,wBAAwB,gBAAgB,CAAC,UAAU,CAAC,iBAAiB,CAAC,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,4BAA4B,CAAC,yCAAyC,8BAA8B,CAAC,yBAAyB,8BAA8B,CAAC,iBAAiB,4BAA4B,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,SAAS,CAAC,QAAQ,CAAC,gDAAgD,uBAAuB,CAAC,yBAAyB,CAAC,uBAAuB,CAAC,gCAAgC,iDAAiD,CAAC,wBAAwB,CAAC,aAAa,CAAC,8CAA8C,qBAAqB,CAAC,6CAA6C,wBAAwB;;ACFz/F,aAAa,YAAY,CAAC,0BAA0B,CAAC,cAAc,CAAC,kBAAkB,CAAC,oBAAoB,YAAY,CAAC,kBAAkB,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,2BAA2B,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,0BAA0B,WAAW,CAAC,qBAAqB;;ACAxW,mDAAmD,oBAAoB,CAAC,qDAAqD,sBAAsB,CAAC,kDAAkD,SAAS,CAAC,oDAAoD,WAAW,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,CAAC,eAAe,CAAC,iBAAiB,CAAC,8GAA8G,CAAC,mCAAmC,qBAAqB,CAAC,sCAAsC,CAAC,kCAAkC,wBAAwB,CAAC,uCAAuC,CAAC,2BAA2B,YAAY,CAAC,uDAAuD,0BAA0B,CAAC,SAAS,CAAC,mBAAmB,CAAC,iCAAiC,uBAAuB,CAAC,SAAS,CAAC,mBAAmB,CAAC,iBAAiB,YAAY,CAAC,6BAA6B,CAAC,UAAU,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,CAAC,eAAe,CAAC,yBAAyB,CAAC,eAAe,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,YAAY,CAAC,sCAAsC,qBAAqB,CAAC,qCAAqC,UAAU,CAAC,0BAA0B,WAAW,CAAC,YAAY,CAAC,gBAAgB,CAAC,wBAAwB,aAAa,CAAC,cAAc,CAAC,kBAAkB;;ACGn5C,WACI,YAAa,CADjB,aAIQ,iBAAkB,CACrB,gBAEG,UAjpBmB,CAkpBnB,eAAgB,CAChB,gBAAiB,CACjB,iBAAkB,CACrB,aAID,YAAa,CAChB,IAGG,SAAU,CACV,UAAW,CACX,uCAppBmD,CAqpBtD,MAGG,qBAAsB","file":"bot.css","sourcesContent":["/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_BLACK_2    : #1d1f20;\n$COLOR_BLACK_3    : #0e0e0e;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_GREEN_4    : #00a79e;\n$COLOR_GREEN_5    : #4bb4b3;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_RED_2      : #cc2e3d;\n$COLOR_RED_3      : #ec3f3f;\n$COLOR_CORAL_RED  : #ff444f;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n$COLOR_BLUE       : #1c5ae3;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3         : #eaeced;\n$COLOR_LIGHT_GRAY_4         : #6e6e6e;\n$COLOR_LIGHT_GRAY_5         : #c2c2c2;\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n$COLOR_DARK_GRAY_4         : #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_BLACK, 0.28),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.6),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        digit_widget_background_color    : $COLOR_WHITE,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_DARK_GRAY_4,\n        digit_widget_selected            : $COLOR_GREEN_5,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_5, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_color        : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_LIGHT_GRAY_3,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_5,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_5,\n        digit_widget_value_color         : $COLOR_LIGHT_BLACK_1,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.12),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_LIGHT_GRAY_1,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_1, 0.12),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.28),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        digit_widget_background_color    : $COLOR_BLACK_3,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_LIGHT_GRAY_5,\n        digit_widget_selected            : $COLOR_GREEN_4,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_4, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_LIGHT_GRAY_5,\n        digit_widget_stroke_color        : $COLOR_LIGHT_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_BLACK_2,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_4,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_4,\n        digit_widget_value_color         : $COLOR_WHITE,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.28),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_WHITE,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n);\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon.active;\n        }\n*/\n\n%inline-icon {\n    @include themify($themes) {\n        @include colorIcon(themed('text_primary_color'), none);\n\n        &.active {\n            @include colorIcon(themed('navbar_background_color'), themed('navbar_active_color'), themed('navbar_active_color'), none);\n        }\n        &.disabled {\n            @include colorIcon(themed('disabled_color'), none);\n        }\n        &.white {\n            @include colorIcon(themed('text_color'));\n        }\n        &.border_hover_color {\n            @include colorIcon(themed('border_hover_color'));\n        }\n        &.secondary {\n            @include colorIcon(themed('text_secondary_color'));\n        }\n    }\n}\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n.dc-drawer{position:absolute;top:1px;left:calc(100vw - 18px);width:366px;height:calc(100vh - 82px);z-index:99;will-change:transform;transition:transform 0.3s ease}.theme--light .dc-drawer{background:#fff}.theme--dark .dc-drawer{background:#101320}.dc-drawer__container{display:flex;flex-direction:column;padding-left:0.5em;height:100%}.dc-drawer__header{line-height:40px;font-weight:700;font-size:1.6em;padding-left:1em}.theme--light .dc-drawer__header{border-bottom:1px solid #f4f4f6}.theme--dark .dc-drawer__header{border-bottom:1px solid #101320}.dc-drawer__content{flex-grow:1;padding:1.6em}.dc-drawer__footer{line-height:40px;font-weight:700;font-size:1.6em;align-items:center;padding-left:1em}.theme--light .dc-drawer__footer{border-top:1px solid #f4f4f6}.theme--dark .dc-drawer__footer{border-top:1px solid #101320}.dc-drawer__toggle{position:absolute;top:0;width:18px;height:100vh;display:table-cell;vertical-align:middle;cursor:pointer}.theme--light .dc-drawer__toggle{background-color:#f4f4f6}.theme--dark .dc-drawer__toggle{background-color:#0b0e18}.dc-drawer__toggle--open{width:5px}.dc-drawer__toggle-icon-wraper{height:11px;position:relative;top:50%;justify-content:center;display:flex}.dc-drawer__toggle-icon{position:relative;width:3px;height:3px}.theme--light .dc-drawer__toggle-icon{background-color:#b3b3b3}.theme--dark .dc-drawer__toggle-icon{background-color:#282a37}.dc-drawer__toggle-icon:before,.dc-drawer__toggle-icon:after{content:'';position:absolute;width:100%;height:100%;left:0;background-color:inherit;border-radius:inherit}.dc-drawer__toggle-icon:before{top:4px}.dc-drawer__toggle-icon:after{top:8px}.dc-drawer--open{transform:translateX(-366px);left:100vw}\n\n","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_BLACK_2    : #1d1f20;\n$COLOR_BLACK_3    : #0e0e0e;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_GREEN_4    : #00a79e;\n$COLOR_GREEN_5    : #4bb4b3;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_RED_2      : #cc2e3d;\n$COLOR_RED_3      : #ec3f3f;\n$COLOR_CORAL_RED  : #ff444f;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n$COLOR_BLUE       : #1c5ae3;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3         : #eaeced;\n$COLOR_LIGHT_GRAY_4         : #6e6e6e;\n$COLOR_LIGHT_GRAY_5         : #c2c2c2;\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n$COLOR_DARK_GRAY_4         : #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_BLACK, 0.28),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.6),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        digit_widget_background_color    : $COLOR_WHITE,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_DARK_GRAY_4,\n        digit_widget_selected            : $COLOR_GREEN_5,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_5, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_color        : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_LIGHT_GRAY_3,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_5,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_5,\n        digit_widget_value_color         : $COLOR_LIGHT_BLACK_1,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.12),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_LIGHT_GRAY_1,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_1, 0.12),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.28),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        digit_widget_background_color    : $COLOR_BLACK_3,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_LIGHT_GRAY_5,\n        digit_widget_selected            : $COLOR_GREEN_4,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_4, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_LIGHT_GRAY_5,\n        digit_widget_stroke_color        : $COLOR_LIGHT_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_BLACK_2,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_4,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_4,\n        digit_widget_value_color         : $COLOR_WHITE,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.28),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_WHITE,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n);\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon.active;\n        }\n*/\n\n%inline-icon {\n    @include themify($themes) {\n        @include colorIcon(themed('text_primary_color'), none);\n\n        &.active {\n            @include colorIcon(themed('navbar_background_color'), themed('navbar_active_color'), themed('navbar_active_color'), none);\n        }\n        &.disabled {\n            @include colorIcon(themed('disabled_color'), none);\n        }\n        &.white {\n            @include colorIcon(themed('text_color'));\n        }\n        &.border_hover_color {\n            @include colorIcon(themed('border_hover_color'));\n        }\n        &.secondary {\n            @include colorIcon(themed('text_secondary_color'));\n        }\n    }\n}\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n.flyout {\n    $flyout        : &;\n    $default-margin: 15px;\n    $button-padding: 5px 20px;\n\n    position: absolute;\n    left: 250px;\n    background-color: $COLOR_WHITE;\n    max-height: calc(100% - 40px);\n    z-index: 1;\n    border-radius: 10px;\n    padding: 25px;\n    font-size: 2em;\n    margin-left: $default-margin;\n    margin-top: 20px;\n    box-shadow: 0 2px 8px 0 $COLOR_LIGHT_BLACK_2;\n    min-width: 400px;\n\n    &__content {\n        overflow: auto;\n    }\n    &__search {\n        left: 0;\n    }\n    &__block-workspace {\n        margin-bottom: $default-margin;\n\n        * .blocklySvg {\n            background-color: inherit !important;\n        }\n        * .blocklyMainBackground {\n            stroke: none !important;\n        }\n    }\n    &__button {\n        border: none;\n        border-radius: $BORDER_RADIUS;\n        padding: $button-padding;\n        cursor: pointer;\n        font-size: 14px;\n        font-weight: bold;\n        font-style: normal;\n        font-stretch: normal;\n        line-height: 1.43;\n        letter-spacing: normal;\n        text-align: center;\n\n        &-new {\n            width: 100%;\n            font-size: 100%;\n            box-shadow: 0 2px 8px 0 $COLOR_LIGHT_BLACK_2;\n            margin-bottom: $default-margin;\n        }\n        &-add {\n            background-color: $COLOR_CORAL_RED;\n            color: $COLOR_WHITE;\n        }\n        &-back {\n            align-self: center;\n            background-color: transparent;\n            color: $COLOR_BLACK;\n\n            &:focus {\n                outline: none;\n            }\n        }\n        &-next,\n        &-previous {\n            margin-left: 1em;\n            color: $COLOR_LIGHT_BLACK_1;\n            background-color: $COLOR_LIGHT_BLACK_4_SOLID;\n        }\n    }\n    &__item {\n        &:not(:last-of-type) {\n            margin-bottom: 30px;\n        }\n        &-header {\n            display: flex;\n            margin-top: $default-margin;\n            margin-bottom: 10px;\n        }\n        &-label {\n            font-weight: bold;\n        }\n        &-buttons {\n            margin-left: auto;\n            display: flex;\n            justify-content: flex-end;\n        }\n        &-info {\n            cursor: pointer;\n            color: $COLOR_RED;\n            margin-left: 0.2em;\n        }\n        &-description {\n            font-size: 0.8em;\n            margin-bottom: 1em;\n        }\n    }\n    &__image {\n        width: 100%;\n        height: auto;\n        border-radius: 0.5em;\n    }\n    &__video {\n        width: 100%;\n        height: 20vh;\n        border-radius: 0.5em;\n    }\n    &__help {\n        padding: 0;\n\n        &-header {\n            padding: 1.2em 1em;\n            display: flex;\n            background-color: $COLOR_LIGHT_BLACK_4_SOLID;\n        }\n        &-content {\n            padding: 1.5em;\n            overflow-y: auto;\n            height: calc(100vh - 300px);\n\n            #{$flyout}__item {\n                margin-bottom: 2em;\n            }\n        }\n        &-title {\n            align-self: center;\n            font-size: 25px;\n            font-weight: bold;\n        }\n        &-footer {\n            text-align: right;\n            padding: 1.2em 0.8em;\n            border-top: solid 0.1em $COLOR_LIGHT_BLACK_4_SOLID;\n        }\n    }\n}\n","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_BLACK_2    : #1d1f20;\n$COLOR_BLACK_3    : #0e0e0e;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_GREEN_4    : #00a79e;\n$COLOR_GREEN_5    : #4bb4b3;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_RED_2      : #cc2e3d;\n$COLOR_RED_3      : #ec3f3f;\n$COLOR_CORAL_RED  : #ff444f;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n$COLOR_BLUE       : #1c5ae3;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3         : #eaeced;\n$COLOR_LIGHT_GRAY_4         : #6e6e6e;\n$COLOR_LIGHT_GRAY_5         : #c2c2c2;\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n$COLOR_DARK_GRAY_4         : #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_BLACK, 0.28),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.6),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        digit_widget_background_color    : $COLOR_WHITE,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_DARK_GRAY_4,\n        digit_widget_selected            : $COLOR_GREEN_5,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_5, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_color        : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_LIGHT_GRAY_3,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_5,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_5,\n        digit_widget_value_color         : $COLOR_LIGHT_BLACK_1,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.12),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_LIGHT_GRAY_1,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_1, 0.12),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.28),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        digit_widget_background_color    : $COLOR_BLACK_3,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_LIGHT_GRAY_5,\n        digit_widget_selected            : $COLOR_GREEN_4,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_4, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_LIGHT_GRAY_5,\n        digit_widget_stroke_color        : $COLOR_LIGHT_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_BLACK_2,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_4,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_4,\n        digit_widget_value_color         : $COLOR_WHITE,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.28),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_WHITE,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n);\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon.active;\n        }\n*/\n\n%inline-icon {\n    @include themify($themes) {\n        @include colorIcon(themed('text_primary_color'), none);\n\n        &.active {\n            @include colorIcon(themed('navbar_background_color'), themed('navbar_active_color'), themed('navbar_active_color'), none);\n        }\n        &.disabled {\n            @include colorIcon(themed('disabled_color'), none);\n        }\n        &.white {\n            @include colorIcon(themed('text_color'));\n        }\n        &.border_hover_color {\n            @include colorIcon(themed('border_hover_color'));\n        }\n        &.secondary {\n            @include colorIcon(themed('text_secondary_color'));\n        }\n    }\n}\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n// #scratch_area {\n//     position: absolute;\n//     height: 100%;\n//     width: 100%;\n// }\n\n#scratch_div {\n    position: absolute;\n}\n\n.blocklyText {\n    fill: #000 !important;\n}\n\n.blocklyMainWorkspaceScrollbar {\n    display: none;\n}","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_BLACK_2    : #1d1f20;\n$COLOR_BLACK_3    : #0e0e0e;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_GREEN_4    : #00a79e;\n$COLOR_GREEN_5    : #4bb4b3;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_RED_2      : #cc2e3d;\n$COLOR_RED_3      : #ec3f3f;\n$COLOR_CORAL_RED  : #ff444f;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n$COLOR_BLUE       : #1c5ae3;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3         : #eaeced;\n$COLOR_LIGHT_GRAY_4         : #6e6e6e;\n$COLOR_LIGHT_GRAY_5         : #c2c2c2;\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n$COLOR_DARK_GRAY_4         : #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_BLACK, 0.28),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.6),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        digit_widget_background_color    : $COLOR_WHITE,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_DARK_GRAY_4,\n        digit_widget_selected            : $COLOR_GREEN_5,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_5, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_color        : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_LIGHT_GRAY_3,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_5,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_5,\n        digit_widget_value_color         : $COLOR_LIGHT_BLACK_1,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.12),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_LIGHT_GRAY_1,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_1, 0.12),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.28),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        digit_widget_background_color    : $COLOR_BLACK_3,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_LIGHT_GRAY_5,\n        digit_widget_selected            : $COLOR_GREEN_4,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_4, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_LIGHT_GRAY_5,\n        digit_widget_stroke_color        : $COLOR_LIGHT_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_BLACK_2,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_4,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_4,\n        digit_widget_value_color         : $COLOR_WHITE,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.28),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_WHITE,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n);\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon.active;\n        }\n*/\n\n%inline-icon {\n    @include themify($themes) {\n        @include colorIcon(themed('text_primary_color'), none);\n\n        &.active {\n            @include colorIcon(themed('navbar_background_color'), themed('navbar_active_color'), themed('navbar_active_color'), none);\n        }\n        &.disabled {\n            @include colorIcon(themed('disabled_color'), none);\n        }\n        &.white {\n            @include colorIcon(themed('text_color'));\n        }\n        &.border_hover_color {\n            @include colorIcon(themed('border_hover_color'));\n        }\n        &.secondary {\n            @include colorIcon(themed('text_secondary_color'));\n        }\n    }\n}\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n$category-colours: (\n    search          : #afffda,\n    trade_parameters   : #30409f,\n    purchase_conditions: #00897b,\n    sell_conditions    : #78909c,\n    trade_results      : #d81a60,\n    technical_analysis : #689e38,\n    utility            : #8e25aa,\n    math               : #fc8b01,\n    text               : #5d4037,\n    logic              : #1876d2,\n    lists              : #e53836,\n    custom_functions   : #00acc1,\n    variables          : #616161,\n    loops              : #afb42b,\n);\n\n.toolbox {\n    $toolbox         : &;\n    $white           : #fff;\n    $lightgrey       : #ebebeb;\n    $grey            : #f4f4f6;\n    $category-text-spacing: 15px;\n\n    background-color: $white;\n    border: 1px solid $lightgrey;\n    display: flex;\n    flex-direction: column;\n    max-height: calc(100% - 40px);\n    overflow: hidden;\n    position: absolute;\n    user-select: none;\n    z-index: 1;\n    width: 250px;\n\n    &__header {\n        @include toEm(padding, 8px);\n        @include toEm(margin-bottom, 10px);\n        position: relative;\n        font-weight: bold;\n        font-size: 1.6em;\n        background-color: $grey;\n        text-align: center;\n    }\n    &__item {\n        display: flex;\n        flex-direction: row;\n    }\n    &__category-arrow {\n        display: flex;\n        margin: auto;\n\n        &--back {\n            margin-left: $category-text-spacing;\n            fill: $white;\n            transform: rotate(90deg);\n        }\n        &--open {\n            margin-right: $category-text-spacing;\n            transform: rotate(270deg);\n        }\n    }\n    &__category-colour {\n        width: 5px;\n        flex-shrink: 0;\n    }\n    @each $category, $colour in $category-colours {\n        &__category {\n            &--#{$category} {\n                #{$toolbox}__category-colour {\n                    background-color: $colour;\n                }\n            }\n        }\n        &__category-return {\n            #{$toolbox}__category {\n                &--#{$category} {\n                    background-color: $colour;\n                }\n            }\n        }\n    }\n\n    &__category-menu {\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n        min-height: 0;\n        overflow-y: auto;\n        overflow-x: hidden;\n    }\n    &__category-return {\n        cursor: pointer;\n        color: $white;\n        text-align: center;\n\n        #{$toolbox}__label {\n            margin-left: -($category-text-spacing * 2);\n        }\n    }\n    &__category-text {\n        align-self: center;\n        margin: $category-text-spacing;\n        width: 100%;\n    }\n    &__description {\n        font-size: 1.3em;\n    }\n    &__icon {\n        display: flex;\n        align-self: center;\n        margin-right: $category-text-spacing;\n\n        > svg {\n            height: 25px;\n            width: 25px;\n        }\n    }\n    &__label {\n        font-weight: bold;\n        font-size: 1.6em;\n    }\n    &__row {\n        cursor: pointer;\n        border-top: 1px solid $lightgrey;\n\n        &:last-of-type {\n            border-bottom: 1px solid $lightgrey;\n        }\n\n        @each $category, $colour in $category-colours {\n            #{$toolbox}__category {\n                &--#{$category} {\n                    &:hover:not(#{$toolbox}__category--selected) {\n                        background-image: linear-gradient(to right, $white 25%, transparentize($colour, 0.8) 100%);\n                    }\n                }\n                &--#{$category}#{$toolbox}__category--selected {\n                    background-color: transparentize($colour, 0.9);\n                    transition: background-color 0.25s ease;\n                }\n            }\n        }\n    }\n    &__separator {\n        padding: 20px 0;\n        border-top: 1px solid $lightgrey;\n    }\n    #search_input {\n        padding: 10px;\n        border-radius: 5px;\n        border: solid $grey 1px;\n        margin: 3px;\n        font-size: 14px;\n        font-weight: 700;\n    }\n}","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_BLACK_2    : #1d1f20;\n$COLOR_BLACK_3    : #0e0e0e;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_GREEN_4    : #00a79e;\n$COLOR_GREEN_5    : #4bb4b3;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_RED_2      : #cc2e3d;\n$COLOR_RED_3      : #ec3f3f;\n$COLOR_CORAL_RED  : #ff444f;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n$COLOR_BLUE       : #1c5ae3;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3         : #eaeced;\n$COLOR_LIGHT_GRAY_4         : #6e6e6e;\n$COLOR_LIGHT_GRAY_5         : #c2c2c2;\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n$COLOR_DARK_GRAY_4         : #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_BLACK, 0.28),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.6),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        digit_widget_background_color    : $COLOR_WHITE,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_DARK_GRAY_4,\n        digit_widget_selected            : $COLOR_GREEN_5,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_5, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_color        : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_LIGHT_GRAY_3,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_5,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_5,\n        digit_widget_value_color         : $COLOR_LIGHT_BLACK_1,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.12),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_LIGHT_GRAY_1,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_1, 0.12),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.28),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        digit_widget_background_color    : $COLOR_BLACK_3,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_LIGHT_GRAY_5,\n        digit_widget_selected            : $COLOR_GREEN_4,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_4, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_LIGHT_GRAY_5,\n        digit_widget_stroke_color        : $COLOR_LIGHT_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_BLACK_2,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_4,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_4,\n        digit_widget_value_color         : $COLOR_WHITE,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.28),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_WHITE,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n);\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon.active;\n        }\n*/\n\n%inline-icon {\n    @include themify($themes) {\n        @include colorIcon(themed('text_primary_color'), none);\n\n        &.active {\n            @include colorIcon(themed('navbar_background_color'), themed('navbar_active_color'), themed('navbar_active_color'), none);\n        }\n        &.disabled {\n            @include colorIcon(themed('disabled_color'), none);\n        }\n        &.white {\n            @include colorIcon(themed('text_color'));\n        }\n        &.border_hover_color {\n            @include colorIcon(themed('border_hover_color'));\n        }\n        &.secondary {\n            @include colorIcon(themed('text_secondary_color'));\n        }\n    }\n}\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n.toolbar {\n    $toolbar: &;\n    $toolbar_buttons_height: 5em;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n    &__section {\n        display: flex;\n        flex-wrap: wrap;\n\n        > * {\n            align-self: center;\n            margin: 1em;\n        }\n        > #{$toolbar}__btn,\n        #{$toolbar}__group {\n            height: calc(#{$toolbar_buttons_height} - 0.6em);\n        }\n        > #{$toolbar}__form {\n            height: $toolbar_buttons_height;\n        }\n    }\n    &__btn {\n        &-icon {\n            cursor: pointer;\n            border: none;\n        }\n    }\n    &__group {\n        display: flex;\n        border-radius: $BORDER_RADIUS;\n        border: solid 1px $COLOR_LIGHT_GRAY_2;\n\n        &-btn {\n            > * {\n                align-self: center;\n                margin: 0.5em;\n            }\n        }\n    }\n    &__form {\n        width: 18%;\n        min-width: 16em;\n\n        &-field {\n            margin-bottom: 0;\n            margin-top: 0.5em;\n        }\n    }\n}\n\n.dc-modal {\n    $saveload-modal : '&__modal--saveload';\n\n    &__container {\n        width: 450px;\n    }\n    &-header {\n        #{$saveload-modal} {\n            border-bottom: solid 1px;\n\n            @include themify($themes) {\n                border-color: themed('border_line');\n            }\n        }\n    }\n    &-content {\n        #{$saveload-modal} {\n            @include toEm(padding, 45px 24px 20px 24px);\n        }\n    }\n    &-row {\n        #{$saveload-modal} {\n            display: flex;\n            justify-content: center;\n        }\n    }\n    &-footer {\n        #{$saveload-modal} {\n            text-align: right;\n        }\n    }\n}\n\n.saveload-type {\n    $saveload: &;\n\n    &__checkbox {\n        border: solid 1px;\n        border-radius: $BORDER_RADIUS;\n        text-align: center;\n        cursor: pointer;\n        @include toEm(padding, 5px);\n\n        @include themify($themes) {\n            border-color: themed('border_line');\n        }\n\n        &-text {\n            @include typeface(--title-left-bold-black, none);\n        }\n        &-description {\n            @include toEm(margin-left, 22px);\n            @include typeface(--paragraph-left-normal-black, none);\n        }\n        &-disable {\n            @include themify($themes) {\n                border-color: themed('disable_color');\n            }\n\n            #{$saveload}__text {\n                @include themify($themes) {\n                    color: themed('disable_color');\n                }\n            }\n            .dc-checkbox__box {\n                @include themify($themes) {\n                    border-color: themed('disable_color');\n                }\n            }\n        }\n    }\n    &__container {\n        @include toEm(margin, 20px);\n        text-align: center;\n    }\n    &__icon {\n        @include toEm(margin, 0px 20px);\n    }\n    &__text {\n        @include typeface(--small-center-normal-black, capitalize);\n        font-weight: bold;\n        @include toEm(margin, 10px 0px);\n    }\n    &__drive-status {\n        @include themify($themes) {\n            color: themed('error_color');\n        }\n        cursor: pointer;\n        @include toEm(margin-top, 10px);\n    }\n}\n","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_BLACK_2    : #1d1f20;\n$COLOR_BLACK_3    : #0e0e0e;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_GREEN_4    : #00a79e;\n$COLOR_GREEN_5    : #4bb4b3;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_RED_2      : #cc2e3d;\n$COLOR_RED_3      : #ec3f3f;\n$COLOR_CORAL_RED  : #ff444f;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n$COLOR_BLUE       : #1c5ae3;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3         : #eaeced;\n$COLOR_LIGHT_GRAY_4         : #6e6e6e;\n$COLOR_LIGHT_GRAY_5         : #c2c2c2;\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n$COLOR_DARK_GRAY_4         : #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_BLACK, 0.28),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.6),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        digit_widget_background_color    : $COLOR_WHITE,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_DARK_GRAY_4,\n        digit_widget_selected            : $COLOR_GREEN_5,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_5, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_color        : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_LIGHT_GRAY_3,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_5,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_5,\n        digit_widget_value_color         : $COLOR_LIGHT_BLACK_1,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.12),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_LIGHT_GRAY_1,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_1, 0.12),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.28),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        digit_widget_background_color    : $COLOR_BLACK_3,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_LIGHT_GRAY_5,\n        digit_widget_selected            : $COLOR_GREEN_4,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_4, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_LIGHT_GRAY_5,\n        digit_widget_stroke_color        : $COLOR_LIGHT_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_BLACK_2,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_4,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_4,\n        digit_widget_value_color         : $COLOR_WHITE,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.28),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_WHITE,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n);\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon.active;\n        }\n*/\n\n%inline-icon {\n    @include themify($themes) {\n        @include colorIcon(themed('text_primary_color'), none);\n\n        &.active {\n            @include colorIcon(themed('navbar_background_color'), themed('navbar_active_color'), themed('navbar_active_color'), none);\n        }\n        &.disabled {\n            @include colorIcon(themed('disabled_color'), none);\n        }\n        &.white {\n            @include colorIcon(themed('text_color'));\n        }\n        &.border_hover_color {\n            @include colorIcon(themed('border_hover_color'));\n        }\n        &.secondary {\n            @include colorIcon(themed('text_secondary_color'));\n        }\n    }\n}\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n.btn{font-size:1rem;display:inline-block;touch-action:manipulation;cursor:pointer;white-space:nowrap;padding:0 1.6em;margin:1.6em;border:0;border-radius:4px;height:3.2em;min-width:9.6em;transition:all 0.2s cubic-bezier(0.65, 0.05, 0.36, 1);outline:0;position:relative;background:#39b19d}.btn__text{font-size:1.4em;color:rgba(0,0,0,0.8);font-weight:700;text-transform:unset;text-align:center;line-height:1.5}.btn--link{max-width:220px;margin:1em auto;display:flex;align-items:center;justify-content:center;text-decoration:none}.btn:not([disabled]):hover{text-decoration:none}.btn--primary .btn__text{color:#fff}.btn--primary--orange{background:#f93}.btn--primary--orange:hover:not([disabled]){background:rgba(255,153,51,0.84)}.btn--primary--orange:active:not([disabled]){background:#f93}.btn--primary--orange.effect:focus:not(:active):after{border:0 solid #f93}.btn--primary--green{background:#39b19d}.btn--primary--green:hover:not([disabled]){background:#2d9f93}.btn--primary--green:active:not([disabled]){background:#39b19d}.btn--primary--green.effect:focus:not(:active):after{border:0 solid #39b19d}.btn--primary:disabled,.btn--primary[disabled]{background:rgba(0,0,0,0.04);cursor:not-allowed}.btn--primary:disabled .btn__text,.btn--primary[disabled] .btn__text{color:rgba(0,0,0,0.04)}.btn--secondary{background:transparent}.btn--secondary--orange .btn__text{color:#f93}.btn--secondary--orange:hover:not([disabled]){background:rgba(255,153,51,0.16)}.btn--secondary--orange:active:not([disabled]){color:#f93}.btn--secondary--orange.effect:focus:not(:active):after{border:0 solid #f93}.btn--secondary--green{border:1px solid #39b19d}.btn--secondary--green .btn__text{color:#39b19d}.btn--secondary--green:hover:not([disabled]){border:1px solid #2d9f93;color:#2d9f93;background:rgba(76,175,80,0.1)}.btn--secondary--green:active:not([disabled]){border:1px solid #39b19d;color:#39b19d}.btn--secondary--green.effect:focus:not(:active):after{border:0 solid #39b19d}.btn--secondary:disabled,.btn--secondary[disabled]{background:rgba(0,0,0,0.04);border:0 !important;color:rgba(0,0,0,0.04) !important;cursor:not-allowed !important}.btn--flat{background:#fff}.btn--flat .btn__text{color:#4c5794}.btn--flat:hover:not([disabled]){background:#f2f3f8}.btn--flat:active:not([disabled]) span{color:#4c5794}.btn--flat.effect:focus:not(:active):after{border:0 solid #4c5794}.btn--flat:disabled,.btn--flat[disabled]{background:transparent !important;border:1px solid rgba(0,0,0,0.04) !important;cursor:not-allowed !important}.btn--flat:disabled .btn__text,.btn--flat[disabled] .btn__text{color:rgba(0,0,0,0.04) !important}.btn--alternate{background:rgba(153,156,172,0.32);border-color:rgba(153,156,172,0.32);padding:8px 0;text-align:center;line-height:100%;font-size:1.2em;font-weight:bold}.btn--alternate .btn__text{color:#0b0e18}.btn.effect:focus:not(:active):after{content:'';position:absolute;top:-0.1em;left:-0.1em;bottom:-0.1em;right:-0.1em;border-radius:inherit;border:0 solid #2a3052;opacity:0.4;animation:buttonEffect 0.4s;animation-fill-mode:forwards;display:block}@keyframes buttonEffect{to{opacity:0;top:-0.6em;left:-0.6em;bottom:-0.6em;right:-0.6em;border-width:6px}}\n\n","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_BLACK_2    : #1d1f20;\n$COLOR_BLACK_3    : #0e0e0e;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_GREEN_4    : #00a79e;\n$COLOR_GREEN_5    : #4bb4b3;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_RED_2      : #cc2e3d;\n$COLOR_RED_3      : #ec3f3f;\n$COLOR_CORAL_RED  : #ff444f;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n$COLOR_BLUE       : #1c5ae3;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3         : #eaeced;\n$COLOR_LIGHT_GRAY_4         : #6e6e6e;\n$COLOR_LIGHT_GRAY_5         : #c2c2c2;\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n$COLOR_DARK_GRAY_4         : #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_BLACK, 0.28),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.6),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        digit_widget_background_color    : $COLOR_WHITE,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_DARK_GRAY_4,\n        digit_widget_selected            : $COLOR_GREEN_5,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_5, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_color        : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_LIGHT_GRAY_3,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_5,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_5,\n        digit_widget_value_color         : $COLOR_LIGHT_BLACK_1,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.12),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_LIGHT_GRAY_1,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_1, 0.12),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.28),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        digit_widget_background_color    : $COLOR_BLACK_3,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_LIGHT_GRAY_5,\n        digit_widget_selected            : $COLOR_GREEN_4,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_4, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_LIGHT_GRAY_5,\n        digit_widget_stroke_color        : $COLOR_LIGHT_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_BLACK_2,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_4,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_4,\n        digit_widget_value_color         : $COLOR_WHITE,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.28),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_WHITE,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n);\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon.active;\n        }\n*/\n\n%inline-icon {\n    @include themify($themes) {\n        @include colorIcon(themed('text_primary_color'), none);\n\n        &.active {\n            @include colorIcon(themed('navbar_background_color'), themed('navbar_active_color'), themed('navbar_active_color'), none);\n        }\n        &.disabled {\n            @include colorIcon(themed('disabled_color'), none);\n        }\n        &.white {\n            @include colorIcon(themed('text_color'));\n        }\n        &.border_hover_color {\n            @include colorIcon(themed('border_hover_color'));\n        }\n        &.secondary {\n            @include colorIcon(themed('text_secondary_color'));\n        }\n    }\n}\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n.dc-field-error{position:absolute;top:4rem;text-align:left !important;padding:0 1.2rem;color:var(--color-red);font-size:var(--text-size-xs)}\n\n:root{--color-black: #0e0e0e;--color-black-2: #2a2a2a;--color-black-3: #333333;--color-black-4: #182039;--color-white: #ffffff;--color-red: #ff444f;--color-red-1: #dd573a;--color-red-2: #ffc9cc;--color-red-3: #d43e47;--color-grey-1: #f4f4f4;--color-grey-2: #e8e8e8;--color-grey-3: #646464;--color-grey-4: #fafbfb;--color-grey-5: #c2c2c2;--color-grey: #9b9b9b;--color-green: #85acb0;--color-blue: #4c76be;--color-blue-2: #365899;--text-size-xs: 1.2rem;--text-size-s: 1.6rem;--text-size-sm: 2rem;--text-size-m: 2.4rem;--text-size-l: 3.2rem;--text-size-xl: 4.8rem;--text-size-xxl: 6.4rem;--brand-dark-grey: #0e0e0e;--brand-strong-red: #cc2e3d;--brand-red-coral: #ff444f;--brand-orange: #ff6444;--brand-secondary: #85acb0}:root .theme--dark{--text-color: var(--color-white);--text-color-3: var(--color-white);--icon-general: var(--color-grey-5)}:root .theme--light{--text-color: var(--color-black);--text-color-3: var(--color-black-3);--icon-general: var(--color-black-3)}.dc-input{position:relative;width:100%;border-radius:4px;border:1px solid var(--color-grey-2);display:flex;align-items:center;margin-bottom:1.8rem}.dc-input:focus-within{border-color:var(--color-green)}.dc-input__field{background:none;color:var(--text-color);font-size:var(--text-size-s);padding:1rem 1.2rem;width:100%;height:3.8rem;display:block}.dc-input__field::placeholder{opacity:0;transition:opacity 0.25s}.dc-input__field--placeholder-visible::placeholder{opacity:0.7}.dc-input__field:focus{outline:none}.dc-input__field:focus ~ label{transform:translate(-1.6rem, -2.2rem) scale(0.75);color:var(--color-green);padding:0 4px}.theme--light .dc-input__field:focus ~ label{background-color:#fff}.theme--dark .dc-input__field:focus ~ label{background-color:#191c31}.dc-input__field:focus::placeholder{opacity:0.7}.dc-input__field:not(.dc-input--no-placeholder):not(:focus):valid ~ label{transform:translate(-1.6rem, -2.2rem) scale(0.75);color:var(--text-color-3);padding:0 4px}.theme--light .dc-input__field:not(.dc-input--no-placeholder):not(:focus):valid ~ label{background-color:#fff}.theme--dark .dc-input__field:not(.dc-input--no-placeholder):not(:focus):valid ~ label{background-color:#191c31}.dc-input__field[type=number]::-webkit-inner-spin-button,.dc-input__field[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.dc-input__leading-icon{margin-left:1rem;top:0.7rem;position:absolute;left:0;pointer-events:none;cursor:text;font-size:var(--text-size-s)}.dc-input__leading-icon+.dc-input__field{padding-left:calc(1rem + 11px)}.dc-input__trailing-icon{margin:0 1.2rem 0 0 !important}.dc-input__label{font-size:var(--text-size-s);position:absolute;pointer-events:none;left:1rem;top:1rem}.dc-input:not(.dc-input--no-placeholder)__label{color:var(--color-grey);transition:0.25s ease all;transform:translateZ(0)}.dc-input--no-placeholder label{transform:translate(-1.6rem, -2.2rem) scale(0.75);color:var(--color-green);padding:0 4px}.theme--light .dc-input--no-placeholder label{background-color:#fff}.theme--dark .dc-input--no-placeholder label{background-color:#191c31}\n\n","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_BLACK_2    : #1d1f20;\n$COLOR_BLACK_3    : #0e0e0e;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_GREEN_4    : #00a79e;\n$COLOR_GREEN_5    : #4bb4b3;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_RED_2      : #cc2e3d;\n$COLOR_RED_3      : #ec3f3f;\n$COLOR_CORAL_RED  : #ff444f;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n$COLOR_BLUE       : #1c5ae3;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3         : #eaeced;\n$COLOR_LIGHT_GRAY_4         : #6e6e6e;\n$COLOR_LIGHT_GRAY_5         : #c2c2c2;\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n$COLOR_DARK_GRAY_4         : #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_BLACK, 0.28),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.6),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        digit_widget_background_color    : $COLOR_WHITE,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_DARK_GRAY_4,\n        digit_widget_selected            : $COLOR_GREEN_5,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_5, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_color        : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_LIGHT_GRAY_3,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_5,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_5,\n        digit_widget_value_color         : $COLOR_LIGHT_BLACK_1,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.12),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_LIGHT_GRAY_1,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_1, 0.12),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.28),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        digit_widget_background_color    : $COLOR_BLACK_3,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_LIGHT_GRAY_5,\n        digit_widget_selected            : $COLOR_GREEN_4,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_4, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_LIGHT_GRAY_5,\n        digit_widget_stroke_color        : $COLOR_LIGHT_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_BLACK_2,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_4,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_4,\n        digit_widget_value_color         : $COLOR_WHITE,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.28),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_WHITE,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n);\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon.active;\n        }\n*/\n\n%inline-icon {\n    @include themify($themes) {\n        @include colorIcon(themed('text_primary_color'), none);\n\n        &.active {\n            @include colorIcon(themed('navbar_background_color'), themed('navbar_active_color'), themed('navbar_active_color'), none);\n        }\n        &.disabled {\n            @include colorIcon(themed('disabled_color'), none);\n        }\n        &.white {\n            @include colorIcon(themed('text_color'));\n        }\n        &.border_hover_color {\n            @include colorIcon(themed('border_hover_color'));\n        }\n        &.secondary {\n            @include colorIcon(themed('text_secondary_color'));\n        }\n    }\n}\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n.dc-checkbox{display:flex;justify-content:flex-start;cursor:pointer;align-items:center}.dc-checkbox__input{display:none}.dc-checkbox__box{display:block;width:16px;height:16px;transition:0.3s ease-in-out;flex-shrink:0;margin:2px 8px 0 0;border-radius:2px;align-self:flex-start;border:2px solid #7f8397}.dc-checkbox__box--active{border:none;background-color:#f93}\n\n","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_BLACK_2    : #1d1f20;\n$COLOR_BLACK_3    : #0e0e0e;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_GREEN_4    : #00a79e;\n$COLOR_GREEN_5    : #4bb4b3;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_RED_2      : #cc2e3d;\n$COLOR_RED_3      : #ec3f3f;\n$COLOR_CORAL_RED  : #ff444f;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n$COLOR_BLUE       : #1c5ae3;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3         : #eaeced;\n$COLOR_LIGHT_GRAY_4         : #6e6e6e;\n$COLOR_LIGHT_GRAY_5         : #c2c2c2;\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n$COLOR_DARK_GRAY_4         : #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_BLACK, 0.28),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.6),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        digit_widget_background_color    : $COLOR_WHITE,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_DARK_GRAY_4,\n        digit_widget_selected            : $COLOR_GREEN_5,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_5, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_color        : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_LIGHT_GRAY_3,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_5,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_5,\n        digit_widget_value_color         : $COLOR_LIGHT_BLACK_1,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.12),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_LIGHT_GRAY_1,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_1, 0.12),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.28),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        digit_widget_background_color    : $COLOR_BLACK_3,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_LIGHT_GRAY_5,\n        digit_widget_selected            : $COLOR_GREEN_4,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_4, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_LIGHT_GRAY_5,\n        digit_widget_stroke_color        : $COLOR_LIGHT_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_BLACK_2,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_4,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_4,\n        digit_widget_value_color         : $COLOR_WHITE,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.28),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_WHITE,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n);\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon.active;\n        }\n*/\n\n%inline-icon {\n    @include themify($themes) {\n        @include colorIcon(themed('text_primary_color'), none);\n\n        &.active {\n            @include colorIcon(themed('navbar_background_color'), themed('navbar_active_color'), themed('navbar_active_color'), none);\n        }\n        &.disabled {\n            @include colorIcon(themed('disabled_color'), none);\n        }\n        &.white {\n            @include colorIcon(themed('text_color'));\n        }\n        &.border_hover_color {\n            @include colorIcon(themed('border_hover_color'));\n        }\n        &.secondary {\n            @include colorIcon(themed('text_secondary_color'));\n        }\n    }\n}\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n.theme--light .dc-modal-header__close .color1-fill{fill:rgba(0,0,0,0.8)}.theme--light .dc-modal-header__close .color1-stroke{stroke:rgba(0,0,0,0.8)}.theme--dark .dc-modal-header__close .color1-fill{fill:#fff}.theme--dark .dc-modal-header__close .color1-stroke{stroke:#fff}.dc-modal__container{min-width:400px;position:relative;overflow:hidden;border-radius:4px;transition:transform 0.25s cubic-bezier(0.25, 0.1, 0.1, 0.25),opacity 0.25s cubic-bezier(0.25, 0.1, 0.1, 0.25)}.theme--light .dc-modal__container{background-color:#fff;box-shadow:0 4px 6px 0 rgba(0,0,0,0.4)}.theme--dark .dc-modal__container{background-color:#191c31;box-shadow:0 4px 6px 0 rgba(0,0,0,0.72)}.dc-modal__container--hide{display:none}.dc-modal__container--enter,.dc-modal__container--exit{transform:translateY(50px);opacity:0;pointer-events:none}.dc-modal__container--enter-done{transform:translateY(0);opacity:1;pointer-events:auto}.dc-modal-header{display:flex;justify-content:space-between;width:100%;line-height:24px;align-items:center}.dc-modal-header__title{font-size:1.6em;color:rgba(0,0,0,0.8);font-weight:700;text-transform:capitalize;text-align:left;line-height:1.75;line-height:24px;padding:16px}.theme--light .dc-modal-header__title{color:rgba(0,0,0,0.8)}.theme--dark .dc-modal-header__title{color:#fff}.dc-modal-header__section{flex-grow:1;padding:16px;line-height:24px}.dc-modal-header__close{display:block;cursor:pointer;padding-right:16px}\n\n","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_BLACK_2    : #1d1f20;\n$COLOR_BLACK_3    : #0e0e0e;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_GREEN_4    : #00a79e;\n$COLOR_GREEN_5    : #4bb4b3;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_RED_2      : #cc2e3d;\n$COLOR_RED_3      : #ec3f3f;\n$COLOR_CORAL_RED  : #ff444f;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n$COLOR_BLUE       : #1c5ae3;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3         : #eaeced;\n$COLOR_LIGHT_GRAY_4         : #6e6e6e;\n$COLOR_LIGHT_GRAY_5         : #c2c2c2;\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n$COLOR_DARK_GRAY_4         : #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_BLACK, 0.28),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.6),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        digit_widget_background_color    : $COLOR_WHITE,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_DARK_GRAY_4,\n        digit_widget_selected            : $COLOR_GREEN_5,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_5, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_color        : $COLOR_DARK_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_LIGHT_GRAY_3,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_5,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_5,\n        digit_widget_value_color         : $COLOR_LIGHT_BLACK_1,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.12),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        phase2_button_text               : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_LIGHT_GRAY_1,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_1, 0.12),\n        background_modal_shadow          : transparentize($COLOR_BLACK, 0.28),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        digit_widget_background_color    : $COLOR_BLACK_3,\n        digit_widget_last_spot           : $COLOR_WHITE,\n        digit_widget_loss                : $COLOR_RED_2,\n        digit_widget_percentage_color    : $COLOR_LIGHT_GRAY_5,\n        digit_widget_selected            : $COLOR_GREEN_4,\n        digit_widget_selected_bg         : transparentize($COLOR_GREEN_4, 0.92),\n        digit_widget_spot_border         : $COLOR_BLUE,\n        digit_widget_spot_text           : $COLOR_LIGHT_GRAY_5,\n        digit_widget_stroke_color        : $COLOR_LIGHT_GRAY_4,\n        digit_widget_stroke_bg_color     : $COLOR_BLACK_2,\n        digit_widget_stroke_max_color    : $COLOR_GREEN_4,\n        digit_widget_stroke_min_color    : $COLOR_RED_2,\n        digit_widget_win                 : $COLOR_GREEN_4,\n        digit_widget_value_color         : $COLOR_WHITE,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.28),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        phase2_button_text               : transparentize($COLOR_WHITE, 0.68),\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n        border_line                      : $COLOR_WHITE,\n        disable_color                    : $COLOR_LIGHT_GRAY_1,\n    ),\n);\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon.active;\n        }\n*/\n\n%inline-icon {\n    @include themify($themes) {\n        @include colorIcon(themed('text_primary_color'), none);\n\n        &.active {\n            @include colorIcon(themed('navbar_background_color'), themed('navbar_active_color'), themed('navbar_active_color'), none);\n        }\n        &.disabled {\n            @include colorIcon(themed('disabled_color'), none);\n        }\n        &.white {\n            @include colorIcon(themed('text_color'));\n        }\n        &.border_hover_color {\n            @include colorIcon(themed('border_hover_color'));\n        }\n        &.secondary {\n            @include colorIcon(themed('text_secondary_color'));\n        }\n    }\n}\n\n// /*\n//  * Devices breakpoints - TODO: define proper breakpoints\n//  */\n// @mixin breakpoints($val) {\n//     $big-desktop: '(max-width: 1800px)';\n//     $tab-land   : '(max-width: 1200px)';\n//     $tab-port   : '(max-width: 900px)';\n//     $phone-xl   : '(max-width: 599px)';\n//     $phone-lg   : '(max-width: 480px)';\n\n//     @if $val == big-desktop {\n//         @media #{$big-desktop} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-land {\n//         @media #{$tab-land} {\n//             @content;\n//         }\n//     }\n//     @else if $val == tab-port {\n//         @media #{$tab-port} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-xl {\n//         @media #{$phone-xl} {\n//             @content;\n//         }\n//     }\n//     @else if $val == phone-lg {\n//         @media #{$phone-lg} {\n//             @content;\n//         }\n//     }\n// }\n\n// Fonts\n@import 'deriv-shared/src/styles/google-fonts.scss';\n\n.btn--icon {\n    display: flex;\n\n    > * {\n        align-self: center;\n    }\n    &-text {\n        color: $COLOR-WHITE;\n        font-size: 1.4em;\n        font-weight: bold;\n        margin-left: 0.5em;\n    }\n}\n\nbutton:focus {\n    outline: none;\n}\n\n.vd {\n    width: 1px;\n    height: 50%;\n    background-color: $COLOR_LIGHT_GRAY_2;\n}\n\n.icon {\n    vertical-align: middle;\n}\n"],"sourceRoot":""}