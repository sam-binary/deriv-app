@import url(https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&subset=latin,vietnamese,cyrillic-ext,latin-ext,cyrillic);
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Implementation of themes
 * generate sets of themes keys object property (dark / light)
 * @param $themes - themes property
 * Usage example:
   @include themify($themes) { color: themed('background_color') }
 */
/*
 * Generate typefaces key-value pair of themefy object
 * Should be inside themify mixins
 * Example:
   @include themify($themes) { border-color: 1px solid themed('background_color') }
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Themified Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.flyout {
  position: absolute;
  left: 250px;
  background-color: #ffffff;
  max-height: calc(100% - 40px);
  z-index: 1;
  border-radius: 10px;
  padding: 25px;
  font-size: 2em;
  margin-left: 15px;
  margin-top: 20px;
  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.4);
  min-width: 400px; }
  .flyout__item:hover .flyout__button-add-hide {
    display: block; }
  .flyout__item:hover .flyout__item-info {
    text-decoration: underline; }
  .flyout__content {
    overflow: auto; }
  .flyout__block-workspace {
    margin-bottom: 15px; }
    .flyout__block-workspace * .blocklySvg {
      background-color: inherit !important; }
    .flyout__block-workspace * .blocklyMainBackground {
      stroke: none !important; }
  .flyout__button {
    border: none;
    border-radius: 4px;
    padding: 5px 20px;
    cursor: pointer;
    font-size: 14px;
    font-weight: bold;
    font-style: normal;
    font-stretch: normal;
    line-height: 1.43;
    letter-spacing: normal;
    text-align: center; }
    .flyout__button-new {
      width: 100%;
      font-size: 100%;
      box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.4);
      margin-bottom: 15px; }
    .flyout__button-add {
      background-color: #ff444f;
      color: #ffffff; }
      .flyout__button-add-hide {
        display: none; }
    .flyout__button-back {
      align-self: center;
      background-color: transparent;
      color: #000000; }
      .flyout__button-back:focus {
        outline: none; }
    .flyout__button-next, .flyout__button-previous {
      margin-left: 1em;
      color: rgba(0, 0, 0, 0.8);
      background-color: #f4f4f6; }
  .flyout__item {
    line-height: 1.3em;
    font-size: 14px; }
    .flyout__item:not(:last-of-type) {
      margin-bottom: 30px; }
    .flyout__item-header {
      display: flex;
      margin-top: 15px;
      margin-bottom: 10px; }
    .flyout__item-label {
      font-weight: bold;
      font-size: 18px;
      line-height: 2em; }
    .flyout__item-buttons {
      margin-left: auto;
      display: flex;
      justify-content: flex-end; }
    .flyout__item-info {
      cursor: pointer;
      font-weight: bold;
      color: #e31c4b; }
    .flyout__item-description {
      font-size: 14px;
      margin-bottom: 1em;
      line-height: 1.3em; }
  .flyout__image {
    width: 100%;
    height: auto;
    border-radius: 0.5em; }
  .flyout__video {
    width: 100%;
    height: 20vh;
    border-radius: 0.5em; }
  .flyout__help {
    padding: 0; }
    .flyout__help-header {
      padding: 1.2em 1em;
      display: flex;
      background-color: #f4f4f6; }
    .flyout__help-content {
      padding: 1.5em;
      font-size: 0.8em;
      overflow-y: auto;
      height: calc(100vh - 300px); }
      .flyout__help-content .flyout__item {
        margin-bottom: 0.8em; }
    .flyout__help-title {
      align-self: center;
      font-size: 25px;
      font-weight: bold; }
    .flyout__help-footer {
      text-align: right;
      padding: 1.2em 0.8em;
      border-top: solid 0.1em #f4f4f6; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Implementation of themes
 * generate sets of themes keys object property (dark / light)
 * @param $themes - themes property
 * Usage example:
   @include themify($themes) { color: themed('background_color') }
 */
/*
 * Generate typefaces key-value pair of themefy object
 * Should be inside themify mixins
 * Example:
   @include themify($themes) { border-color: 1px solid themed('background_color') }
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Themified Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
#scratch_area {
  position: absolute;
  height: 100%;
  width: 100%; }

#scratch_div {
  position: absolute;
  top: 0px !important; }

.blocklyText {
  fill: #000 !important; }

.blocklyMainWorkspaceScrollbar {
  display: none; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Implementation of themes
 * generate sets of themes keys object property (dark / light)
 * @param $themes - themes property
 * Usage example:
   @include themify($themes) { color: themed('background_color') }
 */
/*
 * Generate typefaces key-value pair of themefy object
 * Should be inside themify mixins
 * Example:
   @include themify($themes) { border-color: 1px solid themed('background_color') }
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Themified Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.toolbox {
  background-color: #fff;
  border: 1px solid #ebebeb;
  border-top-right-radius: 10px;
  border-bottom-right-radius: 10px;
  display: flex;
  flex-direction: column;
  margin-top: 20px;
  max-height: calc(100% - 40px);
  overflow: hidden;
  position: absolute;
  user-select: none;
  z-index: 1;
  width: 250px; }
  .toolbox__header {
    padding: 0.5em;
    position: relative;
    font-weight: bold;
    font-size: 1.6em;
    background-color: #f4f4f6;
    text-align: center; }
  .toolbox__item {
    display: flex;
    flex-direction: row; }
  .toolbox__category-arrow {
    display: flex;
    margin: auto; }
    .toolbox__category-arrow--back {
      margin-left: 10px;
      fill: #333;
      transform: rotate(90deg); }
    .toolbox__category-arrow--open {
      margin-right: 10px;
      transform: rotate(270deg); }
  .toolbox__category-colour {
    width: 5px;
    flex-shrink: 0; }
  .toolbox__category--search .toolbox__category-colour {
    background-color: #afffda; }
  .toolbox__category-return .toolbox__category--search {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--trade_parameters .toolbox__category-colour {
    background-color: #30409f; }
  .toolbox__category-return .toolbox__category--trade_parameters {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--purchase_conditions .toolbox__category-colour {
    background-color: #00897b; }
  .toolbox__category-return .toolbox__category--purchase_conditions {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--sell_conditions .toolbox__category-colour {
    background-color: #78909c; }
  .toolbox__category-return .toolbox__category--sell_conditions {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--trade_results .toolbox__category-colour {
    background-color: #d81a60; }
  .toolbox__category-return .toolbox__category--trade_results {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--contract_details .toolbox__category-colour {
    background-color: #d81a60; }
  .toolbox__category-return .toolbox__category--contract_details {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--technical_analysis .toolbox__category-colour {
    background-color: #689e38; }
  .toolbox__category-return .toolbox__category--technical_analysis {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--utility .toolbox__category-colour {
    background-color: #8e25aa; }
  .toolbox__category-return .toolbox__category--utility {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--math .toolbox__category-colour {
    background-color: #fc8b01; }
  .toolbox__category-return .toolbox__category--math {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--text .toolbox__category-colour {
    background-color: #5d4037; }
  .toolbox__category-return .toolbox__category--text {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--logic .toolbox__category-colour {
    background-color: #1876d2; }
  .toolbox__category-return .toolbox__category--logic {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--lists .toolbox__category-colour {
    background-color: #e53836; }
  .toolbox__category-return .toolbox__category--lists {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--custom_functions .toolbox__category-colour {
    background-color: #00acc1; }
  .toolbox__category-return .toolbox__category--custom_functions {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--variables .toolbox__category-colour {
    background-color: #616161; }
  .toolbox__category-return .toolbox__category--variables {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category--loops .toolbox__category-colour {
    background-color: #afb42b; }
  .toolbox__category-return .toolbox__category--loops {
    background-color: #ebebeb;
    color: #333;
    max-height: 38px; }
  .toolbox__category-menu {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-height: 0;
    overflow-y: auto;
    overflow-x: hidden; }
  .toolbox__category-return {
    cursor: pointer;
    text-align: center; }
    .toolbox__category-return .toolbox__label {
      margin-left: -20px; }
  .toolbox__category-text {
    align-self: center;
    margin: 10px;
    width: 100%; }
  .toolbox__description {
    font-size: 12px;
    line-height: 1.4; }
  .toolbox__icon {
    display: flex;
    align-self: center;
    margin-right: 10px; }
    .toolbox__icon > svg {
      height: 25px;
      width: 25px; }
  .toolbox__label {
    font-weight: bold;
    font-size: 14px;
    line-height: 1.4; }
  .toolbox__row {
    cursor: pointer;
    border-top: 1px solid #ebebeb; }
    .toolbox__row:last-of-type {
      border-bottom: 1px solid #ebebeb; }
    .toolbox__row .toolbox__category--search:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(175, 255, 218, 0.2) 100%); }
    .toolbox__row .toolbox__category--search.toolbox__category--selected {
      background-color: rgba(175, 255, 218, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--trade_parameters:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(48, 64, 159, 0.2) 100%); }
    .toolbox__row .toolbox__category--trade_parameters.toolbox__category--selected {
      background-color: rgba(48, 64, 159, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--purchase_conditions:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(0, 137, 123, 0.2) 100%); }
    .toolbox__row .toolbox__category--purchase_conditions.toolbox__category--selected {
      background-color: rgba(0, 137, 123, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--sell_conditions:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(120, 144, 156, 0.2) 100%); }
    .toolbox__row .toolbox__category--sell_conditions.toolbox__category--selected {
      background-color: rgba(120, 144, 156, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--trade_results:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(216, 26, 96, 0.2) 100%); }
    .toolbox__row .toolbox__category--trade_results.toolbox__category--selected {
      background-color: rgba(216, 26, 96, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--contract_details:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(216, 26, 96, 0.2) 100%); }
    .toolbox__row .toolbox__category--contract_details.toolbox__category--selected {
      background-color: rgba(216, 26, 96, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--technical_analysis:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(104, 158, 56, 0.2) 100%); }
    .toolbox__row .toolbox__category--technical_analysis.toolbox__category--selected {
      background-color: rgba(104, 158, 56, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--utility:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(142, 37, 170, 0.2) 100%); }
    .toolbox__row .toolbox__category--utility.toolbox__category--selected {
      background-color: rgba(142, 37, 170, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--math:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(252, 139, 1, 0.2) 100%); }
    .toolbox__row .toolbox__category--math.toolbox__category--selected {
      background-color: rgba(252, 139, 1, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--text:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(93, 64, 55, 0.2) 100%); }
    .toolbox__row .toolbox__category--text.toolbox__category--selected {
      background-color: rgba(93, 64, 55, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--logic:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(24, 118, 210, 0.2) 100%); }
    .toolbox__row .toolbox__category--logic.toolbox__category--selected {
      background-color: rgba(24, 118, 210, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--lists:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(229, 56, 54, 0.2) 100%); }
    .toolbox__row .toolbox__category--lists.toolbox__category--selected {
      background-color: rgba(229, 56, 54, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--custom_functions:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(0, 172, 193, 0.2) 100%); }
    .toolbox__row .toolbox__category--custom_functions.toolbox__category--selected {
      background-color: rgba(0, 172, 193, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--variables:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(97, 97, 97, 0.2) 100%); }
    .toolbox__row .toolbox__category--variables.toolbox__category--selected {
      background-color: rgba(97, 97, 97, 0.1);
      transition: background-color 0.25s ease; }
    .toolbox__row .toolbox__category--loops:hover:not(.toolbox__category--selected) {
      background-image: linear-gradient(to right, #fff 25%, rgba(175, 180, 43, 0.2) 100%); }
    .toolbox__row .toolbox__category--loops.toolbox__category--selected {
      background-color: rgba(175, 180, 43, 0.1);
      transition: background-color 0.25s ease; }
  .toolbox__separator {
    padding: 10px 0;
    border-top: 1px solid #ebebeb; }
  .toolbox #search_input {
    padding: 10px;
    border-radius: 5px;
    border: solid #f4f4f6 1px;
    margin: 3px;
    font-size: 14px;
    font-weight: 700; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Implementation of themes
 * generate sets of themes keys object property (dark / light)
 * @param $themes - themes property
 * Usage example:
   @include themify($themes) { color: themed('background_color') }
 */
/*
 * Generate typefaces key-value pair of themefy object
 * Should be inside themify mixins
 * Example:
   @include themify($themes) { border-color: 1px solid themed('background_color') }
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Themified Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/*------------------------------------*
 *  # Reset SCSS
 *  - to make browsers render all elements more consistently
 *  - Reference:  https://github.com/AdamMarsden/simple-typography/blob/master/_reset.scss
 *------------------------------------*/
/* stylelint-disable */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, input, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

html {
  height: 100%; }

body {
  line-height: 1;
  height: 100%; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/* stylelint-enable */
.main {
  background: rgba(206, 17, 17, 0.5); }


/*# sourceMappingURL=bot.css.map*/